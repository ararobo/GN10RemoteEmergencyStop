ARM GAS  /tmp/ccAcVt01.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART1_UART_Init:
  27              	.LFB123:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****  ******************************************************************************
   4:Core/Src/usart.c ****  * @file    usart.c
   5:Core/Src/usart.c ****  * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****  *          of the USART instances.
   7:Core/Src/usart.c ****  ******************************************************************************
   8:Core/Src/usart.c ****  * @attention
   9:Core/Src/usart.c ****  *
  10:Core/Src/usart.c ****  * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/usart.c ****  * All rights reserved.
  12:Core/Src/usart.c ****  *
  13:Core/Src/usart.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****  * in the root directory of this software component.
  15:Core/Src/usart.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****  *
  17:Core/Src/usart.c ****  ******************************************************************************
  18:Core/Src/usart.c ****  */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART1 init function */
ARM GAS  /tmp/ccAcVt01.s 			page 2


  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  33:Core/Src/usart.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  42:Core/Src/usart.c ****   huart1.Instance = USART1;
  38              		.loc 1 42 3 view .LVU1
  39              		.loc 1 42 19 is_stmt 0 view .LVU2
  40 0002 0B48     		ldr	r0, .L5
  41 0004 0B4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  43:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  43              		.loc 1 43 3 is_stmt 1 view .LVU3
  44              		.loc 1 43 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  44:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 44 3 is_stmt 1 view .LVU5
  48              		.loc 1 44 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  45:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 45 3 is_stmt 1 view .LVU7
  52              		.loc 1 45 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  46:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 46 3 is_stmt 1 view .LVU9
  55              		.loc 1 46 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  47:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 47 3 is_stmt 1 view .LVU11
  58              		.loc 1 47 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  48:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 48 3 is_stmt 1 view .LVU13
  62              		.loc 1 48 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  49:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 49 3 is_stmt 1 view .LVU15
  65              		.loc 1 49 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccAcVt01.s 			page 3


  50:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  67              		.loc 1 50 3 is_stmt 1 view .LVU17
  68              		.loc 1 50 30 is_stmt 0 view .LVU18
  69 001e 0362     		str	r3, [r0, #32]
  51:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  70              		.loc 1 51 3 is_stmt 1 view .LVU19
  71              		.loc 1 51 38 is_stmt 0 view .LVU20
  72 0020 4362     		str	r3, [r0, #36]
  52:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  73              		.loc 1 52 3 is_stmt 1 view .LVU21
  74              		.loc 1 52 7 is_stmt 0 view .LVU22
  75 0022 FFF7FEFF 		bl	HAL_UART_Init
  76              	.LVL0:
  77              		.loc 1 52 6 view .LVU23
  78 0026 00B9     		cbnz	r0, .L4
  79              	.L1:
  53:Core/Src/usart.c ****   {
  54:Core/Src/usart.c ****     Error_Handler();
  55:Core/Src/usart.c ****   }
  56:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  59:Core/Src/usart.c **** }
  80              		.loc 1 59 1 view .LVU24
  81 0028 08BD     		pop	{r3, pc}
  82              	.L4:
  54:Core/Src/usart.c ****   }
  83              		.loc 1 54 5 is_stmt 1 view .LVU25
  84 002a FFF7FEFF 		bl	Error_Handler
  85              	.LVL1:
  86              		.loc 1 59 1 is_stmt 0 view .LVU26
  87 002e FBE7     		b	.L1
  88              	.L6:
  89              		.align	2
  90              	.L5:
  91 0030 00000000 		.word	.LANCHOR0
  92 0034 00380140 		.word	1073821696
  93              		.cfi_endproc
  94              	.LFE123:
  96              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  97              		.align	1
  98              		.global	MX_USART2_UART_Init
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu fpv4-sp-d16
 104              	MX_USART2_UART_Init:
 105              	.LFB124:
  60:Core/Src/usart.c **** /* USART2 init function */
  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  63:Core/Src/usart.c **** {
 106              		.loc 1 63 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccAcVt01.s 			page 4


 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
  64:Core/Src/usart.c **** 
  65:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
  66:Core/Src/usart.c **** 
  67:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  70:Core/Src/usart.c **** 
  71:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  72:Core/Src/usart.c ****   huart2.Instance = USART2;
 115              		.loc 1 72 3 view .LVU28
 116              		.loc 1 72 19 is_stmt 0 view .LVU29
 117 0002 0B48     		ldr	r0, .L11
 118 0004 0B4B     		ldr	r3, .L11+4
 119 0006 0360     		str	r3, [r0]
  73:Core/Src/usart.c ****   huart2.Init.BaudRate = 9600;
 120              		.loc 1 73 3 is_stmt 1 view .LVU30
 121              		.loc 1 73 24 is_stmt 0 view .LVU31
 122 0008 4FF41653 		mov	r3, #9600
 123 000c 4360     		str	r3, [r0, #4]
  74:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 124              		.loc 1 74 3 is_stmt 1 view .LVU32
 125              		.loc 1 74 26 is_stmt 0 view .LVU33
 126 000e 0023     		movs	r3, #0
 127 0010 8360     		str	r3, [r0, #8]
  75:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 128              		.loc 1 75 3 is_stmt 1 view .LVU34
 129              		.loc 1 75 24 is_stmt 0 view .LVU35
 130 0012 C360     		str	r3, [r0, #12]
  76:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 131              		.loc 1 76 3 is_stmt 1 view .LVU36
 132              		.loc 1 76 22 is_stmt 0 view .LVU37
 133 0014 0361     		str	r3, [r0, #16]
  77:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 134              		.loc 1 77 3 is_stmt 1 view .LVU38
 135              		.loc 1 77 20 is_stmt 0 view .LVU39
 136 0016 0C22     		movs	r2, #12
 137 0018 4261     		str	r2, [r0, #20]
  78:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 138              		.loc 1 78 3 is_stmt 1 view .LVU40
 139              		.loc 1 78 25 is_stmt 0 view .LVU41
 140 001a 8361     		str	r3, [r0, #24]
  79:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 141              		.loc 1 79 3 is_stmt 1 view .LVU42
 142              		.loc 1 79 28 is_stmt 0 view .LVU43
 143 001c C361     		str	r3, [r0, #28]
  80:Core/Src/usart.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 144              		.loc 1 80 3 is_stmt 1 view .LVU44
 145              		.loc 1 80 30 is_stmt 0 view .LVU45
 146 001e 0362     		str	r3, [r0, #32]
  81:Core/Src/usart.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 147              		.loc 1 81 3 is_stmt 1 view .LVU46
 148              		.loc 1 81 38 is_stmt 0 view .LVU47
 149 0020 4362     		str	r3, [r0, #36]
ARM GAS  /tmp/ccAcVt01.s 			page 5


  82:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 150              		.loc 1 82 3 is_stmt 1 view .LVU48
 151              		.loc 1 82 7 is_stmt 0 view .LVU49
 152 0022 FFF7FEFF 		bl	HAL_UART_Init
 153              	.LVL2:
 154              		.loc 1 82 6 view .LVU50
 155 0026 00B9     		cbnz	r0, .L10
 156              	.L7:
  83:Core/Src/usart.c ****   {
  84:Core/Src/usart.c ****     Error_Handler();
  85:Core/Src/usart.c ****   }
  86:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  87:Core/Src/usart.c **** 
  88:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
  89:Core/Src/usart.c **** }
 157              		.loc 1 89 1 view .LVU51
 158 0028 08BD     		pop	{r3, pc}
 159              	.L10:
  84:Core/Src/usart.c ****   }
 160              		.loc 1 84 5 is_stmt 1 view .LVU52
 161 002a FFF7FEFF 		bl	Error_Handler
 162              	.LVL3:
 163              		.loc 1 89 1 is_stmt 0 view .LVU53
 164 002e FBE7     		b	.L7
 165              	.L12:
 166              		.align	2
 167              	.L11:
 168 0030 00000000 		.word	.LANCHOR1
 169 0034 00440040 		.word	1073759232
 170              		.cfi_endproc
 171              	.LFE124:
 173              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 174              		.align	1
 175              		.global	HAL_UART_MspInit
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	HAL_UART_MspInit:
 182              	.LVL4:
 183              	.LFB125:
  90:Core/Src/usart.c **** 
  91:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef *uartHandle)
  92:Core/Src/usart.c **** {
 184              		.loc 1 92 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 40
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		.loc 1 92 1 is_stmt 0 view .LVU55
 189 0000 00B5     		push	{lr}
 190              	.LCFI2:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 14, -4
 193 0002 8BB0     		sub	sp, sp, #44
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 48
  93:Core/Src/usart.c **** 
ARM GAS  /tmp/ccAcVt01.s 			page 6


  94:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 196              		.loc 1 94 3 is_stmt 1 view .LVU56
 197              		.loc 1 94 20 is_stmt 0 view .LVU57
 198 0004 0023     		movs	r3, #0
 199 0006 0593     		str	r3, [sp, #20]
 200 0008 0693     		str	r3, [sp, #24]
 201 000a 0793     		str	r3, [sp, #28]
 202 000c 0893     		str	r3, [sp, #32]
 203 000e 0993     		str	r3, [sp, #36]
  95:Core/Src/usart.c ****   if (uartHandle->Instance == USART1)
 204              		.loc 1 95 3 is_stmt 1 view .LVU58
 205              		.loc 1 95 17 is_stmt 0 view .LVU59
 206 0010 0368     		ldr	r3, [r0]
 207              		.loc 1 95 6 view .LVU60
 208 0012 2A4A     		ldr	r2, .L19
 209 0014 9342     		cmp	r3, r2
 210 0016 05D0     		beq	.L17
  96:Core/Src/usart.c ****   {
  97:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_MspInit 0 */
  98:Core/Src/usart.c **** 
  99:Core/Src/usart.c ****     /* USER CODE END USART1_MspInit 0 */
 100:Core/Src/usart.c ****     /* USART1 clock enable */
 101:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 102:Core/Src/usart.c **** 
 103:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 104:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 105:Core/Src/usart.c ****     PA9     ------> USART1_TX
 106:Core/Src/usart.c ****     PA10     ------> USART1_RX
 107:Core/Src/usart.c ****     */
 108:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
 109:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 110:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 111:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 112:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 113:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_MspInit 1 */
 116:Core/Src/usart.c **** 
 117:Core/Src/usart.c ****     /* USER CODE END USART1_MspInit 1 */
 118:Core/Src/usart.c ****   }
 119:Core/Src/usart.c ****   else if (uartHandle->Instance == USART2)
 211              		.loc 1 119 8 is_stmt 1 view .LVU61
 212              		.loc 1 119 11 is_stmt 0 view .LVU62
 213 0018 294A     		ldr	r2, .L19+4
 214 001a 9342     		cmp	r3, r2
 215 001c 24D0     		beq	.L18
 216              	.LVL5:
 217              	.L13:
 120:Core/Src/usart.c ****   {
 121:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_MspInit 0 */
 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c ****     /* USER CODE END USART2_MspInit 0 */
 124:Core/Src/usart.c ****     /* USART2 clock enable */
 125:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 126:Core/Src/usart.c **** 
 127:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 128:Core/Src/usart.c ****     /**USART2 GPIO Configuration
ARM GAS  /tmp/ccAcVt01.s 			page 7


 129:Core/Src/usart.c ****     PA2     ------> USART2_TX
 130:Core/Src/usart.c ****     PA3     ------> USART2_RX
 131:Core/Src/usart.c ****     */
 132:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 133:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 134:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 135:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 136:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 137:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 138:Core/Src/usart.c **** 
 139:Core/Src/usart.c ****     /* USART2 interrupt Init */
 140:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 141:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 142:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_MspInit 1 */
 143:Core/Src/usart.c **** 
 144:Core/Src/usart.c ****     /* USER CODE END USART2_MspInit 1 */
 145:Core/Src/usart.c ****   }
 146:Core/Src/usart.c **** }
 218              		.loc 1 146 1 view .LVU63
 219 001e 0BB0     		add	sp, sp, #44
 220              	.LCFI4:
 221              		.cfi_remember_state
 222              		.cfi_def_cfa_offset 4
 223              		@ sp needed
 224 0020 5DF804FB 		ldr	pc, [sp], #4
 225              	.LVL6:
 226              	.L17:
 227              	.LCFI5:
 228              		.cfi_restore_state
 101:Core/Src/usart.c **** 
 229              		.loc 1 101 5 is_stmt 1 view .LVU64
 230              	.LBB2:
 101:Core/Src/usart.c **** 
 231              		.loc 1 101 5 view .LVU65
 101:Core/Src/usart.c **** 
 232              		.loc 1 101 5 view .LVU66
 233 0024 274B     		ldr	r3, .L19+8
 234 0026 9A69     		ldr	r2, [r3, #24]
 235 0028 42F48042 		orr	r2, r2, #16384
 236 002c 9A61     		str	r2, [r3, #24]
 101:Core/Src/usart.c **** 
 237              		.loc 1 101 5 view .LVU67
 238 002e 9A69     		ldr	r2, [r3, #24]
 239 0030 02F48042 		and	r2, r2, #16384
 240 0034 0192     		str	r2, [sp, #4]
 101:Core/Src/usart.c **** 
 241              		.loc 1 101 5 view .LVU68
 242 0036 019A     		ldr	r2, [sp, #4]
 243              	.LBE2:
 101:Core/Src/usart.c **** 
 244              		.loc 1 101 5 view .LVU69
 103:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 245              		.loc 1 103 5 view .LVU70
 246              	.LBB3:
 103:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 247              		.loc 1 103 5 view .LVU71
 103:Core/Src/usart.c ****     /**USART1 GPIO Configuration
ARM GAS  /tmp/ccAcVt01.s 			page 8


 248              		.loc 1 103 5 view .LVU72
 249 0038 5A69     		ldr	r2, [r3, #20]
 250 003a 42F40032 		orr	r2, r2, #131072
 251 003e 5A61     		str	r2, [r3, #20]
 103:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 252              		.loc 1 103 5 view .LVU73
 253 0040 5B69     		ldr	r3, [r3, #20]
 254 0042 03F40033 		and	r3, r3, #131072
 255 0046 0293     		str	r3, [sp, #8]
 103:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 256              		.loc 1 103 5 view .LVU74
 257 0048 029B     		ldr	r3, [sp, #8]
 258              	.LBE3:
 103:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 259              		.loc 1 103 5 view .LVU75
 108:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 260              		.loc 1 108 5 view .LVU76
 108:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 261              		.loc 1 108 25 is_stmt 0 view .LVU77
 262 004a 4FF4C063 		mov	r3, #1536
 263 004e 0593     		str	r3, [sp, #20]
 109:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 264              		.loc 1 109 5 is_stmt 1 view .LVU78
 109:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 265              		.loc 1 109 26 is_stmt 0 view .LVU79
 266 0050 0223     		movs	r3, #2
 267 0052 0693     		str	r3, [sp, #24]
 110:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 268              		.loc 1 110 5 is_stmt 1 view .LVU80
 111:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 269              		.loc 1 111 5 view .LVU81
 111:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 270              		.loc 1 111 27 is_stmt 0 view .LVU82
 271 0054 0323     		movs	r3, #3
 272 0056 0893     		str	r3, [sp, #32]
 112:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 273              		.loc 1 112 5 is_stmt 1 view .LVU83
 112:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 274              		.loc 1 112 31 is_stmt 0 view .LVU84
 275 0058 0723     		movs	r3, #7
 276 005a 0993     		str	r3, [sp, #36]
 113:Core/Src/usart.c **** 
 277              		.loc 1 113 5 is_stmt 1 view .LVU85
 278 005c 05A9     		add	r1, sp, #20
 279 005e 4FF09040 		mov	r0, #1207959552
 280              	.LVL7:
 113:Core/Src/usart.c **** 
 281              		.loc 1 113 5 is_stmt 0 view .LVU86
 282 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 283              	.LVL8:
 284 0066 DAE7     		b	.L13
 285              	.LVL9:
 286              	.L18:
 125:Core/Src/usart.c **** 
 287              		.loc 1 125 5 is_stmt 1 view .LVU87
 288              	.LBB4:
 125:Core/Src/usart.c **** 
ARM GAS  /tmp/ccAcVt01.s 			page 9


 289              		.loc 1 125 5 view .LVU88
 125:Core/Src/usart.c **** 
 290              		.loc 1 125 5 view .LVU89
 291 0068 164B     		ldr	r3, .L19+8
 292 006a DA69     		ldr	r2, [r3, #28]
 293 006c 42F40032 		orr	r2, r2, #131072
 294 0070 DA61     		str	r2, [r3, #28]
 125:Core/Src/usart.c **** 
 295              		.loc 1 125 5 view .LVU90
 296 0072 DA69     		ldr	r2, [r3, #28]
 297 0074 02F40032 		and	r2, r2, #131072
 298 0078 0392     		str	r2, [sp, #12]
 125:Core/Src/usart.c **** 
 299              		.loc 1 125 5 view .LVU91
 300 007a 039A     		ldr	r2, [sp, #12]
 301              	.LBE4:
 125:Core/Src/usart.c **** 
 302              		.loc 1 125 5 view .LVU92
 127:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 303              		.loc 1 127 5 view .LVU93
 304              	.LBB5:
 127:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 305              		.loc 1 127 5 view .LVU94
 127:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 306              		.loc 1 127 5 view .LVU95
 307 007c 5A69     		ldr	r2, [r3, #20]
 308 007e 42F40032 		orr	r2, r2, #131072
 309 0082 5A61     		str	r2, [r3, #20]
 127:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 310              		.loc 1 127 5 view .LVU96
 311 0084 5B69     		ldr	r3, [r3, #20]
 312 0086 03F40033 		and	r3, r3, #131072
 313 008a 0493     		str	r3, [sp, #16]
 127:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 314              		.loc 1 127 5 view .LVU97
 315 008c 049B     		ldr	r3, [sp, #16]
 316              	.LBE5:
 127:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 317              		.loc 1 127 5 view .LVU98
 132:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 318              		.loc 1 132 5 view .LVU99
 132:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 319              		.loc 1 132 25 is_stmt 0 view .LVU100
 320 008e 0C23     		movs	r3, #12
 321 0090 0593     		str	r3, [sp, #20]
 133:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 322              		.loc 1 133 5 is_stmt 1 view .LVU101
 133:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 323              		.loc 1 133 26 is_stmt 0 view .LVU102
 324 0092 0223     		movs	r3, #2
 325 0094 0693     		str	r3, [sp, #24]
 134:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 326              		.loc 1 134 5 is_stmt 1 view .LVU103
 135:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 327              		.loc 1 135 5 view .LVU104
 135:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 328              		.loc 1 135 27 is_stmt 0 view .LVU105
ARM GAS  /tmp/ccAcVt01.s 			page 10


 329 0096 0323     		movs	r3, #3
 330 0098 0893     		str	r3, [sp, #32]
 136:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 331              		.loc 1 136 5 is_stmt 1 view .LVU106
 136:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 332              		.loc 1 136 31 is_stmt 0 view .LVU107
 333 009a 0723     		movs	r3, #7
 334 009c 0993     		str	r3, [sp, #36]
 137:Core/Src/usart.c **** 
 335              		.loc 1 137 5 is_stmt 1 view .LVU108
 336 009e 05A9     		add	r1, sp, #20
 337 00a0 4FF09040 		mov	r0, #1207959552
 338              	.LVL10:
 137:Core/Src/usart.c **** 
 339              		.loc 1 137 5 is_stmt 0 view .LVU109
 340 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL11:
 140:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 342              		.loc 1 140 5 is_stmt 1 view .LVU110
 343 00a8 0022     		movs	r2, #0
 344 00aa 1146     		mov	r1, r2
 345 00ac 2620     		movs	r0, #38
 346 00ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 347              	.LVL12:
 141:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_MspInit 1 */
 348              		.loc 1 141 5 view .LVU111
 349 00b2 2620     		movs	r0, #38
 350 00b4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 351              	.LVL13:
 352              		.loc 1 146 1 is_stmt 0 view .LVU112
 353 00b8 B1E7     		b	.L13
 354              	.L20:
 355 00ba 00BF     		.align	2
 356              	.L19:
 357 00bc 00380140 		.word	1073821696
 358 00c0 00440040 		.word	1073759232
 359 00c4 00100240 		.word	1073876992
 360              		.cfi_endproc
 361              	.LFE125:
 363              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 364              		.align	1
 365              		.global	HAL_UART_MspDeInit
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	HAL_UART_MspDeInit:
 372              	.LVL14:
 373              	.LFB126:
 147:Core/Src/usart.c **** 
 148:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef *uartHandle)
 149:Core/Src/usart.c **** {
 374              		.loc 1 149 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		.loc 1 149 1 is_stmt 0 view .LVU114
ARM GAS  /tmp/ccAcVt01.s 			page 11


 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI6:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
 150:Core/Src/usart.c **** 
 151:Core/Src/usart.c ****   if (uartHandle->Instance == USART1)
 384              		.loc 1 151 3 is_stmt 1 view .LVU115
 385              		.loc 1 151 17 is_stmt 0 view .LVU116
 386 0002 0368     		ldr	r3, [r0]
 387              		.loc 1 151 6 view .LVU117
 388 0004 114A     		ldr	r2, .L27
 389 0006 9342     		cmp	r3, r2
 390 0008 03D0     		beq	.L25
 152:Core/Src/usart.c ****   {
 153:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_MspDeInit 0 */
 154:Core/Src/usart.c **** 
 155:Core/Src/usart.c ****     /* USER CODE END USART1_MspDeInit 0 */
 156:Core/Src/usart.c ****     /* Peripheral clock disable */
 157:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 158:Core/Src/usart.c **** 
 159:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 160:Core/Src/usart.c ****     PA9     ------> USART1_TX
 161:Core/Src/usart.c ****     PA10     ------> USART1_RX
 162:Core/Src/usart.c ****     */
 163:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9 | GPIO_PIN_10);
 164:Core/Src/usart.c **** 
 165:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_MspDeInit 1 */
 166:Core/Src/usart.c **** 
 167:Core/Src/usart.c ****     /* USER CODE END USART1_MspDeInit 1 */
 168:Core/Src/usart.c ****   }
 169:Core/Src/usart.c ****   else if (uartHandle->Instance == USART2)
 391              		.loc 1 169 8 is_stmt 1 view .LVU118
 392              		.loc 1 169 11 is_stmt 0 view .LVU119
 393 000a 114A     		ldr	r2, .L27+4
 394 000c 9342     		cmp	r3, r2
 395 000e 0DD0     		beq	.L26
 396              	.LVL15:
 397              	.L21:
 170:Core/Src/usart.c ****   {
 171:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_MspDeInit 0 */
 172:Core/Src/usart.c **** 
 173:Core/Src/usart.c ****     /* USER CODE END USART2_MspDeInit 0 */
 174:Core/Src/usart.c ****     /* Peripheral clock disable */
 175:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 176:Core/Src/usart.c **** 
 177:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 178:Core/Src/usart.c ****     PA2     ------> USART2_TX
 179:Core/Src/usart.c ****     PA3     ------> USART2_RX
 180:Core/Src/usart.c ****     */
 181:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2 | GPIO_PIN_3);
 182:Core/Src/usart.c **** 
 183:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 184:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 185:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_MspDeInit 1 */
 186:Core/Src/usart.c **** 
 187:Core/Src/usart.c ****     /* USER CODE END USART2_MspDeInit 1 */
ARM GAS  /tmp/ccAcVt01.s 			page 12


 188:Core/Src/usart.c ****   }
 189:Core/Src/usart.c **** }
 398              		.loc 1 189 1 view .LVU120
 399 0010 08BD     		pop	{r3, pc}
 400              	.LVL16:
 401              	.L25:
 157:Core/Src/usart.c **** 
 402              		.loc 1 157 5 is_stmt 1 view .LVU121
 403 0012 02F55842 		add	r2, r2, #55296
 404 0016 9369     		ldr	r3, [r2, #24]
 405 0018 23F48043 		bic	r3, r3, #16384
 406 001c 9361     		str	r3, [r2, #24]
 163:Core/Src/usart.c **** 
 407              		.loc 1 163 5 view .LVU122
 408 001e 4FF4C061 		mov	r1, #1536
 409 0022 4FF09040 		mov	r0, #1207959552
 410              	.LVL17:
 163:Core/Src/usart.c **** 
 411              		.loc 1 163 5 is_stmt 0 view .LVU123
 412 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 413              	.LVL18:
 414 002a F1E7     		b	.L21
 415              	.LVL19:
 416              	.L26:
 175:Core/Src/usart.c **** 
 417              		.loc 1 175 5 is_stmt 1 view .LVU124
 418 002c 02F5E632 		add	r2, r2, #117760
 419 0030 D369     		ldr	r3, [r2, #28]
 420 0032 23F40033 		bic	r3, r3, #131072
 421 0036 D361     		str	r3, [r2, #28]
 181:Core/Src/usart.c **** 
 422              		.loc 1 181 5 view .LVU125
 423 0038 0C21     		movs	r1, #12
 424 003a 4FF09040 		mov	r0, #1207959552
 425              	.LVL20:
 181:Core/Src/usart.c **** 
 426              		.loc 1 181 5 is_stmt 0 view .LVU126
 427 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 428              	.LVL21:
 184:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_MspDeInit 1 */
 429              		.loc 1 184 5 is_stmt 1 view .LVU127
 430 0042 2620     		movs	r0, #38
 431 0044 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 432              	.LVL22:
 433              		.loc 1 189 1 is_stmt 0 view .LVU128
 434 0048 E2E7     		b	.L21
 435              	.L28:
 436 004a 00BF     		.align	2
 437              	.L27:
 438 004c 00380140 		.word	1073821696
 439 0050 00440040 		.word	1073759232
 440              		.cfi_endproc
 441              	.LFE126:
 443              		.global	huart2
 444              		.global	huart1
 445              		.section	.bss.huart1,"aw",%nobits
 446              		.align	2
ARM GAS  /tmp/ccAcVt01.s 			page 13


 447              		.set	.LANCHOR0,. + 0
 450              	huart1:
 451 0000 00000000 		.space	136
 451      00000000 
 451      00000000 
 451      00000000 
 451      00000000 
 452              		.section	.bss.huart2,"aw",%nobits
 453              		.align	2
 454              		.set	.LANCHOR1,. + 0
 457              	huart2:
 458 0000 00000000 		.space	136
 458      00000000 
 458      00000000 
 458      00000000 
 458      00000000 
 459              		.text
 460              	.Letext0:
 461              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 462              		.file 3 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 463              		.file 4 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 464              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 465              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 466              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 467              		.file 8 "Core/Inc/usart.h"
 468              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 469              		.file 10 "Core/Inc/main.h"
ARM GAS  /tmp/ccAcVt01.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccAcVt01.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccAcVt01.s:26     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccAcVt01.s:91     .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/ccAcVt01.s:97     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccAcVt01.s:104    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccAcVt01.s:168    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccAcVt01.s:174    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccAcVt01.s:181    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccAcVt01.s:357    .text.HAL_UART_MspInit:00000000000000bc $d
     /tmp/ccAcVt01.s:364    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccAcVt01.s:371    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccAcVt01.s:438    .text.HAL_UART_MspDeInit:000000000000004c $d
     /tmp/ccAcVt01.s:457    .bss.huart2:0000000000000000 huart2
     /tmp/ccAcVt01.s:450    .bss.huart1:0000000000000000 huart1
     /tmp/ccAcVt01.s:446    .bss.huart1:0000000000000000 $d
     /tmp/ccAcVt01.s:453    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
