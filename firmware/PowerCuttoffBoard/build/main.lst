ARM GAS  /tmp/ccwAWQoV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              		.fnstart
  28              	.LFB125:
  29              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.cpp ****   * in the root directory of this software component.
  14:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   ******************************************************************************
  17:Core/Src/main.cpp ****   */
  18:Core/Src/main.cpp **** /* USER CODE END Header */
  19:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.cpp **** #include "main.h"
  21:Core/Src/main.cpp **** #include "can.h"
  22:Core/Src/main.cpp **** #include "usart.h"
  23:Core/Src/main.cpp **** #include "gpio.h"
  24:Core/Src/main.cpp **** 
  25:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.cpp **** 
  28:Core/Src/main.cpp **** /* USER CODE END Includes */
  29:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccwAWQoV.s 			page 2


  30:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.cpp **** 
  33:Core/Src/main.cpp **** /* USER CODE END PTD */
  34:Core/Src/main.cpp **** 
  35:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  37:Core/Src/main.cpp **** 
  38:Core/Src/main.cpp **** /* USER CODE END PD */
  39:Core/Src/main.cpp **** 
  40:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  42:Core/Src/main.cpp **** 
  43:Core/Src/main.cpp **** /* USER CODE END PM */
  44:Core/Src/main.cpp **** 
  45:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.cpp **** 
  47:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  48:Core/Src/main.cpp **** 
  49:Core/Src/main.cpp **** /* USER CODE END PV */
  50:Core/Src/main.cpp **** 
  51:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.cpp **** void SystemClock_Config(void);
  53:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** /* USER CODE END PFP */
  56:Core/Src/main.cpp **** 
  57:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.cpp **** 
  60:Core/Src/main.cpp **** /* USER CODE END 0 */
  61:Core/Src/main.cpp **** 
  62:Core/Src/main.cpp **** /**
  63:Core/Src/main.cpp ****   * @brief  The application entry point.
  64:Core/Src/main.cpp ****   * @retval int
  65:Core/Src/main.cpp ****   */
  66:Core/Src/main.cpp **** int main(void)
  67:Core/Src/main.cpp **** {
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.cpp **** 
  71:Core/Src/main.cpp ****   /* USER CODE END 1 */
  72:Core/Src/main.cpp **** 
  73:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.cpp **** 
  75:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.cpp ****   HAL_Init();
  77:Core/Src/main.cpp **** 
  78:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.cpp **** 
  80:Core/Src/main.cpp ****   /* USER CODE END Init */
  81:Core/Src/main.cpp **** 
  82:Core/Src/main.cpp ****   /* Configure the system clock */
  83:Core/Src/main.cpp ****   SystemClock_Config();
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccwAWQoV.s 			page 3


  87:Core/Src/main.cpp ****   /* USER CODE END SysInit */
  88:Core/Src/main.cpp **** 
  89:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
  90:Core/Src/main.cpp ****   MX_GPIO_Init();
  91:Core/Src/main.cpp ****   MX_CAN_Init();
  92:Core/Src/main.cpp ****   MX_USART1_UART_Init();
  93:Core/Src/main.cpp ****   MX_USART2_UART_Init();
  94:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp ****   /* USER CODE END 2 */
  97:Core/Src/main.cpp **** 
  98:Core/Src/main.cpp ****   /* Infinite loop */
  99:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 100:Core/Src/main.cpp ****   while (1)
 101:Core/Src/main.cpp ****   {
 102:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 103:Core/Src/main.cpp **** 
 104:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 105:Core/Src/main.cpp ****   }
 106:Core/Src/main.cpp ****   /* USER CODE END 3 */
 107:Core/Src/main.cpp **** }
 108:Core/Src/main.cpp **** 
 109:Core/Src/main.cpp **** /**
 110:Core/Src/main.cpp ****   * @brief System Clock Configuration
 111:Core/Src/main.cpp ****   * @retval None
 112:Core/Src/main.cpp ****   */
 113:Core/Src/main.cpp **** void SystemClock_Config(void)
 114:Core/Src/main.cpp **** {
 115:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 117:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 118:Core/Src/main.cpp **** 
 119:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.cpp ****   */
 122:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 123:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 124:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 125:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 126:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 127:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 128:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129:Core/Src/main.cpp ****   {
 130:Core/Src/main.cpp ****     Error_Handler();
 131:Core/Src/main.cpp ****   }
 132:Core/Src/main.cpp **** 
 133:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 134:Core/Src/main.cpp ****   */
 135:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 136:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 137:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 138:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 140:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141:Core/Src/main.cpp **** 
 142:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 143:Core/Src/main.cpp ****   {
ARM GAS  /tmp/ccwAWQoV.s 			page 4


 144:Core/Src/main.cpp ****     Error_Handler();
 145:Core/Src/main.cpp ****   }
 146:Core/Src/main.cpp ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 147:Core/Src/main.cpp ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 148:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 149:Core/Src/main.cpp ****   {
 150:Core/Src/main.cpp ****     Error_Handler();
 151:Core/Src/main.cpp ****   }
 152:Core/Src/main.cpp **** }
 153:Core/Src/main.cpp **** 
 154:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 155:Core/Src/main.cpp **** 
 156:Core/Src/main.cpp **** /* USER CODE END 4 */
 157:Core/Src/main.cpp **** 
 158:Core/Src/main.cpp **** /**
 159:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 160:Core/Src/main.cpp ****   * @retval None
 161:Core/Src/main.cpp ****   */
 162:Core/Src/main.cpp **** void Error_Handler(void)
 163:Core/Src/main.cpp **** {
  30              		.loc 1 163 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
 164:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 165:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 166:Core/Src/main.cpp ****   __disable_irq();
  36              		.loc 1 166 3 view .LVU1
  37              	.LBB4:
  38              	.LBI4:
  39              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwAWQoV.s 			page 5


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccwAWQoV.s 			page 6


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /tmp/ccwAWQoV.s 			page 7


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  40              		.loc 2 140 27 view .LVU2
  41              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  42              		.loc 2 142 3 view .LVU3
  43              		.syntax unified
  44              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  45 0000 72B6     		cpsid i
  46              	@ 0 "" 2
  47              		.thumb
  48              		.syntax unified
  49              	.L2:
  50              	.LBE5:
  51              	.LBE4:
 167:Core/Src/main.cpp ****   while (1)
  52              		.loc 1 167 3 discriminator 1 view .LVU4
  53              		.loc 1 167 3 discriminator 1 view .LVU5
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE125:
  57              		.cantunwind
  58              		.fnend
  60              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  61              		.align	1
  62              		.global	_Z18SystemClock_Configv
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	_Z18SystemClock_Configv:
  69              		.fnstart
  70              	.LFB124:
 114:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  71              		.loc 1 114 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 88
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 00B5     		push	{lr}
  76              		.save {lr}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 14, -4
  80              		.pad #92
  81 0002 97B0     		sub	sp, sp, #92
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 96
 115:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  84              		.loc 1 115 3 view .LVU7
 115:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  85              		.loc 1 115 22 is_stmt 0 view .LVU8
  86 0004 2822     		movs	r2, #40
  87 0006 0021     		movs	r1, #0
  88 0008 0CA8     		add	r0, sp, #48
  89 000a FFF7FEFF 		bl	memset
  90              	.LVL0:
ARM GAS  /tmp/ccwAWQoV.s 			page 8


 116:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  91              		.loc 1 116 3 is_stmt 1 view .LVU9
 116:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  92              		.loc 1 116 22 is_stmt 0 view .LVU10
  93 000e 0023     		movs	r3, #0
  94 0010 0793     		str	r3, [sp, #28]
  95 0012 0893     		str	r3, [sp, #32]
  96 0014 0993     		str	r3, [sp, #36]
  97 0016 0A93     		str	r3, [sp, #40]
  98 0018 0B93     		str	r3, [sp, #44]
 117:Core/Src/main.cpp **** 
  99              		.loc 1 117 3 is_stmt 1 view .LVU11
 117:Core/Src/main.cpp **** 
 100              		.loc 1 117 28 is_stmt 0 view .LVU12
 101 001a 0193     		str	r3, [sp, #4]
 102 001c 0293     		str	r3, [sp, #8]
 103 001e 0393     		str	r3, [sp, #12]
 104 0020 0493     		str	r3, [sp, #16]
 105 0022 0593     		str	r3, [sp, #20]
 106 0024 0693     		str	r3, [sp, #24]
 122:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 107              		.loc 1 122 3 is_stmt 1 view .LVU13
 122:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 108              		.loc 1 122 36 is_stmt 0 view .LVU14
 109 0026 0223     		movs	r3, #2
 110 0028 0C93     		str	r3, [sp, #48]
 123:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 111              		.loc 1 123 3 is_stmt 1 view .LVU15
 123:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 112              		.loc 1 123 30 is_stmt 0 view .LVU16
 113 002a 0122     		movs	r2, #1
 114 002c 1092     		str	r2, [sp, #64]
 124:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 115              		.loc 1 124 3 is_stmt 1 view .LVU17
 124:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 116              		.loc 1 124 41 is_stmt 0 view .LVU18
 117 002e 1022     		movs	r2, #16
 118 0030 1192     		str	r2, [sp, #68]
 125:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 119              		.loc 1 125 3 is_stmt 1 view .LVU19
 125:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 120              		.loc 1 125 34 is_stmt 0 view .LVU20
 121 0032 1393     		str	r3, [sp, #76]
 126:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 122              		.loc 1 126 3 is_stmt 1 view .LVU21
 127:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 123              		.loc 1 127 3 view .LVU22
 127:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 124              		.loc 1 127 32 is_stmt 0 view .LVU23
 125 0034 4FF46013 		mov	r3, #3670016
 126 0038 1593     		str	r3, [sp, #84]
 128:Core/Src/main.cpp ****   {
 127              		.loc 1 128 3 is_stmt 1 view .LVU24
 128:Core/Src/main.cpp ****   {
 128              		.loc 1 128 24 is_stmt 0 view .LVU25
 129 003a 0CA8     		add	r0, sp, #48
 130 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /tmp/ccwAWQoV.s 			page 9


 131              	.LVL1:
 128:Core/Src/main.cpp ****   {
 132              		.loc 1 128 3 view .LVU26
 133 0040 C0B9     		cbnz	r0, .L8
 135:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 134              		.loc 1 135 3 is_stmt 1 view .LVU27
 135:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135              		.loc 1 135 31 is_stmt 0 view .LVU28
 136 0042 0F23     		movs	r3, #15
 137 0044 0793     		str	r3, [sp, #28]
 137:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 138              		.loc 1 137 3 is_stmt 1 view .LVU29
 137:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139              		.loc 1 137 34 is_stmt 0 view .LVU30
 140 0046 0221     		movs	r1, #2
 141 0048 0891     		str	r1, [sp, #32]
 138:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 142              		.loc 1 138 3 is_stmt 1 view .LVU31
 138:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 143              		.loc 1 138 35 is_stmt 0 view .LVU32
 144 004a 0023     		movs	r3, #0
 145 004c 0993     		str	r3, [sp, #36]
 139:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 146              		.loc 1 139 3 is_stmt 1 view .LVU33
 139:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 139 36 is_stmt 0 view .LVU34
 148 004e 4FF48062 		mov	r2, #1024
 149 0052 0A92     		str	r2, [sp, #40]
 140:Core/Src/main.cpp **** 
 150              		.loc 1 140 3 is_stmt 1 view .LVU35
 140:Core/Src/main.cpp **** 
 151              		.loc 1 140 36 is_stmt 0 view .LVU36
 152 0054 0B93     		str	r3, [sp, #44]
 142:Core/Src/main.cpp ****   {
 153              		.loc 1 142 3 is_stmt 1 view .LVU37
 142:Core/Src/main.cpp ****   {
 154              		.loc 1 142 26 is_stmt 0 view .LVU38
 155 0056 07A8     		add	r0, sp, #28
 156 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 157              	.LVL2:
 142:Core/Src/main.cpp ****   {
 158              		.loc 1 142 3 view .LVU39
 159 005c 60B9     		cbnz	r0, .L9
 146:Core/Src/main.cpp ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 160              		.loc 1 146 3 is_stmt 1 view .LVU40
 146:Core/Src/main.cpp ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 161              		.loc 1 146 38 is_stmt 0 view .LVU41
 162 005e 0123     		movs	r3, #1
 163 0060 0193     		str	r3, [sp, #4]
 147:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 164              		.loc 1 147 3 is_stmt 1 view .LVU42
 147:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 165              		.loc 1 147 38 is_stmt 0 view .LVU43
 166 0062 0023     		movs	r3, #0
 167 0064 0393     		str	r3, [sp, #12]
 148:Core/Src/main.cpp ****   {
 168              		.loc 1 148 3 is_stmt 1 view .LVU44
ARM GAS  /tmp/ccwAWQoV.s 			page 10


 148:Core/Src/main.cpp ****   {
 169              		.loc 1 148 32 is_stmt 0 view .LVU45
 170 0066 01A8     		add	r0, sp, #4
 171 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 172              	.LVL3:
 148:Core/Src/main.cpp ****   {
 173              		.loc 1 148 3 view .LVU46
 174 006c 30B9     		cbnz	r0, .L10
 152:Core/Src/main.cpp **** 
 175              		.loc 1 152 1 view .LVU47
 176 006e 17B0     		add	sp, sp, #92
 177              	.LCFI2:
 178              		.cfi_remember_state
 179              		.cfi_def_cfa_offset 4
 180              		@ sp needed
 181 0070 5DF804FB 		ldr	pc, [sp], #4
 182              	.L8:
 183              	.LCFI3:
 184              		.cfi_restore_state
 130:Core/Src/main.cpp ****   }
 185              		.loc 1 130 5 is_stmt 1 view .LVU48
 130:Core/Src/main.cpp ****   }
 186              		.loc 1 130 18 is_stmt 0 view .LVU49
 187 0074 FFF7FEFF 		bl	Error_Handler
 188              	.LVL4:
 189              	.L9:
 144:Core/Src/main.cpp ****   }
 190              		.loc 1 144 5 is_stmt 1 view .LVU50
 144:Core/Src/main.cpp ****   }
 191              		.loc 1 144 18 is_stmt 0 view .LVU51
 192 0078 FFF7FEFF 		bl	Error_Handler
 193              	.LVL5:
 194              	.L10:
 150:Core/Src/main.cpp ****   }
 195              		.loc 1 150 5 is_stmt 1 view .LVU52
 150:Core/Src/main.cpp ****   }
 196              		.loc 1 150 18 is_stmt 0 view .LVU53
 197 007c FFF7FEFF 		bl	Error_Handler
 198              	.LVL6:
 199              		.cfi_endproc
 200              	.LFE124:
 201              		.fnend
 203              		.section	.text.main,"ax",%progbits
 204              		.align	1
 205              		.global	main
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	main:
 212              		.fnstart
 213              	.LFB123:
  67:Core/Src/main.cpp **** 
 214              		.loc 1 67 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwAWQoV.s 			page 11


 218 0000 08B5     		push	{r3, lr}
 219              		.save {r3, lr}
 220              	.LCFI4:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
  76:Core/Src/main.cpp **** 
 224              		.loc 1 76 3 view .LVU55
  76:Core/Src/main.cpp **** 
 225              		.loc 1 76 11 is_stmt 0 view .LVU56
 226 0002 FFF7FEFF 		bl	HAL_Init
 227              	.LVL7:
  83:Core/Src/main.cpp **** 
 228              		.loc 1 83 3 is_stmt 1 view .LVU57
  83:Core/Src/main.cpp **** 
 229              		.loc 1 83 21 is_stmt 0 view .LVU58
 230 0006 FFF7FEFF 		bl	_Z18SystemClock_Configv
 231              	.LVL8:
  90:Core/Src/main.cpp ****   MX_CAN_Init();
 232              		.loc 1 90 3 is_stmt 1 view .LVU59
  90:Core/Src/main.cpp ****   MX_CAN_Init();
 233              		.loc 1 90 15 is_stmt 0 view .LVU60
 234 000a FFF7FEFF 		bl	MX_GPIO_Init
 235              	.LVL9:
  91:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 236              		.loc 1 91 3 is_stmt 1 view .LVU61
  91:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 237              		.loc 1 91 14 is_stmt 0 view .LVU62
 238 000e FFF7FEFF 		bl	MX_CAN_Init
 239              	.LVL10:
  92:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 240              		.loc 1 92 3 is_stmt 1 view .LVU63
  92:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 241              		.loc 1 92 22 is_stmt 0 view .LVU64
 242 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 243              	.LVL11:
  93:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 244              		.loc 1 93 3 is_stmt 1 view .LVU65
  93:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 245              		.loc 1 93 22 is_stmt 0 view .LVU66
 246 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 247              	.LVL12:
 248              	.L12:
 100:Core/Src/main.cpp ****   {
 249              		.loc 1 100 3 is_stmt 1 discriminator 1 view .LVU67
 100:Core/Src/main.cpp ****   {
 250              		.loc 1 100 3 discriminator 1 view .LVU68
 251 001a FEE7     		b	.L12
 252              		.cfi_endproc
 253              	.LFE123:
 254              		.fnend
 256              		.text
 257              	.Letext0:
 258              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 259              		.file 4 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 260              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 261              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
ARM GAS  /tmp/ccwAWQoV.s 			page 12


 262              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 263              		.file 8 "Core/Inc/gpio.h"
 264              		.file 9 "Core/Inc/can.h"
 265              		.file 10 "Core/Inc/usart.h"
ARM GAS  /tmp/ccwAWQoV.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccwAWQoV.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccwAWQoV.s:26     .text.Error_Handler:0000000000000000 Error_Handler
    .ARM.exidx.text.Error_Handler:0000000000000000 $d
     /tmp/ccwAWQoV.s:61     .text._Z18SystemClock_Configv:0000000000000000 $t
     /tmp/ccwAWQoV.s:68     .text._Z18SystemClock_Configv:0000000000000000 _Z18SystemClock_Configv
.ARM.exidx.text._Z18SystemClock_Configv:0000000000000000 $d
     /tmp/ccwAWQoV.s:204    .text.main:0000000000000000 $t
     /tmp/ccwAWQoV.s:211    .text.main:0000000000000000 main
             .ARM.extab.text.main:0000000000000000 $d
             .ARM.exidx.text.main:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_unwind_cpp_pr0
HAL_Init
MX_GPIO_Init
MX_CAN_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
__aeabi_unwind_cpp_pr1
