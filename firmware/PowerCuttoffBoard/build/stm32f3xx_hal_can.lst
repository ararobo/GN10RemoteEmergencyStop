ARM GAS  /tmp/ccqrYTdR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_CAN_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_CAN_MspInit:
  27              	.LVL0:
  28              	.LFB125:
  29              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @file    stm32f3xx_hal_can.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @attention
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   @verbatim
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
ARM GAS  /tmp/ccqrYTdR.s 			page 2


  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Configure CAN pins as alternate function
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           functions:
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           messages.
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           can be used:
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  message.
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  message.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       ==============================
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
ARM GAS  /tmp/ccqrYTdR.s 			page 3


  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Then request transmission of a message using
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       ================================
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           here.
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       ==================
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           be completed.
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           will be entered.
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   =============================================
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
ARM GAS  /tmp/ccqrYTdR.s 			page 4


 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   weak function.
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  /tmp/ccqrYTdR.s 			page 5


 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #include "stm32f3xx_hal.h"
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @addtogroup STM32F3xx_HAL_Driver
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if defined(CAN)
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #define CAN_WAKEUP_TIMEOUT_COUNTER 1000000U
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief    Initialization and Configuration functions
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
ARM GAS  /tmp/ccqrYTdR.s 			page 6


 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan == NULL)
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
ARM GAS  /tmp/ccqrYTdR.s 			page 7


 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Request initialisation */
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Wait initialisation acknowledge */
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Update error code */
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Change CAN state */
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_ERROR;
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Exit from sleep mode */
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Update error code */
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Change CAN state */
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 8


 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_ERROR;
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the time triggered communication mode */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the automatic bus-off management */
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the automatic wake-up mode */
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the automatic retransmission */
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the transmit FIFO priority */
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
ARM GAS  /tmp/ccqrYTdR.s 			page 9


 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set the bit timing register */
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Initialize the error code */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Initialize the CAN state */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         reset values.
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan == NULL)
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Stop the CAN module */
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
ARM GAS  /tmp/ccqrYTdR.s 			page 10


 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Reset the CAN peripheral */
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
  30              		.loc 1 508 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
  35              		.loc 1 510 3 view .LVU1
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
  36              		.loc 1 515 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE125:
  41              		.section	.text.HAL_CAN_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_CAN_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_CAN_Init:
  50              	.LVL1:
  51              	.LFB123:
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
  52              		.loc 1 276 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  56              		.loc 1 277 3 view .LVU4
ARM GAS  /tmp/ccqrYTdR.s 			page 11


 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  57              		.loc 1 280 3 view .LVU5
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  58              		.loc 1 280 6 is_stmt 0 view .LVU6
  59 0000 0028     		cmp	r0, #0
  60 0002 00F0A180 		beq	.L21
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
  61              		.loc 1 276 1 view .LVU7
  62 0006 38B5     		push	{r3, r4, r5, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 16
  65              		.cfi_offset 3, -16
  66              		.cfi_offset 4, -12
  67              		.cfi_offset 5, -8
  68              		.cfi_offset 14, -4
  69 0008 0446     		mov	r4, r0
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  70              		.loc 1 286 3 is_stmt 1 view .LVU8
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  71              		.loc 1 287 3 view .LVU9
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  72              		.loc 1 288 3 view .LVU10
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  73              		.loc 1 289 3 view .LVU11
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  74              		.loc 1 290 3 view .LVU12
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  75              		.loc 1 291 3 view .LVU13
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  76              		.loc 1 292 3 view .LVU14
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  77              		.loc 1 293 3 view .LVU15
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  78              		.loc 1 294 3 view .LVU16
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  79              		.loc 1 295 3 view .LVU17
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  80              		.loc 1 296 3 view .LVU18
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  81              		.loc 1 297 3 view .LVU19
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  82              		.loc 1 327 3 view .LVU20
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  83              		.loc 1 327 11 is_stmt 0 view .LVU21
  84 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
  85              		.loc 1 327 6 view .LVU22
  86 000e D3B1     		cbz	r3, .L26
  87              	.LVL2:
  88              	.L4:
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  89              		.loc 1 335 3 is_stmt 1 view .LVU23
  90 0010 2268     		ldr	r2, [r4]
  91 0012 1368     		ldr	r3, [r2]
  92 0014 43F00103 		orr	r3, r3, #1
  93 0018 1360     		str	r3, [r2]
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 12


  94              		.loc 1 338 3 view .LVU24
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  95              		.loc 1 338 15 is_stmt 0 view .LVU25
  96 001a FFF7FEFF 		bl	HAL_GetTick
  97              	.LVL3:
  98 001e 0546     		mov	r5, r0
  99              	.LVL4:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 100              		.loc 1 341 3 is_stmt 1 view .LVU26
 101              	.L5:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 102              		.loc 1 341 9 view .LVU27
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 103              		.loc 1 341 15 is_stmt 0 view .LVU28
 104 0020 2368     		ldr	r3, [r4]
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 105              		.loc 1 341 25 view .LVU29
 106 0022 5A68     		ldr	r2, [r3, #4]
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 107              		.loc 1 341 9 view .LVU30
 108 0024 12F0010F 		tst	r2, #1
 109 0028 10D1     		bne	.L27
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 110              		.loc 1 343 5 is_stmt 1 view .LVU31
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 111              		.loc 1 343 10 is_stmt 0 view .LVU32
 112 002a FFF7FEFF 		bl	HAL_GetTick
 113              	.LVL5:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 114              		.loc 1 343 24 view .LVU33
 115 002e 401B     		subs	r0, r0, r5
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 116              		.loc 1 343 8 view .LVU34
 117 0030 0A28     		cmp	r0, #10
 118 0032 F5D9     		bls	.L5
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 119              		.loc 1 346 7 is_stmt 1 view .LVU35
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 120              		.loc 1 346 23 is_stmt 0 view .LVU36
 121 0034 636A     		ldr	r3, [r4, #36]
 122 0036 43F40033 		orr	r3, r3, #131072
 123 003a 6362     		str	r3, [r4, #36]
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 124              		.loc 1 349 7 is_stmt 1 view .LVU37
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 125              		.loc 1 349 19 is_stmt 0 view .LVU38
 126 003c 0523     		movs	r3, #5
 127 003e 84F82030 		strb	r3, [r4, #32]
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 128              		.loc 1 351 7 is_stmt 1 view .LVU39
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 129              		.loc 1 351 14 is_stmt 0 view .LVU40
 130 0042 0120     		movs	r0, #1
 131              	.L3:
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 132              		.loc 1 451 1 view .LVU41
 133 0044 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccqrYTdR.s 			page 13


 134              	.LVL6:
 135              	.L26:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 136              		.loc 1 330 5 is_stmt 1 view .LVU42
 137 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 138              	.LVL7:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 139              		.loc 1 330 5 is_stmt 0 view .LVU43
 140 004a E1E7     		b	.L4
 141              	.LVL8:
 142              	.L27:
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 143              		.loc 1 356 3 is_stmt 1 view .LVU44
 144 004c 1A68     		ldr	r2, [r3]
 145 004e 22F00202 		bic	r2, r2, #2
 146 0052 1A60     		str	r2, [r3]
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 147              		.loc 1 359 3 view .LVU45
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 148              		.loc 1 359 15 is_stmt 0 view .LVU46
 149 0054 FFF7FEFF 		bl	HAL_GetTick
 150              	.LVL9:
 151 0058 0546     		mov	r5, r0
 152              	.LVL10:
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 153              		.loc 1 362 3 is_stmt 1 view .LVU47
 154              	.L7:
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 155              		.loc 1 362 9 view .LVU48
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 156              		.loc 1 362 15 is_stmt 0 view .LVU49
 157 005a 2368     		ldr	r3, [r4]
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 158              		.loc 1 362 25 view .LVU50
 159 005c 5A68     		ldr	r2, [r3, #4]
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 160              		.loc 1 362 9 view .LVU51
 161 005e 12F0020F 		tst	r2, #2
 162 0062 0DD0     		beq	.L28
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 163              		.loc 1 364 5 is_stmt 1 view .LVU52
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 164              		.loc 1 364 10 is_stmt 0 view .LVU53
 165 0064 FFF7FEFF 		bl	HAL_GetTick
 166              	.LVL11:
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 167              		.loc 1 364 24 view .LVU54
 168 0068 401B     		subs	r0, r0, r5
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 169              		.loc 1 364 8 view .LVU55
 170 006a 0A28     		cmp	r0, #10
 171 006c F5D9     		bls	.L7
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 172              		.loc 1 367 7 is_stmt 1 view .LVU56
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 173              		.loc 1 367 23 is_stmt 0 view .LVU57
 174 006e 636A     		ldr	r3, [r4, #36]
ARM GAS  /tmp/ccqrYTdR.s 			page 14


 175 0070 43F40033 		orr	r3, r3, #131072
 176 0074 6362     		str	r3, [r4, #36]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 177              		.loc 1 370 7 is_stmt 1 view .LVU58
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 178              		.loc 1 370 19 is_stmt 0 view .LVU59
 179 0076 0523     		movs	r3, #5
 180 0078 84F82030 		strb	r3, [r4, #32]
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 181              		.loc 1 372 7 is_stmt 1 view .LVU60
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 182              		.loc 1 372 14 is_stmt 0 view .LVU61
 183 007c 0120     		movs	r0, #1
 184 007e E1E7     		b	.L3
 185              	.L28:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 186              		.loc 1 377 3 is_stmt 1 view .LVU62
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 187              		.loc 1 377 17 is_stmt 0 view .LVU63
 188 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 189              		.loc 1 377 6 view .LVU64
 190 0082 012A     		cmp	r2, #1
 191 0084 3DD0     		beq	.L29
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 192              		.loc 1 383 5 is_stmt 1 view .LVU65
 193 0086 1A68     		ldr	r2, [r3]
 194 0088 22F08002 		bic	r2, r2, #128
 195 008c 1A60     		str	r2, [r3]
 196              	.L10:
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 197              		.loc 1 387 3 view .LVU66
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 198              		.loc 1 387 17 is_stmt 0 view .LVU67
 199 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 200              		.loc 1 387 6 view .LVU68
 201 0090 012B     		cmp	r3, #1
 202 0092 3BD0     		beq	.L30
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 203              		.loc 1 393 5 is_stmt 1 view .LVU69
 204 0094 2268     		ldr	r2, [r4]
 205 0096 1368     		ldr	r3, [r2]
 206 0098 23F04003 		bic	r3, r3, #64
 207 009c 1360     		str	r3, [r2]
 208              	.L12:
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 209              		.loc 1 397 3 view .LVU70
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 210              		.loc 1 397 17 is_stmt 0 view .LVU71
 211 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 212              		.loc 1 397 6 view .LVU72
 213 00a0 012B     		cmp	r3, #1
 214 00a2 39D0     		beq	.L31
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 215              		.loc 1 403 5 is_stmt 1 view .LVU73
ARM GAS  /tmp/ccqrYTdR.s 			page 15


 216 00a4 2268     		ldr	r2, [r4]
 217 00a6 1368     		ldr	r3, [r2]
 218 00a8 23F02003 		bic	r3, r3, #32
 219 00ac 1360     		str	r3, [r2]
 220              	.L14:
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 221              		.loc 1 407 3 view .LVU74
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 222              		.loc 1 407 17 is_stmt 0 view .LVU75
 223 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 224              		.loc 1 407 6 view .LVU76
 225 00b0 012B     		cmp	r3, #1
 226 00b2 37D0     		beq	.L32
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 227              		.loc 1 413 5 is_stmt 1 view .LVU77
 228 00b4 2268     		ldr	r2, [r4]
 229 00b6 1368     		ldr	r3, [r2]
 230 00b8 43F01003 		orr	r3, r3, #16
 231 00bc 1360     		str	r3, [r2]
 232              	.L16:
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 233              		.loc 1 417 3 view .LVU78
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 234              		.loc 1 417 17 is_stmt 0 view .LVU79
 235 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 236              		.loc 1 417 6 view .LVU80
 237 00c0 012B     		cmp	r3, #1
 238 00c2 35D0     		beq	.L33
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 239              		.loc 1 423 5 is_stmt 1 view .LVU81
 240 00c4 2268     		ldr	r2, [r4]
 241 00c6 1368     		ldr	r3, [r2]
 242 00c8 23F00803 		bic	r3, r3, #8
 243 00cc 1360     		str	r3, [r2]
 244              	.L18:
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 245              		.loc 1 427 3 view .LVU82
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 246              		.loc 1 427 17 is_stmt 0 view .LVU83
 247 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 248              		.loc 1 427 6 view .LVU84
 249 00d0 012B     		cmp	r3, #1
 250 00d2 33D0     		beq	.L34
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 251              		.loc 1 433 5 is_stmt 1 view .LVU85
 252 00d4 2268     		ldr	r2, [r4]
 253 00d6 1368     		ldr	r3, [r2]
 254 00d8 23F00403 		bic	r3, r3, #4
 255 00dc 1360     		str	r3, [r2]
 256              	.L20:
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 257              		.loc 1 437 3 view .LVU86
 258 00de A368     		ldr	r3, [r4, #8]
 259 00e0 E268     		ldr	r2, [r4, #12]
ARM GAS  /tmp/ccqrYTdR.s 			page 16


 260 00e2 1343     		orrs	r3, r3, r2
 261 00e4 2269     		ldr	r2, [r4, #16]
 262 00e6 1343     		orrs	r3, r3, r2
 263 00e8 6269     		ldr	r2, [r4, #20]
 264 00ea 1343     		orrs	r3, r3, r2
 265 00ec 6268     		ldr	r2, [r4, #4]
 266 00ee 013A     		subs	r2, r2, #1
 267 00f0 2168     		ldr	r1, [r4]
 268 00f2 1343     		orrs	r3, r3, r2
 269 00f4 CB61     		str	r3, [r1, #28]
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 270              		.loc 1 444 3 view .LVU87
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 271              		.loc 1 444 19 is_stmt 0 view .LVU88
 272 00f6 0020     		movs	r0, #0
 273 00f8 6062     		str	r0, [r4, #36]
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 274              		.loc 1 447 3 is_stmt 1 view .LVU89
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 275              		.loc 1 447 15 is_stmt 0 view .LVU90
 276 00fa 0123     		movs	r3, #1
 277 00fc 84F82030 		strb	r3, [r4, #32]
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 278              		.loc 1 450 3 is_stmt 1 view .LVU91
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 279              		.loc 1 450 10 is_stmt 0 view .LVU92
 280 0100 A0E7     		b	.L3
 281              	.L29:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 282              		.loc 1 379 5 is_stmt 1 view .LVU93
 283 0102 1A68     		ldr	r2, [r3]
 284 0104 42F08002 		orr	r2, r2, #128
 285 0108 1A60     		str	r2, [r3]
 286 010a C0E7     		b	.L10
 287              	.L30:
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 288              		.loc 1 389 5 view .LVU94
 289 010c 2268     		ldr	r2, [r4]
 290 010e 1368     		ldr	r3, [r2]
 291 0110 43F04003 		orr	r3, r3, #64
 292 0114 1360     		str	r3, [r2]
 293 0116 C2E7     		b	.L12
 294              	.L31:
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 295              		.loc 1 399 5 view .LVU95
 296 0118 2268     		ldr	r2, [r4]
 297 011a 1368     		ldr	r3, [r2]
 298 011c 43F02003 		orr	r3, r3, #32
 299 0120 1360     		str	r3, [r2]
 300 0122 C4E7     		b	.L14
 301              	.L32:
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 302              		.loc 1 409 5 view .LVU96
 303 0124 2268     		ldr	r2, [r4]
 304 0126 1368     		ldr	r3, [r2]
 305 0128 23F01003 		bic	r3, r3, #16
 306 012c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccqrYTdR.s 			page 17


 307 012e C6E7     		b	.L16
 308              	.L33:
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 309              		.loc 1 419 5 view .LVU97
 310 0130 2268     		ldr	r2, [r4]
 311 0132 1368     		ldr	r3, [r2]
 312 0134 43F00803 		orr	r3, r3, #8
 313 0138 1360     		str	r3, [r2]
 314 013a C8E7     		b	.L18
 315              	.L34:
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 316              		.loc 1 429 5 view .LVU98
 317 013c 2268     		ldr	r2, [r4]
 318 013e 1368     		ldr	r3, [r2]
 319 0140 43F00403 		orr	r3, r3, #4
 320 0144 1360     		str	r3, [r2]
 321 0146 CAE7     		b	.L20
 322              	.LVL12:
 323              	.L21:
 324              	.LCFI1:
 325              		.cfi_def_cfa_offset 0
 326              		.cfi_restore 3
 327              		.cfi_restore 4
 328              		.cfi_restore 5
 329              		.cfi_restore 14
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 330              		.loc 1 282 12 is_stmt 0 view .LVU99
 331 0148 0120     		movs	r0, #1
 332              	.LVL13:
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 333              		.loc 1 451 1 view .LVU100
 334 014a 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE123:
 338              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 339              		.align	1
 340              		.weak	HAL_CAN_MspDeInit
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	HAL_CAN_MspDeInit:
 347              	.LVL14:
 348              	.LFB126:
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 349              		.loc 1 524 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccqrYTdR.s 			page 18


 353              		@ link register save eliminated.
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 354              		.loc 1 526 3 view .LVU102
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 355              		.loc 1 531 1 is_stmt 0 view .LVU103
 356 0000 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE126:
 360              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 361              		.align	1
 362              		.global	HAL_CAN_ConfigFilter
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	HAL_CAN_ConfigFilter:
 369              	.LVL15:
 370              	.LFB127:
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for CAN module
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be one of the following values:
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (pCallback == NULL)
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
ARM GAS  /tmp/ccqrYTdR.s 			page 19


 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update the error code */
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch (CallbackID)
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
ARM GAS  /tmp/ccqrYTdR.s 			page 20


 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default :
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update the error code */
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Return error status */
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         status =  HAL_ERROR;
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch (CallbackID)
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default :
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update the error code */
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Return error status */
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         status =  HAL_ERROR;
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update the error code */
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return error status */
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     status =  HAL_ERROR;
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
ARM GAS  /tmp/ccqrYTdR.s 			page 21


 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for CAN module
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be one of the following values:
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch (CallbackID)
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
ARM GAS  /tmp/ccqrYTdR.s 			page 22


 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default :
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update the error code */
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Return error status */
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         status =  HAL_ERROR;
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch (CallbackID)
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default :
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update the error code */
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/ccqrYTdR.s 			page 23


 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Return error status */
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         status =  HAL_ERROR;
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update the error code */
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return error status */
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     status =  HAL_ERROR;
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief    Configuration functions.
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****               ##### Configuration functions #####
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         contains the filter configuration information.
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 371              		.loc 1 841 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filternbrbitpos;
 376              		.loc 1 842 3 view .LVU105
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 377              		.loc 1 843 3 view .LVU106
ARM GAS  /tmp/ccqrYTdR.s 			page 24


 378              		.loc 1 843 16 is_stmt 0 view .LVU107
 379 0000 0268     		ldr	r2, [r0]
 380              	.LVL16:
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 381              		.loc 1 844 3 is_stmt 1 view .LVU108
 382              		.loc 1 844 24 is_stmt 0 view .LVU109
 383 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 384              	.LVL17:
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 385              		.loc 1 846 3 is_stmt 1 view .LVU110
 386              		.loc 1 846 38 is_stmt 0 view .LVU111
 387 0006 013B     		subs	r3, r3, #1
 388              	.LVL18:
 389              		.loc 1 846 38 view .LVU112
 390 0008 DBB2     		uxtb	r3, r3
 391              		.loc 1 846 6 view .LVU113
 392 000a 012B     		cmp	r3, #1
 393 000c 05D9     		bls	.L50
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check the parameters */
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* CAN is single instance with 14 dedicated filters banks */
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check the parameters */
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Initialisation mode for the filter */
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Convert filter number into bit position */
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter Deactivation */
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter Scale */
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 16-bit scale for the filter */
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 25


 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 32-bit scale for the filter */
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter Mode */
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Identifier list mode for the filter*/
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter FIFO assignment */
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Filter activation */
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
ARM GAS  /tmp/ccqrYTdR.s 			page 26


 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 394              		.loc 1 947 5 is_stmt 1 view .LVU114
 395              		.loc 1 947 21 is_stmt 0 view .LVU115
 396 000e 436A     		ldr	r3, [r0, #36]
 397 0010 43F48023 		orr	r3, r3, #262144
 398 0014 4362     		str	r3, [r0, #36]
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 399              		.loc 1 949 5 is_stmt 1 view .LVU116
 400              		.loc 1 949 12 is_stmt 0 view .LVU117
 401 0016 0120     		movs	r0, #1
 402              	.LVL19:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 403              		.loc 1 951 1 view .LVU118
 404 0018 7047     		bx	lr
 405              	.LVL20:
 406              	.L50:
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filternbrbitpos;
 407              		.loc 1 841 1 view .LVU119
 408 001a 30B4     		push	{r4, r5}
 409              	.LCFI2:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 5, -4
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 413              		.loc 1 850 5 is_stmt 1 view .LVU120
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 414              		.loc 1 851 5 view .LVU121
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 415              		.loc 1 852 5 view .LVU122
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 416              		.loc 1 853 5 view .LVU123
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 417              		.loc 1 854 5 view .LVU124
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 418              		.loc 1 855 5 view .LVU125
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 419              		.loc 1 856 5 view .LVU126
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 420              		.loc 1 857 5 view .LVU127
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 421              		.loc 1 862 5 view .LVU128
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 422              		.loc 1 865 5 view .LVU129
 423 001c D2F80032 		ldr	r3, [r2, #512]
 424 0020 43F00103 		orr	r3, r3, #1
 425 0024 C2F80032 		str	r3, [r2, #512]
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 426              		.loc 1 868 5 view .LVU130
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 427              		.loc 1 868 52 is_stmt 0 view .LVU131
ARM GAS  /tmp/ccqrYTdR.s 			page 27


 428 0028 4B69     		ldr	r3, [r1, #20]
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 429              		.loc 1 868 65 view .LVU132
 430 002a 03F01F03 		and	r3, r3, #31
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 431              		.loc 1 868 21 view .LVU133
 432 002e 0120     		movs	r0, #1
 433              	.LVL21:
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 434              		.loc 1 868 21 view .LVU134
 435 0030 00FA03F3 		lsl	r3, r0, r3
 436              	.LVL22:
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 437              		.loc 1 871 5 is_stmt 1 view .LVU135
 438 0034 D2F81C02 		ldr	r0, [r2, #540]
 439 0038 6FEA030C 		mvn	ip, r3
 440 003c 20EA0300 		bic	r0, r0, r3
 441 0040 C2F81C02 		str	r0, [r2, #540]
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 442              		.loc 1 874 5 view .LVU136
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 443              		.loc 1 874 22 is_stmt 0 view .LVU137
 444 0044 C869     		ldr	r0, [r1, #28]
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 445              		.loc 1 874 8 view .LVU138
 446 0046 B0B9     		cbnz	r0, .L38
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 447              		.loc 1 877 7 is_stmt 1 view .LVU139
 448 0048 D2F80C02 		ldr	r0, [r2, #524]
 449 004c 0CEA0000 		and	r0, ip, r0
 450 0050 C2F80C02 		str	r0, [r2, #524]
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 451              		.loc 1 881 7 view .LVU140
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 452              		.loc 1 883 22 is_stmt 0 view .LVU141
 453 0054 8C88     		ldrh	r4, [r1, #4]
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 454              		.loc 1 881 44 view .LVU142
 455 0056 4869     		ldr	r0, [r1, #20]
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 456              		.loc 1 882 75 view .LVU143
 457 0058 CD68     		ldr	r5, [r1, #12]
 458 005a 44EA0544 		orr	r4, r4, r5, lsl #16
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 459              		.loc 1 881 62 view .LVU144
 460 005e 4830     		adds	r0, r0, #72
 461 0060 42F83040 		str	r4, [r2, r0, lsl #3]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 462              		.loc 1 887 7 is_stmt 1 view .LVU145
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 463              		.loc 1 889 22 is_stmt 0 view .LVU146
 464 0064 0C88     		ldrh	r4, [r1]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 465              		.loc 1 887 44 view .LVU147
 466 0066 4869     		ldr	r0, [r1, #20]
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 467              		.loc 1 888 76 view .LVU148
ARM GAS  /tmp/ccqrYTdR.s 			page 28


 468 0068 8D68     		ldr	r5, [r1, #8]
 469 006a 44EA0544 		orr	r4, r4, r5, lsl #16
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 470              		.loc 1 887 62 view .LVU149
 471 006e 4830     		adds	r0, r0, #72
 472 0070 02EBC000 		add	r0, r2, r0, lsl #3
 473 0074 4460     		str	r4, [r0, #4]
 474              	.L38:
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 475              		.loc 1 892 5 is_stmt 1 view .LVU150
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 476              		.loc 1 892 22 is_stmt 0 view .LVU151
 477 0076 C869     		ldr	r0, [r1, #28]
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 478              		.loc 1 892 8 view .LVU152
 479 0078 0128     		cmp	r0, #1
 480 007a 1BD0     		beq	.L51
 481              	.L39:
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 482              		.loc 1 909 5 is_stmt 1 view .LVU153
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 483              		.loc 1 909 22 is_stmt 0 view .LVU154
 484 007c 8869     		ldr	r0, [r1, #24]
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 485              		.loc 1 909 8 view .LVU155
 486 007e 80BB     		cbnz	r0, .L40
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 487              		.loc 1 912 7 is_stmt 1 view .LVU156
 488 0080 D2F80402 		ldr	r0, [r2, #516]
 489 0084 0CEA0000 		and	r0, ip, r0
 490 0088 C2F80402 		str	r0, [r2, #516]
 491              	.L41:
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 492              		.loc 1 921 5 view .LVU157
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 493              		.loc 1 921 22 is_stmt 0 view .LVU158
 494 008c 0869     		ldr	r0, [r1, #16]
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 495              		.loc 1 921 8 view .LVU159
 496 008e 70BB     		cbnz	r0, .L42
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 497              		.loc 1 924 7 is_stmt 1 view .LVU160
 498 0090 D2F81402 		ldr	r0, [r2, #532]
 499 0094 0CEA0000 		and	r0, ip, r0
 500 0098 C2F81402 		str	r0, [r2, #532]
 501              	.L43:
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 502              		.loc 1 933 5 view .LVU161
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 503              		.loc 1 933 22 is_stmt 0 view .LVU162
 504 009c 096A     		ldr	r1, [r1, #32]
 505              	.LVL23:
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 506              		.loc 1 933 8 view .LVU163
 507 009e 0129     		cmp	r1, #1
 508 00a0 2BD0     		beq	.L52
 509              	.LVL24:
ARM GAS  /tmp/ccqrYTdR.s 			page 29


 510              	.L44:
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 511              		.loc 1 939 5 is_stmt 1 view .LVU164
 512 00a2 D2F80032 		ldr	r3, [r2, #512]
 513 00a6 23F00103 		bic	r3, r3, #1
 514 00aa C2F80032 		str	r3, [r2, #512]
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 515              		.loc 1 942 5 view .LVU165
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 516              		.loc 1 942 12 is_stmt 0 view .LVU166
 517 00ae 0020     		movs	r0, #0
 518              		.loc 1 951 1 view .LVU167
 519 00b0 30BC     		pop	{r4, r5}
 520              	.LCFI3:
 521              		.cfi_remember_state
 522              		.cfi_restore 5
 523              		.cfi_restore 4
 524              		.cfi_def_cfa_offset 0
 525 00b2 7047     		bx	lr
 526              	.LVL25:
 527              	.L51:
 528              	.LCFI4:
 529              		.cfi_restore_state
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 530              		.loc 1 895 7 is_stmt 1 view .LVU168
 531 00b4 D2F80C02 		ldr	r0, [r2, #524]
 532 00b8 1843     		orrs	r0, r0, r3
 533 00ba C2F80C02 		str	r0, [r2, #524]
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 534              		.loc 1 898 7 view .LVU169
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 535              		.loc 1 900 22 is_stmt 0 view .LVU170
 536 00be 8C88     		ldrh	r4, [r1, #4]
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 537              		.loc 1 898 44 view .LVU171
 538 00c0 4869     		ldr	r0, [r1, #20]
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 539              		.loc 1 899 72 view .LVU172
 540 00c2 0D68     		ldr	r5, [r1]
 541 00c4 44EA0544 		orr	r4, r4, r5, lsl #16
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 542              		.loc 1 898 62 view .LVU173
 543 00c8 4830     		adds	r0, r0, #72
 544 00ca 42F83040 		str	r4, [r2, r0, lsl #3]
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 545              		.loc 1 903 7 is_stmt 1 view .LVU174
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 546              		.loc 1 905 22 is_stmt 0 view .LVU175
 547 00ce 8C89     		ldrh	r4, [r1, #12]
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 548              		.loc 1 903 44 view .LVU176
 549 00d0 4869     		ldr	r0, [r1, #20]
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 550              		.loc 1 904 76 view .LVU177
 551 00d2 8D68     		ldr	r5, [r1, #8]
 552 00d4 44EA0544 		orr	r4, r4, r5, lsl #16
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
ARM GAS  /tmp/ccqrYTdR.s 			page 30


 553              		.loc 1 903 62 view .LVU178
 554 00d8 4830     		adds	r0, r0, #72
 555 00da 02EBC000 		add	r0, r2, r0, lsl #3
 556 00de 4460     		str	r4, [r0, #4]
 557 00e0 CCE7     		b	.L39
 558              	.L40:
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 559              		.loc 1 917 7 is_stmt 1 view .LVU179
 560 00e2 D2F80402 		ldr	r0, [r2, #516]
 561 00e6 1843     		orrs	r0, r0, r3
 562 00e8 C2F80402 		str	r0, [r2, #516]
 563 00ec CEE7     		b	.L41
 564              	.L42:
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 565              		.loc 1 929 7 view .LVU180
 566 00ee D2F81402 		ldr	r0, [r2, #532]
 567 00f2 1843     		orrs	r0, r0, r3
 568 00f4 C2F81402 		str	r0, [r2, #532]
 569 00f8 D0E7     		b	.L43
 570              	.LVL26:
 571              	.L52:
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 572              		.loc 1 935 7 view .LVU181
 573 00fa D2F81C12 		ldr	r1, [r2, #540]
 574 00fe 0B43     		orrs	r3, r3, r1
 575              	.LVL27:
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 576              		.loc 1 935 7 is_stmt 0 view .LVU182
 577 0100 C2F81C32 		str	r3, [r2, #540]
 578 0104 CDE7     		b	.L44
 579              		.cfi_endproc
 580              	.LFE127:
 582              		.section	.text.HAL_CAN_Start,"ax",%progbits
 583              		.align	1
 584              		.global	HAL_CAN_Start
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	HAL_CAN_Start:
 591              	.LVL28:
 592              	.LFB128:
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief    Control functions
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                       ##### Control functions #####
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
ARM GAS  /tmp/ccqrYTdR.s 			page 31


 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                              and activate the corresponding
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                              transmission request
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                              pending on the selected Tx mailbox
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Start the CAN module.
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 593              		.loc 1 991 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		.loc 1 991 1 is_stmt 0 view .LVU184
 598 0000 70B5     		push	{r4, r5, r6, lr}
 599              	.LCFI5:
 600              		.cfi_def_cfa_offset 16
 601              		.cfi_offset 4, -16
 602              		.cfi_offset 5, -12
 603              		.cfi_offset 6, -8
 604              		.cfi_offset 14, -4
 605 0002 0446     		mov	r4, r0
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
 606              		.loc 1 992 3 is_stmt 1 view .LVU185
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 607              		.loc 1 994 3 view .LVU186
 608              		.loc 1 994 11 is_stmt 0 view .LVU187
 609 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 610 0008 EDB2     		uxtb	r5, r5
 611              		.loc 1 994 6 view .LVU188
 612 000a 012D     		cmp	r5, #1
 613 000c 06D0     		beq	.L59
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN peripheral state */
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request leave initialisation */
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get tick */
ARM GAS  /tmp/ccqrYTdR.s 			page 32


1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     tickstart = HAL_GetTick();
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wait the acknowledge */
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check for the Timeout */
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Change CAN state */
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 614              		.loc 1 1030 5 is_stmt 1 view .LVU189
 615              		.loc 1 1030 21 is_stmt 0 view .LVU190
 616 000e 436A     		ldr	r3, [r0, #36]
 617 0010 43F40023 		orr	r3, r3, #524288
 618 0014 4362     		str	r3, [r0, #36]
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 619              		.loc 1 1032 5 is_stmt 1 view .LVU191
 620              		.loc 1 1032 12 is_stmt 0 view .LVU192
 621 0016 0125     		movs	r5, #1
 622              	.LVL29:
 623              	.L56:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 624              		.loc 1 1034 1 view .LVU193
 625 0018 2846     		mov	r0, r5
 626 001a 70BD     		pop	{r4, r5, r6, pc}
 627              	.LVL30:
 628              	.L59:
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 629              		.loc 1 997 5 is_stmt 1 view .LVU194
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 630              		.loc 1 997 17 is_stmt 0 view .LVU195
 631 001c 0223     		movs	r3, #2
 632 001e 80F82030 		strb	r3, [r0, #32]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 633              		.loc 1 1000 5 is_stmt 1 view .LVU196
 634 0022 0268     		ldr	r2, [r0]
 635 0024 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccqrYTdR.s 			page 33


 636 0026 23F00103 		bic	r3, r3, #1
 637 002a 1360     		str	r3, [r2]
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 638              		.loc 1 1003 5 view .LVU197
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 639              		.loc 1 1003 17 is_stmt 0 view .LVU198
 640 002c FFF7FEFF 		bl	HAL_GetTick
 641              	.LVL31:
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 642              		.loc 1 1003 17 view .LVU199
 643 0030 0646     		mov	r6, r0
 644              	.LVL32:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 645              		.loc 1 1006 5 is_stmt 1 view .LVU200
 646              	.L55:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 647              		.loc 1 1006 11 view .LVU201
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 648              		.loc 1 1006 17 is_stmt 0 view .LVU202
 649 0032 2368     		ldr	r3, [r4]
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 650              		.loc 1 1006 27 view .LVU203
 651 0034 5B68     		ldr	r3, [r3, #4]
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 652              		.loc 1 1006 11 view .LVU204
 653 0036 13F0010F 		tst	r3, #1
 654 003a 0CD0     		beq	.L60
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 655              		.loc 1 1009 7 is_stmt 1 view .LVU205
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 656              		.loc 1 1009 12 is_stmt 0 view .LVU206
 657 003c FFF7FEFF 		bl	HAL_GetTick
 658              	.LVL33:
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 659              		.loc 1 1009 26 view .LVU207
 660 0040 831B     		subs	r3, r0, r6
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 661              		.loc 1 1009 10 view .LVU208
 662 0042 0A2B     		cmp	r3, #10
 663 0044 F5D9     		bls	.L55
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 664              		.loc 1 1012 9 is_stmt 1 view .LVU209
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 665              		.loc 1 1012 25 is_stmt 0 view .LVU210
 666 0046 636A     		ldr	r3, [r4, #36]
 667 0048 43F40033 		orr	r3, r3, #131072
 668 004c 6362     		str	r3, [r4, #36]
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 669              		.loc 1 1015 9 is_stmt 1 view .LVU211
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 670              		.loc 1 1015 21 is_stmt 0 view .LVU212
 671 004e 0523     		movs	r3, #5
 672 0050 84F82030 		strb	r3, [r4, #32]
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 673              		.loc 1 1017 9 is_stmt 1 view .LVU213
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 674              		.loc 1 1017 16 is_stmt 0 view .LVU214
ARM GAS  /tmp/ccqrYTdR.s 			page 34


 675 0054 E0E7     		b	.L56
 676              	.L60:
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 677              		.loc 1 1022 5 is_stmt 1 view .LVU215
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 678              		.loc 1 1022 21 is_stmt 0 view .LVU216
 679 0056 0025     		movs	r5, #0
 680 0058 6562     		str	r5, [r4, #36]
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 681              		.loc 1 1025 5 is_stmt 1 view .LVU217
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 682              		.loc 1 1025 12 is_stmt 0 view .LVU218
 683 005a DDE7     		b	.L56
 684              		.cfi_endproc
 685              	.LFE128:
 687              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 688              		.align	1
 689              		.global	HAL_CAN_Stop
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 693              		.fpu fpv4-sp-d16
 695              	HAL_CAN_Stop:
 696              	.LVL34:
 697              	.LFB129:
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 698              		.loc 1 1043 1 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		.loc 1 1043 1 is_stmt 0 view .LVU220
 703 0000 38B5     		push	{r3, r4, r5, lr}
 704              	.LCFI6:
 705              		.cfi_def_cfa_offset 16
 706              		.cfi_offset 3, -16
 707              		.cfi_offset 4, -12
 708              		.cfi_offset 5, -8
 709              		.cfi_offset 14, -4
 710 0002 0446     		mov	r4, r0
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart;
 711              		.loc 1 1044 3 is_stmt 1 view .LVU221
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 712              		.loc 1 1046 3 view .LVU222
 713              		.loc 1 1046 11 is_stmt 0 view .LVU223
 714 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 715 0008 DBB2     		uxtb	r3, r3
 716              		.loc 1 1046 6 view .LVU224
 717 000a 022B     		cmp	r3, #2
ARM GAS  /tmp/ccqrYTdR.s 			page 35


 718 000c 05D0     		beq	.L67
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request initialisation */
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get tick */
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     tickstart = HAL_GetTick();
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wait the acknowledge */
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check for the Timeout */
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Change CAN state */
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Exit from sleep mode */
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN peripheral state */
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 719              		.loc 1 1082 5 is_stmt 1 view .LVU225
 720              		.loc 1 1082 21 is_stmt 0 view .LVU226
 721 000e 436A     		ldr	r3, [r0, #36]
 722 0010 43F48013 		orr	r3, r3, #1048576
 723 0014 4362     		str	r3, [r0, #36]
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 724              		.loc 1 1084 5 is_stmt 1 view .LVU227
 725              		.loc 1 1084 12 is_stmt 0 view .LVU228
 726 0016 0120     		movs	r0, #1
 727              	.LVL35:
 728              	.L64:
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 729              		.loc 1 1086 1 view .LVU229
 730 0018 38BD     		pop	{r3, r4, r5, pc}
 731              	.LVL36:
 732              	.L67:
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 733              		.loc 1 1049 5 is_stmt 1 view .LVU230
ARM GAS  /tmp/ccqrYTdR.s 			page 36


 734 001a 0268     		ldr	r2, [r0]
 735 001c 1368     		ldr	r3, [r2]
 736 001e 43F00103 		orr	r3, r3, #1
 737 0022 1360     		str	r3, [r2]
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 738              		.loc 1 1052 5 view .LVU231
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 739              		.loc 1 1052 17 is_stmt 0 view .LVU232
 740 0024 FFF7FEFF 		bl	HAL_GetTick
 741              	.LVL37:
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 742              		.loc 1 1052 17 view .LVU233
 743 0028 0546     		mov	r5, r0
 744              	.LVL38:
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 745              		.loc 1 1055 5 is_stmt 1 view .LVU234
 746              	.L63:
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 747              		.loc 1 1055 11 view .LVU235
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 748              		.loc 1 1055 17 is_stmt 0 view .LVU236
 749 002a 2368     		ldr	r3, [r4]
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 750              		.loc 1 1055 27 view .LVU237
 751 002c 5A68     		ldr	r2, [r3, #4]
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 752              		.loc 1 1055 11 view .LVU238
 753 002e 12F0010F 		tst	r2, #1
 754 0032 0DD1     		bne	.L68
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 755              		.loc 1 1058 7 is_stmt 1 view .LVU239
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 756              		.loc 1 1058 12 is_stmt 0 view .LVU240
 757 0034 FFF7FEFF 		bl	HAL_GetTick
 758              	.LVL39:
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 759              		.loc 1 1058 26 view .LVU241
 760 0038 431B     		subs	r3, r0, r5
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 761              		.loc 1 1058 10 view .LVU242
 762 003a 0A2B     		cmp	r3, #10
 763 003c F5D9     		bls	.L63
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 764              		.loc 1 1061 9 is_stmt 1 view .LVU243
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 765              		.loc 1 1061 25 is_stmt 0 view .LVU244
 766 003e 636A     		ldr	r3, [r4, #36]
 767 0040 43F40033 		orr	r3, r3, #131072
 768 0044 6362     		str	r3, [r4, #36]
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 769              		.loc 1 1064 9 is_stmt 1 view .LVU245
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 770              		.loc 1 1064 21 is_stmt 0 view .LVU246
 771 0046 0523     		movs	r3, #5
 772 0048 84F82030 		strb	r3, [r4, #32]
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 773              		.loc 1 1066 9 is_stmt 1 view .LVU247
ARM GAS  /tmp/ccqrYTdR.s 			page 37


1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 774              		.loc 1 1066 16 is_stmt 0 view .LVU248
 775 004c 0120     		movs	r0, #1
 776 004e E3E7     		b	.L64
 777              	.L68:
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 778              		.loc 1 1071 5 is_stmt 1 view .LVU249
 779 0050 1A68     		ldr	r2, [r3]
 780 0052 22F00202 		bic	r2, r2, #2
 781 0056 1A60     		str	r2, [r3]
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 782              		.loc 1 1074 5 view .LVU250
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 783              		.loc 1 1074 17 is_stmt 0 view .LVU251
 784 0058 0123     		movs	r3, #1
 785 005a 84F82030 		strb	r3, [r4, #32]
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 786              		.loc 1 1077 5 is_stmt 1 view .LVU252
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 787              		.loc 1 1077 12 is_stmt 0 view .LVU253
 788 005e 0020     		movs	r0, #0
 789 0060 DAE7     		b	.L64
 790              		.cfi_endproc
 791              	.LFE129:
 793              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 794              		.align	1
 795              		.global	HAL_CAN_DeInit
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv4-sp-d16
 801              	HAL_CAN_DeInit:
 802              	.LVL40:
 803              	.LFB124:
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 804              		.loc 1 461 1 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 808              		.loc 1 463 3 view .LVU255
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 809              		.loc 1 463 6 is_stmt 0 view .LVU256
 810 0000 80B1     		cbz	r0, .L71
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 811              		.loc 1 461 1 view .LVU257
 812 0002 10B5     		push	{r4, lr}
 813              	.LCFI7:
 814              		.cfi_def_cfa_offset 8
 815              		.cfi_offset 4, -8
 816              		.cfi_offset 14, -4
 817 0004 0446     		mov	r4, r0
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 818              		.loc 1 469 3 is_stmt 1 view .LVU258
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 819              		.loc 1 472 3 view .LVU259
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 38


 820              		.loc 1 472 9 is_stmt 0 view .LVU260
 821 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 822              	.LVL41:
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 823              		.loc 1 485 3 is_stmt 1 view .LVU261
 824 000a 2046     		mov	r0, r4
 825 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 826              	.LVL42:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 827              		.loc 1 489 3 view .LVU262
 828 0010 2268     		ldr	r2, [r4]
 829 0012 1368     		ldr	r3, [r2]
 830 0014 43F40043 		orr	r3, r3, #32768
 831 0018 1360     		str	r3, [r2]
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 832              		.loc 1 492 3 view .LVU263
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 833              		.loc 1 492 19 is_stmt 0 view .LVU264
 834 001a 0020     		movs	r0, #0
 835 001c 6062     		str	r0, [r4, #36]
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 836              		.loc 1 495 3 is_stmt 1 view .LVU265
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 837              		.loc 1 495 15 is_stmt 0 view .LVU266
 838 001e 84F82000 		strb	r0, [r4, #32]
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 839              		.loc 1 498 3 is_stmt 1 view .LVU267
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 840              		.loc 1 499 1 is_stmt 0 view .LVU268
 841 0022 10BD     		pop	{r4, pc}
 842              	.LVL43:
 843              	.L71:
 844              	.LCFI8:
 845              		.cfi_def_cfa_offset 0
 846              		.cfi_restore 4
 847              		.cfi_restore 14
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 848              		.loc 1 465 12 view .LVU269
 849 0024 0120     		movs	r0, #1
 850              	.LVL44:
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 851              		.loc 1 499 1 view .LVU270
 852 0026 7047     		bx	lr
 853              		.cfi_endproc
 854              	.LFE124:
 856              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 857              		.align	1
 858              		.global	HAL_CAN_RequestSleep
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 862              		.fpu fpv4-sp-d16
 864              	HAL_CAN_RequestSleep:
 865              	.LVL45:
 866              	.LFB130:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
ARM GAS  /tmp/ccqrYTdR.s 			page 39


1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         of a CAN frame) has been completed.
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status.
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 867              		.loc 1 1098 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 872              		.loc 1 1099 3 view .LVU272
 873              		.loc 1 1099 24 is_stmt 0 view .LVU273
 874 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 875              	.LVL46:
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 876              		.loc 1 1101 3 is_stmt 1 view .LVU274
 877              		.loc 1 1101 38 is_stmt 0 view .LVU275
 878 0004 013B     		subs	r3, r3, #1
 879              	.LVL47:
 880              		.loc 1 1101 38 view .LVU276
 881 0006 DBB2     		uxtb	r3, r3
 882              		.loc 1 1101 6 view .LVU277
 883 0008 012B     		cmp	r3, #1
 884 000a 05D9     		bls	.L79
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request Sleep mode */
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 885              		.loc 1 1113 5 is_stmt 1 view .LVU278
 886              		.loc 1 1113 21 is_stmt 0 view .LVU279
 887 000c 436A     		ldr	r3, [r0, #36]
 888 000e 43F48023 		orr	r3, r3, #262144
 889 0012 4362     		str	r3, [r0, #36]
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 890              		.loc 1 1116 5 is_stmt 1 view .LVU280
 891              		.loc 1 1116 12 is_stmt 0 view .LVU281
 892 0014 0120     		movs	r0, #1
 893              	.LVL48:
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
ARM GAS  /tmp/ccqrYTdR.s 			page 40


 894              		.loc 1 1118 1 view .LVU282
 895 0016 7047     		bx	lr
 896              	.LVL49:
 897              	.L79:
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 898              		.loc 1 1105 5 is_stmt 1 view .LVU283
 899 0018 0268     		ldr	r2, [r0]
 900 001a 1368     		ldr	r3, [r2]
 901 001c 43F00203 		orr	r3, r3, #2
 902 0020 1360     		str	r3, [r2]
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 903              		.loc 1 1108 5 view .LVU284
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 904              		.loc 1 1108 12 is_stmt 0 view .LVU285
 905 0022 0020     		movs	r0, #0
 906              	.LVL50:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 907              		.loc 1 1108 12 view .LVU286
 908 0024 7047     		bx	lr
 909              		.cfi_endproc
 910              	.LFE130:
 912              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 913              		.align	1
 914              		.global	HAL_CAN_WakeUp
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv4-sp-d16
 920              	HAL_CAN_WakeUp:
 921              	.LVL51:
 922              	.LFB131:
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         is exited.
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status.
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 923              		.loc 1 1129 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 8
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 928              		.loc 1 1129 1 is_stmt 0 view .LVU288
 929 0000 82B0     		sub	sp, sp, #8
 930              	.LCFI9:
 931              		.cfi_def_cfa_offset 8
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __IO uint32_t count = 0;
 932              		.loc 1 1130 3 is_stmt 1 view .LVU289
 933              		.loc 1 1130 17 is_stmt 0 view .LVU290
 934 0002 0023     		movs	r3, #0
 935 0004 0193     		str	r3, [sp, #4]
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
ARM GAS  /tmp/ccqrYTdR.s 			page 41


 936              		.loc 1 1131 3 is_stmt 1 view .LVU291
 937              		.loc 1 1131 24 is_stmt 0 view .LVU292
 938 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 939              	.LVL52:
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 940              		.loc 1 1133 3 is_stmt 1 view .LVU293
 941              		.loc 1 1133 38 is_stmt 0 view .LVU294
 942 000a 013B     		subs	r3, r3, #1
 943              	.LVL53:
 944              		.loc 1 1133 38 view .LVU295
 945 000c DBB2     		uxtb	r3, r3
 946              		.loc 1 1133 6 view .LVU296
 947 000e 012B     		cmp	r3, #1
 948 0010 18D8     		bhi	.L81
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wake up request */
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 949              		.loc 1 1137 5 is_stmt 1 view .LVU297
 950 0012 0268     		ldr	r2, [r0]
 951 0014 1368     		ldr	r3, [r2]
 952 0016 23F00203 		bic	r3, r3, #2
 953 001a 1360     		str	r3, [r2]
 954              	.L84:
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wait sleep mode is exited */
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     do
 955              		.loc 1 1140 5 view .LVU298
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Increment counter */
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       count++;
 956              		.loc 1 1143 7 view .LVU299
 957              		.loc 1 1143 12 is_stmt 0 view .LVU300
 958 001c 019B     		ldr	r3, [sp, #4]
 959 001e 0133     		adds	r3, r3, #1
 960 0020 0193     		str	r3, [sp, #4]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check if timeout is reached */
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (count > CAN_WAKEUP_TIMEOUT_COUNTER)
 961              		.loc 1 1146 7 is_stmt 1 view .LVU301
 962              		.loc 1 1146 17 is_stmt 0 view .LVU302
 963 0022 019A     		ldr	r2, [sp, #4]
 964              		.loc 1 1146 10 view .LVU303
 965 0024 0B4B     		ldr	r3, .L87
 966 0026 9A42     		cmp	r2, r3
 967 0028 06D8     		bhi	.L86
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     } while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 968              		.loc 1 1153 13 is_stmt 1 view .LVU304
 969              		.loc 1 1153 19 is_stmt 0 view .LVU305
 970 002a 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccqrYTdR.s 			page 42


 971              		.loc 1 1153 29 view .LVU306
 972 002c 5B68     		ldr	r3, [r3, #4]
 973              		.loc 1 1153 5 view .LVU307
 974 002e 13F0020F 		tst	r3, #2
 975 0032 F3D1     		bne	.L84
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 976              		.loc 1 1156 12 view .LVU308
 977 0034 0020     		movs	r0, #0
 978              	.LVL54:
 979              		.loc 1 1156 12 view .LVU309
 980 0036 0AE0     		b	.L83
 981              	.LVL55:
 982              	.L86:
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 983              		.loc 1 1149 9 is_stmt 1 view .LVU310
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 984              		.loc 1 1149 25 is_stmt 0 view .LVU311
 985 0038 436A     		ldr	r3, [r0, #36]
 986 003a 43F40033 		orr	r3, r3, #131072
 987 003e 4362     		str	r3, [r0, #36]
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 988              		.loc 1 1151 9 is_stmt 1 view .LVU312
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 989              		.loc 1 1151 16 is_stmt 0 view .LVU313
 990 0040 0120     		movs	r0, #1
 991              	.LVL56:
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 992              		.loc 1 1151 16 view .LVU314
 993 0042 04E0     		b	.L83
 994              	.LVL57:
 995              	.L81:
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 996              		.loc 1 1161 5 is_stmt 1 view .LVU315
 997              		.loc 1 1161 21 is_stmt 0 view .LVU316
 998 0044 436A     		ldr	r3, [r0, #36]
 999 0046 43F48023 		orr	r3, r3, #262144
 1000 004a 4362     		str	r3, [r0, #36]
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1001              		.loc 1 1163 5 is_stmt 1 view .LVU317
 1002              		.loc 1 1163 12 is_stmt 0 view .LVU318
 1003 004c 0120     		movs	r0, #1
 1004              	.LVL58:
 1005              	.L83:
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1006              		.loc 1 1165 1 view .LVU319
 1007 004e 02B0     		add	sp, sp, #8
 1008              	.LCFI10:
 1009              		.cfi_def_cfa_offset 0
 1010              		@ sp needed
ARM GAS  /tmp/ccqrYTdR.s 			page 43


 1011 0050 7047     		bx	lr
 1012              	.L88:
 1013 0052 00BF     		.align	2
 1014              	.L87:
 1015 0054 40420F00 		.word	1000000
 1016              		.cfi_endproc
 1017              	.LFE131:
 1019              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1020              		.align	1
 1021              		.global	HAL_CAN_IsSleepActive
 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1025              		.fpu fpv4-sp-d16
 1027              	HAL_CAN_IsSleepActive:
 1028              	.LVL59:
 1029              	.LFB132:
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Status
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1030              		.loc 1 1176 1 is_stmt 1 view -0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = 0U;
 1035              		.loc 1 1177 3 view .LVU321
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1036              		.loc 1 1178 3 view .LVU322
 1037              		.loc 1 1178 24 is_stmt 0 view .LVU323
 1038 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1039              	.LVL60:
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1040              		.loc 1 1180 3 is_stmt 1 view .LVU324
 1041              		.loc 1 1180 38 is_stmt 0 view .LVU325
 1042 0004 013B     		subs	r3, r3, #1
 1043              	.LVL61:
 1044              		.loc 1 1180 38 view .LVU326
 1045 0006 DBB2     		uxtb	r3, r3
 1046              		.loc 1 1180 6 view .LVU327
 1047 0008 012B     		cmp	r3, #1
 1048 000a 01D9     		bls	.L93
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1049              		.loc 1 1177 12 view .LVU328
 1050 000c 0020     		movs	r0, #0
 1051              	.LVL62:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1052              		.loc 1 1177 12 view .LVU329
ARM GAS  /tmp/ccqrYTdR.s 			page 44


 1053 000e 7047     		bx	lr
 1054              	.LVL63:
 1055              	.L93:
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Sleep mode */
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1056              		.loc 1 1184 5 is_stmt 1 view .LVU330
 1057              		.loc 1 1184 14 is_stmt 0 view .LVU331
 1058 0010 0368     		ldr	r3, [r0]
 1059              		.loc 1 1184 24 view .LVU332
 1060 0012 5868     		ldr	r0, [r3, #4]
 1061              	.LVL64:
 1062              		.loc 1 1184 8 view .LVU333
 1063 0014 10F00200 		ands	r0, r0, #2
 1064 0018 00D1     		bne	.L92
 1065 001a 7047     		bx	lr
 1066              	.L92:
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       status = 1U;
 1067              		.loc 1 1186 14 view .LVU334
 1068 001c 0120     		movs	r0, #1
 1069              	.LVL65:
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
 1070              		.loc 1 1191 3 is_stmt 1 view .LVU335
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1071              		.loc 1 1192 1 is_stmt 0 view .LVU336
 1072 001e 7047     		bx	lr
 1073              		.cfi_endproc
 1074              	.LFE132:
 1076              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1077              		.align	1
 1078              		.global	HAL_CAN_AddTxMessage
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1082              		.fpu fpv4-sp-d16
 1084              	HAL_CAN_AddTxMessage:
 1085              	.LVL66:
 1086              	.LFB133:
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         corresponding transmission request.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
ARM GAS  /tmp/ccqrYTdR.s 			page 45


1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1087              		.loc 1 1208 1 is_stmt 1 view -0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091              		.loc 1 1208 1 is_stmt 0 view .LVU338
 1092 0000 30B5     		push	{r4, r5, lr}
 1093              	.LCFI11:
 1094              		.cfi_def_cfa_offset 12
 1095              		.cfi_offset 4, -12
 1096              		.cfi_offset 5, -8
 1097              		.cfi_offset 14, -4
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox;
 1098              		.loc 1 1209 3 is_stmt 1 view .LVU339
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1099              		.loc 1 1210 3 view .LVU340
 1100              		.loc 1 1210 24 is_stmt 0 view .LVU341
 1101 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1102              	.LVL67:
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1103              		.loc 1 1211 3 is_stmt 1 view .LVU342
 1104              		.loc 1 1211 12 is_stmt 0 view .LVU343
 1105 0006 0468     		ldr	r4, [r0]
 1106 0008 A468     		ldr	r4, [r4, #8]
 1107              	.LVL68:
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1108              		.loc 1 1214 3 is_stmt 1 view .LVU344
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1109              		.loc 1 1215 3 view .LVU345
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1110              		.loc 1 1216 3 view .LVU346
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1111              		.loc 1 1217 3 view .LVU347
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 1112              		.loc 1 1223 5 view .LVU348
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1113              		.loc 1 1225 3 view .LVU349
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1114              		.loc 1 1227 3 view .LVU350
 1115              		.loc 1 1227 38 is_stmt 0 view .LVU351
 1116 000a 0CF1FF3C 		add	ip, ip, #-1
 1117              	.LVL69:
 1118              		.loc 1 1227 38 view .LVU352
 1119 000e 5FFA8CFC 		uxtb	ip, ip
 1120              		.loc 1 1227 6 view .LVU353
 1121 0012 BCF1010F 		cmp	ip, #1
ARM GAS  /tmp/ccqrYTdR.s 			page 46


 1122 0016 62D8     		bhi	.L95
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1123              		.loc 1 1231 5 is_stmt 1 view .LVU354
 1124              		.loc 1 1231 8 is_stmt 0 view .LVU355
 1125 0018 14F0E05F 		tst	r4, #469762048
 1126 001c 59D0     		beq	.L96
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Select an empty transmit mailbox */
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1127              		.loc 1 1236 7 is_stmt 1 view .LVU356
 1128              		.loc 1 1236 23 is_stmt 0 view .LVU357
 1129 001e C4F3016C 		ubfx	ip, r4, #24, #2
 1130              	.LVL70:
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Store the Tx mailbox */
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1131              		.loc 1 1239 7 is_stmt 1 view .LVU358
 1132              		.loc 1 1239 33 is_stmt 0 view .LVU359
 1133 0022 0124     		movs	r4, #1
 1134              	.LVL71:
 1135              		.loc 1 1239 33 view .LVU360
 1136 0024 04FA0CF4 		lsl	r4, r4, ip
 1137              		.loc 1 1239 19 view .LVU361
 1138 0028 1C60     		str	r4, [r3]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the Id */
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1139              		.loc 1 1242 7 is_stmt 1 view .LVU362
 1140              		.loc 1 1242 18 is_stmt 0 view .LVU363
 1141 002a 8B68     		ldr	r3, [r1, #8]
 1142              	.LVL72:
 1143              		.loc 1 1242 10 view .LVU364
 1144 002c 002B     		cmp	r3, #0
 1145 002e 3DD1     		bne	.L97
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1146              		.loc 1 1244 9 is_stmt 1 view .LVU365
 1147              		.loc 1 1244 68 is_stmt 0 view .LVU366
 1148 0030 0D68     		ldr	r5, [r1]
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 1149              		.loc 1 1245 67 view .LVU367
 1150 0032 CB68     		ldr	r3, [r1, #12]
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 1151              		.loc 1 1244 13 view .LVU368
 1152 0034 0468     		ldr	r4, [r0]
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 1153              		.loc 1 1244 98 view .LVU369
 1154 0036 43EA4555 		orr	r5, r3, r5, lsl #21
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 1155              		.loc 1 1244 57 view .LVU370
 1156 003a 0CF11803 		add	r3, ip, #24
 1157 003e 1B01     		lsls	r3, r3, #4
ARM GAS  /tmp/ccqrYTdR.s 			page 47


 1158 0040 E550     		str	r5, [r4, r3]
 1159              	.L98:
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the DLC */
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1160              		.loc 1 1255 7 is_stmt 1 view .LVU371
 1161              		.loc 1 1255 11 is_stmt 0 view .LVU372
 1162 0042 0368     		ldr	r3, [r0]
 1163              		.loc 1 1255 66 view .LVU373
 1164 0044 0C69     		ldr	r4, [r1, #16]
 1165              		.loc 1 1255 56 view .LVU374
 1166 0046 0CF1180E 		add	lr, ip, #24
 1167 004a 03EB0E13 		add	r3, r3, lr, lsl #4
 1168 004e 5C60     		str	r4, [r3, #4]
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1169              		.loc 1 1258 7 is_stmt 1 view .LVU375
 1170              		.loc 1 1258 18 is_stmt 0 view .LVU376
 1171 0050 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1172              		.loc 1 1258 10 view .LVU377
 1173 0052 012B     		cmp	r3, #1
 1174 0054 35D0     		beq	.L102
 1175              	.LVL73:
 1176              	.L99:
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set up the data field */
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1177              		.loc 1 1264 7 is_stmt 1 view .LVU378
 1178 0056 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1179 0058 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1180 005a 1B04     		lsls	r3, r3, #16
 1181 005c 43EA0163 		orr	r3, r3, r1, lsl #24
 1182 0060 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1183 0062 43EA0123 		orr	r3, r3, r1, lsl #8
 1184 0066 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 1185 0068 0168     		ldr	r1, [r0]
 1186 006a 2343     		orrs	r3, r3, r4
 1187 006c 01EB0C11 		add	r1, r1, ip, lsl #4
 1188 0070 C1F88C31 		str	r3, [r1, #396]
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1189              		.loc 1 1269 7 view .LVU379
 1190 0074 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
ARM GAS  /tmp/ccqrYTdR.s 			page 48


 1191 0076 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1192 0078 1B04     		lsls	r3, r3, #16
 1193 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 1194 007e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1195 0080 43EA0123 		orr	r3, r3, r1, lsl #8
 1196 0084 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1197 0086 0268     		ldr	r2, [r0]
 1198              	.LVL74:
 1199              		.loc 1 1269 7 is_stmt 0 view .LVU380
 1200 0088 0B43     		orrs	r3, r3, r1
 1201 008a 02EB0C12 		add	r2, r2, ip, lsl #4
 1202 008e C2F88831 		str	r3, [r2, #392]
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Request transmission */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1203              		.loc 1 1276 7 is_stmt 1 view .LVU381
 1204 0092 0268     		ldr	r2, [r0]
 1205 0094 0CF1180C 		add	ip, ip, #24
 1206              	.LVL75:
 1207              		.loc 1 1276 7 is_stmt 0 view .LVU382
 1208 0098 4FEA0C1C 		lsl	ip, ip, #4
 1209 009c 52F80C30 		ldr	r3, [r2, ip]
 1210 00a0 43F00103 		orr	r3, r3, #1
 1211 00a4 42F80C30 		str	r3, [r2, ip]
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Return function status */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_OK;
 1212              		.loc 1 1279 7 is_stmt 1 view .LVU383
 1213              		.loc 1 1279 14 is_stmt 0 view .LVU384
 1214 00a8 0020     		movs	r0, #0
 1215              	.LVL76:
 1216              		.loc 1 1279 14 view .LVU385
 1217 00aa 1DE0     		b	.L100
 1218              	.LVL77:
 1219              	.L97:
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 1220              		.loc 1 1249 9 is_stmt 1 view .LVU386
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 1221              		.loc 1 1249 68 is_stmt 0 view .LVU387
 1222 00ac 4C68     		ldr	r4, [r1, #4]
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 1223              		.loc 1 1249 98 view .LVU388
 1224 00ae 43EAC403 		orr	r3, r3, r4, lsl #3
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1225              		.loc 1 1251 67 view .LVU389
 1226 00b2 CC68     		ldr	r4, [r1, #12]
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->RTR);
 1227              		.loc 1 1250 73 view .LVU390
 1228 00b4 2343     		orrs	r3, r3, r4
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            pHeader->IDE |
 1229              		.loc 1 1249 57 view .LVU391
 1230 00b6 0CF11804 		add	r4, ip, #24
 1231 00ba 2401     		lsls	r4, r4, #4
ARM GAS  /tmp/ccqrYTdR.s 			page 49


 1232 00bc 0568     		ldr	r5, [r0]
 1233 00be 2B51     		str	r3, [r5, r4]
 1234 00c0 BFE7     		b	.L98
 1235              	.L102:
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1236              		.loc 1 1260 9 is_stmt 1 view .LVU392
 1237 00c2 0368     		ldr	r3, [r0]
 1238 00c4 03EB0E13 		add	r3, r3, lr, lsl #4
 1239 00c8 5968     		ldr	r1, [r3, #4]
 1240              	.LVL78:
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 1241              		.loc 1 1260 9 is_stmt 0 view .LVU393
 1242 00ca 41F48071 		orr	r1, r1, #256
 1243 00ce 5960     		str	r1, [r3, #4]
 1244 00d0 C1E7     		b	.L99
 1245              	.LVL79:
 1246              	.L96:
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Update error code */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1247              		.loc 1 1284 7 is_stmt 1 view .LVU394
 1248              		.loc 1 1284 23 is_stmt 0 view .LVU395
 1249 00d2 436A     		ldr	r3, [r0, #36]
 1250              	.LVL80:
 1251              		.loc 1 1284 23 view .LVU396
 1252 00d4 43F40013 		orr	r3, r3, #2097152
 1253 00d8 4362     		str	r3, [r0, #36]
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_ERROR;
 1254              		.loc 1 1286 7 is_stmt 1 view .LVU397
 1255              		.loc 1 1286 14 is_stmt 0 view .LVU398
 1256 00da 0120     		movs	r0, #1
 1257              	.LVL81:
 1258              		.loc 1 1286 14 view .LVU399
 1259 00dc 04E0     		b	.L100
 1260              	.LVL82:
 1261              	.L95:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1262              		.loc 1 1292 5 is_stmt 1 view .LVU400
 1263              		.loc 1 1292 21 is_stmt 0 view .LVU401
 1264 00de 436A     		ldr	r3, [r0, #36]
 1265              	.LVL83:
 1266              		.loc 1 1292 21 view .LVU402
 1267 00e0 43F48023 		orr	r3, r3, #262144
 1268 00e4 4362     		str	r3, [r0, #36]
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1269              		.loc 1 1294 5 is_stmt 1 view .LVU403
 1270              		.loc 1 1294 12 is_stmt 0 view .LVU404
 1271 00e6 0120     		movs	r0, #1
ARM GAS  /tmp/ccqrYTdR.s 			page 50


 1272              	.LVL84:
 1273              	.L100:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1274              		.loc 1 1296 1 view .LVU405
 1275 00e8 30BD     		pop	{r4, r5, pc}
 1276              		.cfi_endproc
 1277              	.LFE133:
 1279              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1280              		.align	1
 1281              		.global	HAL_CAN_AbortTxRequest
 1282              		.syntax unified
 1283              		.thumb
 1284              		.thumb_func
 1285              		.fpu fpv4-sp-d16
 1287              	HAL_CAN_AbortTxRequest:
 1288              	.LVL85:
 1289              	.LFB134:
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Abort transmission requests
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1290              		.loc 1 1307 1 is_stmt 1 view -0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              		@ link register save eliminated.
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1295              		.loc 1 1308 3 view .LVU407
 1296              		.loc 1 1308 24 is_stmt 0 view .LVU408
 1297 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1298              	.LVL86:
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1299              		.loc 1 1311 3 is_stmt 1 view .LVU409
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1300              		.loc 1 1313 3 view .LVU410
 1301              		.loc 1 1313 38 is_stmt 0 view .LVU411
 1302 0004 013B     		subs	r3, r3, #1
 1303              	.LVL87:
 1304              		.loc 1 1313 38 view .LVU412
 1305 0006 DBB2     		uxtb	r3, r3
 1306              		.loc 1 1313 6 view .LVU413
 1307 0008 012B     		cmp	r3, #1
 1308 000a 05D9     		bls	.L109
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 0 */
ARM GAS  /tmp/ccqrYTdR.s 			page 51


1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1309              		.loc 1 1343 5 is_stmt 1 view .LVU414
 1310              		.loc 1 1343 21 is_stmt 0 view .LVU415
 1311 000c 436A     		ldr	r3, [r0, #36]
 1312 000e 43F48023 		orr	r3, r3, #262144
 1313 0012 4362     		str	r3, [r0, #36]
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1314              		.loc 1 1345 5 is_stmt 1 view .LVU416
 1315              		.loc 1 1345 12 is_stmt 0 view .LVU417
 1316 0014 0120     		movs	r0, #1
 1317              	.LVL88:
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1318              		.loc 1 1347 1 view .LVU418
 1319 0016 7047     		bx	lr
 1320              	.LVL89:
 1321              	.L109:
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1322              		.loc 1 1317 5 is_stmt 1 view .LVU419
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1323              		.loc 1 1317 8 is_stmt 0 view .LVU420
 1324 0018 11F0010F 		tst	r1, #1
 1325 001c 04D0     		beq	.L105
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1326              		.loc 1 1320 7 is_stmt 1 view .LVU421
 1327 001e 0268     		ldr	r2, [r0]
 1328 0020 9368     		ldr	r3, [r2, #8]
 1329 0022 43F08003 		orr	r3, r3, #128
 1330 0026 9360     		str	r3, [r2, #8]
 1331              	.L105:
ARM GAS  /tmp/ccqrYTdR.s 			page 52


1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1332              		.loc 1 1324 5 view .LVU422
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1333              		.loc 1 1324 8 is_stmt 0 view .LVU423
 1334 0028 11F0020F 		tst	r1, #2
 1335 002c 04D0     		beq	.L106
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1336              		.loc 1 1327 7 is_stmt 1 view .LVU424
 1337 002e 0268     		ldr	r2, [r0]
 1338 0030 9368     		ldr	r3, [r2, #8]
 1339 0032 43F40043 		orr	r3, r3, #32768
 1340 0036 9360     		str	r3, [r2, #8]
 1341              	.L106:
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1342              		.loc 1 1331 5 view .LVU425
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1343              		.loc 1 1331 8 is_stmt 0 view .LVU426
 1344 0038 11F0040F 		tst	r1, #4
 1345 003c 04D0     		beq	.L107
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1346              		.loc 1 1334 7 is_stmt 1 view .LVU427
 1347 003e 0268     		ldr	r2, [r0]
 1348 0040 9368     		ldr	r3, [r2, #8]
 1349 0042 43F40003 		orr	r3, r3, #8388608
 1350 0046 9360     		str	r3, [r2, #8]
 1351              	.L107:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1352              		.loc 1 1338 5 view .LVU428
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1353              		.loc 1 1338 12 is_stmt 0 view .LVU429
 1354 0048 0020     		movs	r0, #0
 1355              	.LVL90:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1356              		.loc 1 1338 12 view .LVU430
 1357 004a 7047     		bx	lr
 1358              		.cfi_endproc
 1359              	.LFE134:
 1361              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1362              		.align	1
 1363              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1367              		.fpu fpv4-sp-d16
 1369              	HAL_CAN_GetTxMailboxesFreeLevel:
 1370              	.LVL91:
 1371              	.LFB135:
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1372              		.loc 1 1356 1 is_stmt 1 view -0
ARM GAS  /tmp/ccqrYTdR.s 			page 53


 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              		@ link register save eliminated.
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t freelevel = 0U;
 1377              		.loc 1 1357 3 view .LVU432
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1378              		.loc 1 1358 3 view .LVU433
 1379              		.loc 1 1358 24 is_stmt 0 view .LVU434
 1380 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1381              	.LVL92:
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1382              		.loc 1 1360 3 is_stmt 1 view .LVU435
 1383              		.loc 1 1360 38 is_stmt 0 view .LVU436
 1384 0004 013B     		subs	r3, r3, #1
 1385              	.LVL93:
 1386              		.loc 1 1360 38 view .LVU437
 1387 0006 DBB2     		uxtb	r3, r3
 1388              		.loc 1 1360 6 view .LVU438
 1389 0008 012B     		cmp	r3, #1
 1390 000a 01D9     		bls	.L116
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1391              		.loc 1 1357 12 view .LVU439
 1392 000c 0020     		movs	r0, #0
 1393              	.LVL94:
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       freelevel++;
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       freelevel++;
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       freelevel++;
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return freelevel;
 1394              		.loc 1 1383 3 is_stmt 1 view .LVU440
 1395              	.L110:
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1396              		.loc 1 1384 1 is_stmt 0 view .LVU441
 1397 000e 7047     		bx	lr
 1398              	.LVL95:
 1399              	.L116:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
ARM GAS  /tmp/ccqrYTdR.s 			page 54


 1400              		.loc 1 1364 5 is_stmt 1 view .LVU442
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1401              		.loc 1 1364 14 is_stmt 0 view .LVU443
 1402 0010 0368     		ldr	r3, [r0]
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1403              		.loc 1 1364 24 view .LVU444
 1404 0012 9868     		ldr	r0, [r3, #8]
 1405              	.LVL96:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1406              		.loc 1 1364 8 view .LVU445
 1407 0014 10F08060 		ands	r0, r0, #67108864
 1408 0018 00D0     		beq	.L112
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1409              		.loc 1 1366 16 view .LVU446
 1410 001a 0120     		movs	r0, #1
 1411              	.L112:
 1412              	.LVL97:
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1413              		.loc 1 1370 5 is_stmt 1 view .LVU447
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1414              		.loc 1 1370 24 is_stmt 0 view .LVU448
 1415 001c 9A68     		ldr	r2, [r3, #8]
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1416              		.loc 1 1370 8 view .LVU449
 1417 001e 12F0006F 		tst	r2, #134217728
 1418 0022 00D0     		beq	.L113
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1419              		.loc 1 1372 7 is_stmt 1 view .LVU450
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1420              		.loc 1 1372 16 is_stmt 0 view .LVU451
 1421 0024 0130     		adds	r0, r0, #1
 1422              	.LVL98:
 1423              	.L113:
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1424              		.loc 1 1376 5 is_stmt 1 view .LVU452
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1425              		.loc 1 1376 24 is_stmt 0 view .LVU453
 1426 0026 9B68     		ldr	r3, [r3, #8]
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1427              		.loc 1 1376 8 view .LVU454
 1428 0028 13F0805F 		tst	r3, #268435456
 1429 002c EFD0     		beq	.L110
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1430              		.loc 1 1378 7 is_stmt 1 view .LVU455
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1431              		.loc 1 1378 16 is_stmt 0 view .LVU456
 1432 002e 0130     		adds	r0, r0, #1
 1433              	.LVL99:
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1434              		.loc 1 1378 16 view .LVU457
 1435 0030 7047     		bx	lr
 1436              		.cfi_endproc
 1437              	.LFE135:
 1439              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1440              		.align	1
 1441              		.global	HAL_CAN_IsTxMessagePending
 1442              		.syntax unified
ARM GAS  /tmp/ccqrYTdR.s 			page 55


 1443              		.thumb
 1444              		.thumb_func
 1445              		.fpu fpv4-sp-d16
 1447              	HAL_CAN_IsTxMessagePending:
 1448              	.LVL100:
 1449              	.LFB136:
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         Mailboxes.
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Status
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *                Tx Mailbox.
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1450              		.loc 1 1399 1 is_stmt 1 view -0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = 0U;
 1455              		.loc 1 1400 3 view .LVU459
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1456              		.loc 1 1401 3 view .LVU460
 1457              		.loc 1 1401 24 is_stmt 0 view .LVU461
 1458 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1459              	.LVL101:
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1460              		.loc 1 1404 3 is_stmt 1 view .LVU462
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1461              		.loc 1 1406 3 view .LVU463
 1462              		.loc 1 1406 38 is_stmt 0 view .LVU464
 1463 0004 013B     		subs	r3, r3, #1
 1464              	.LVL102:
 1465              		.loc 1 1406 38 view .LVU465
 1466 0006 DBB2     		uxtb	r3, r3
 1467              		.loc 1 1406 6 view .LVU466
 1468 0008 012B     		cmp	r3, #1
 1469 000a 01D9     		bls	.L121
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1470              		.loc 1 1400 12 view .LVU467
 1471 000c 0020     		movs	r0, #0
 1472              	.LVL103:
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1473              		.loc 1 1400 12 view .LVU468
 1474 000e 7047     		bx	lr
 1475              	.LVL104:
 1476              	.L121:
ARM GAS  /tmp/ccqrYTdR.s 			page 56


1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1477              		.loc 1 1410 5 is_stmt 1 view .LVU469
 1478              		.loc 1 1410 14 is_stmt 0 view .LVU470
 1479 0010 0368     		ldr	r3, [r0]
 1480              		.loc 1 1410 24 view .LVU471
 1481 0012 9B68     		ldr	r3, [r3, #8]
 1482              		.loc 1 1410 30 view .LVU472
 1483 0014 03EA8163 		and	r3, r3, r1, lsl #26
 1484              		.loc 1 1410 8 view .LVU473
 1485 0018 B3EB816F 		cmp	r3, r1, lsl #26
 1486 001c 01D0     		beq	.L122
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       status = 1U;
 1487              		.loc 1 1412 14 view .LVU474
 1488 001e 0120     		movs	r0, #1
 1489              	.LVL105:
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return status */
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
 1490              		.loc 1 1417 3 is_stmt 1 view .LVU475
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1491              		.loc 1 1418 1 is_stmt 0 view .LVU476
 1492 0020 7047     		bx	lr
 1493              	.LVL106:
 1494              	.L122:
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1495              		.loc 1 1400 12 view .LVU477
 1496 0022 0020     		movs	r0, #0
 1497              	.LVL107:
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1498              		.loc 1 1400 12 view .LVU478
 1499 0024 7047     		bx	lr
 1500              		.cfi_endproc
 1501              	.LFE136:
 1503              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1504              		.align	1
 1505              		.global	HAL_CAN_GetTxTimestamp
 1506              		.syntax unified
 1507              		.thumb
 1508              		.thumb_func
 1509              		.fpu fpv4-sp-d16
 1511              	HAL_CAN_GetTxTimestamp:
 1512              	.LVL108:
 1513              	.LFB137:
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             mode is enabled.
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         read.
ARM GAS  /tmp/ccqrYTdR.s 			page 57


1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1514              		.loc 1 1431 1 is_stmt 1 view -0
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 0
 1517              		@ frame_needed = 0, uses_anonymous_args = 0
 1518              		@ link register save eliminated.
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t timestamp = 0U;
 1519              		.loc 1 1432 3 view .LVU480
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox;
 1520              		.loc 1 1433 3 view .LVU481
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1521              		.loc 1 1434 3 view .LVU482
 1522              		.loc 1 1434 24 is_stmt 0 view .LVU483
 1523 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1524              	.LVL109:
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1525              		.loc 1 1437 3 is_stmt 1 view .LVU484
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1526              		.loc 1 1439 3 view .LVU485
 1527              		.loc 1 1439 38 is_stmt 0 view .LVU486
 1528 0004 013B     		subs	r3, r3, #1
 1529              	.LVL110:
 1530              		.loc 1 1439 38 view .LVU487
 1531 0006 DBB2     		uxtb	r3, r3
 1532              		.loc 1 1439 6 view .LVU488
 1533 0008 012B     		cmp	r3, #1
 1534 000a 01D9     		bls	.L126
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox;
 1535              		.loc 1 1432 12 view .LVU489
 1536 000c 0020     		movs	r0, #0
 1537              	.LVL111:
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Select the Tx mailbox */
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get timestamp */
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return the timestamp */
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return timestamp;
 1538              		.loc 1 1450 3 is_stmt 1 view .LVU490
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1539              		.loc 1 1451 1 is_stmt 0 view .LVU491
 1540 000e 7047     		bx	lr
 1541              	.LVL112:
 1542              	.L126:
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1543              		.loc 1 1443 5 is_stmt 1 view .LVU492
ARM GAS  /tmp/ccqrYTdR.s 			page 58


 1544              	.LBB4:
 1545              	.LBI4:
 1546              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccqrYTdR.s 			page 59


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  /tmp/ccqrYTdR.s 			page 60


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccqrYTdR.s 			page 61


 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccqrYTdR.s 			page 62


 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 63


 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
ARM GAS  /tmp/ccqrYTdR.s 			page 64


 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccqrYTdR.s 			page 65


 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccqrYTdR.s 			page 66


 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccqrYTdR.s 			page 67


 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  /tmp/ccqrYTdR.s 			page 68


 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccqrYTdR.s 			page 69


 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /tmp/ccqrYTdR.s 			page 70


 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccqrYTdR.s 			page 71


 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
ARM GAS  /tmp/ccqrYTdR.s 			page 72


 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 73


 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccqrYTdR.s 			page 74


 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
ARM GAS  /tmp/ccqrYTdR.s 			page 75


 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1547              		.loc 2 981 31 view .LVU493
 1548              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1549              		.loc 2 983 3 view .LVU494
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1550              		.loc 2 988 4 view .LVU495
 1551              		.syntax unified
 1552              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1553 0010 91FAA1F1 		rbit r1, r1
 1554              	@ 0 "" 2
 1555              	.LVL113:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1556              		.loc 2 1001 3 view .LVU496
 1557              		.loc 2 1001 3 is_stmt 0 view .LVU497
 1558              		.thumb
 1559              		.syntax unified
 1560              	.LBE5:
 1561              	.LBE4:
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1562              		.loc 1 1443 21 view .LVU498
 1563 0014 B1FA81F1 		clz	r1, r1
 1564              	.LVL114:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1565              		.loc 1 1446 5 is_stmt 1 view .LVU499
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
ARM GAS  /tmp/ccqrYTdR.s 			page 76


 1566              		.loc 1 1446 22 is_stmt 0 view .LVU500
 1567 0018 0368     		ldr	r3, [r0]
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1568              		.loc 1 1446 61 view .LVU501
 1569 001a 1831     		adds	r1, r1, #24
 1570              	.LVL115:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1571              		.loc 1 1446 61 view .LVU502
 1572 001c 03EB0111 		add	r1, r3, r1, lsl #4
 1573              	.LVL116:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1574              		.loc 1 1446 61 view .LVU503
 1575 0020 4868     		ldr	r0, [r1, #4]
 1576              	.LVL117:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1577              		.loc 1 1446 85 view .LVU504
 1578 0022 000C     		lsrs	r0, r0, #16
 1579              	.LVL118:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1580              		.loc 1 1446 85 view .LVU505
 1581 0024 7047     		bx	lr
 1582              		.cfi_endproc
 1583              	.LFE137:
 1585              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1586              		.align	1
 1587              		.global	HAL_CAN_GetRxMessage
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu fpv4-sp-d16
 1593              	HAL_CAN_GetRxMessage:
 1594              	.LVL119:
 1595              	.LFB138:
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         of the Rx frame will be stored.
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1596              		.loc 1 1466 1 is_stmt 1 view -0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              		@ link register save eliminated.
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1601              		.loc 1 1467 3 view .LVU507
 1602              		.loc 1 1467 24 is_stmt 0 view .LVU508
 1603 0000 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
ARM GAS  /tmp/ccqrYTdR.s 			page 77


 1604              	.LVL120:
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1605              		.loc 1 1469 3 is_stmt 1 view .LVU509
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1606              		.loc 1 1471 3 view .LVU510
 1607              		.loc 1 1471 38 is_stmt 0 view .LVU511
 1608 0004 0CF1FF3C 		add	ip, ip, #-1
 1609              	.LVL121:
 1610              		.loc 1 1471 38 view .LVU512
 1611 0008 5FFA8CFC 		uxtb	ip, ip
 1612              		.loc 1 1471 6 view .LVU513
 1613 000c BCF1010F 		cmp	ip, #1
 1614 0010 00F2A580 		bhi	.L128
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1615              		.loc 1 1466 1 view .LVU514
 1616 0014 30B4     		push	{r4, r5}
 1617              	.LCFI12:
 1618              		.cfi_def_cfa_offset 8
 1619              		.cfi_offset 4, -8
 1620              		.cfi_offset 5, -4
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check the Rx FIFO */
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1621              		.loc 1 1475 5 is_stmt 1 view .LVU515
 1622              		.loc 1 1475 8 is_stmt 0 view .LVU516
 1623 0016 51B9     		cbnz	r1, .L129
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1624              		.loc 1 1478 7 is_stmt 1 view .LVU517
 1625              		.loc 1 1478 16 is_stmt 0 view .LVU518
 1626 0018 0468     		ldr	r4, [r0]
 1627              		.loc 1 1478 26 view .LVU519
 1628 001a E468     		ldr	r4, [r4, #12]
 1629              		.loc 1 1478 10 view .LVU520
 1630 001c 14F0030F 		tst	r4, #3
 1631 0020 10D1     		bne	.L130
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1632              		.loc 1 1481 9 is_stmt 1 view .LVU521
 1633              		.loc 1 1481 25 is_stmt 0 view .LVU522
 1634 0022 436A     		ldr	r3, [r0, #36]
 1635              	.LVL122:
 1636              		.loc 1 1481 25 view .LVU523
 1637 0024 43F40013 		orr	r3, r3, #2097152
 1638 0028 4362     		str	r3, [r0, #36]
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
 1639              		.loc 1 1483 9 is_stmt 1 view .LVU524
 1640              		.loc 1 1483 16 is_stmt 0 view .LVU525
 1641 002a 0120     		movs	r0, #1
 1642              	.LVL123:
 1643              		.loc 1 1483 16 view .LVU526
ARM GAS  /tmp/ccqrYTdR.s 			page 78


 1644 002c 7EE0     		b	.L131
 1645              	.LVL124:
 1646              	.L129:
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1647              		.loc 1 1489 7 is_stmt 1 view .LVU527
 1648              		.loc 1 1489 16 is_stmt 0 view .LVU528
 1649 002e 0468     		ldr	r4, [r0]
 1650              		.loc 1 1489 26 view .LVU529
 1651 0030 2469     		ldr	r4, [r4, #16]
 1652              		.loc 1 1489 10 view .LVU530
 1653 0032 14F0030F 		tst	r4, #3
 1654 0036 05D1     		bne	.L130
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Update error code */
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1655              		.loc 1 1492 9 is_stmt 1 view .LVU531
 1656              		.loc 1 1492 25 is_stmt 0 view .LVU532
 1657 0038 436A     		ldr	r3, [r0, #36]
 1658              	.LVL125:
 1659              		.loc 1 1492 25 view .LVU533
 1660 003a 43F40013 		orr	r3, r3, #2097152
 1661 003e 4362     		str	r3, [r0, #36]
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_ERROR;
 1662              		.loc 1 1494 9 is_stmt 1 view .LVU534
 1663              		.loc 1 1494 16 is_stmt 0 view .LVU535
 1664 0040 0120     		movs	r0, #1
 1665              	.LVL126:
 1666              		.loc 1 1494 16 view .LVU536
 1667 0042 73E0     		b	.L131
 1668              	.LVL127:
 1669              	.L130:
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get the header */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1670              		.loc 1 1499 5 is_stmt 1 view .LVU537
 1671              		.loc 1 1499 39 is_stmt 0 view .LVU538
 1672 0044 0568     		ldr	r5, [r0]
 1673              		.loc 1 1499 71 view .LVU539
 1674 0046 01F11B04 		add	r4, r1, #27
 1675 004a 2401     		lsls	r4, r4, #4
 1676 004c 2C59     		ldr	r4, [r5, r4]
 1677              		.loc 1 1499 33 view .LVU540
 1678 004e 04F00404 		and	r4, r4, #4
 1679              		.loc 1 1499 18 view .LVU541
 1680 0052 9460     		str	r4, [r2, #8]
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1681              		.loc 1 1500 5 is_stmt 1 view .LVU542
 1682              		.loc 1 1500 8 is_stmt 0 view .LVU543
 1683 0054 002C     		cmp	r4, #0
ARM GAS  /tmp/ccqrYTdR.s 			page 79


 1684 0056 6BD1     		bne	.L132
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 1685              		.loc 1 1502 7 is_stmt 1 view .LVU544
 1686              		.loc 1 1502 45 is_stmt 0 view .LVU545
 1687 0058 0568     		ldr	r5, [r0]
 1688              		.loc 1 1502 77 view .LVU546
 1689 005a 01F11B04 		add	r4, r1, #27
 1690 005e 2401     		lsls	r4, r4, #4
 1691 0060 2C59     		ldr	r4, [r5, r4]
 1692              		.loc 1 1502 83 view .LVU547
 1693 0062 640D     		lsrs	r4, r4, #21
 1694              		.loc 1 1502 22 view .LVU548
 1695 0064 1460     		str	r4, [r2]
 1696              	.L133:
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1697              		.loc 1 1509 5 is_stmt 1 view .LVU549
 1698              		.loc 1 1509 40 is_stmt 0 view .LVU550
 1699 0066 0468     		ldr	r4, [r0]
 1700              		.loc 1 1509 72 view .LVU551
 1701 0068 01F11B0C 		add	ip, r1, #27
 1702 006c 4FEA0C1C 		lsl	ip, ip, #4
 1703 0070 54F80C40 		ldr	r4, [r4, ip]
 1704              		.loc 1 1509 34 view .LVU552
 1705 0074 04F00204 		and	r4, r4, #2
 1706              		.loc 1 1509 18 view .LVU553
 1707 0078 D460     		str	r4, [r2, #12]
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 1708              		.loc 1 1510 5 is_stmt 1 view .LVU554
 1709              		.loc 1 1510 31 is_stmt 0 view .LVU555
 1710 007a 0468     		ldr	r4, [r0]
 1711              		.loc 1 1510 63 view .LVU556
 1712 007c A444     		add	ip, ip, r4
 1713 007e DCF80450 		ldr	r5, [ip, #4]
 1714              		.loc 1 1510 8 view .LVU557
 1715 0082 15F0080F 		tst	r5, #8
 1716 0086 5BD0     		beq	.L134
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Truncate DLC to 8 if received field is over range */
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       pHeader->DLC = 8U;
 1717              		.loc 1 1513 7 is_stmt 1 view .LVU558
 1718              		.loc 1 1513 20 is_stmt 0 view .LVU559
 1719 0088 0824     		movs	r4, #8
 1720 008a 1461     		str	r4, [r2, #16]
 1721              	.L135:
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_P
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
ARM GAS  /tmp/ccqrYTdR.s 			page 80


 1722              		.loc 1 1519 5 is_stmt 1 view .LVU560
 1723              		.loc 1 1519 54 is_stmt 0 view .LVU561
 1724 008c 0568     		ldr	r5, [r0]
 1725              		.loc 1 1519 86 view .LVU562
 1726 008e 01F11B0C 		add	ip, r1, #27
 1727 0092 05EB0C15 		add	r5, r5, ip, lsl #4
 1728 0096 6D68     		ldr	r5, [r5, #4]
 1729              		.loc 1 1519 93 view .LVU563
 1730 0098 C5F30725 		ubfx	r5, r5, #8, #8
 1731              		.loc 1 1519 31 view .LVU564
 1732 009c 9561     		str	r5, [r2, #24]
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1733              		.loc 1 1520 5 is_stmt 1 view .LVU565
 1734              		.loc 1 1520 48 is_stmt 0 view .LVU566
 1735 009e 0468     		ldr	r4, [r0]
 1736              		.loc 1 1520 80 view .LVU567
 1737 00a0 04EB0C14 		add	r4, r4, ip, lsl #4
 1738 00a4 6468     		ldr	r4, [r4, #4]
 1739              		.loc 1 1520 87 view .LVU568
 1740 00a6 240C     		lsrs	r4, r4, #16
 1741              		.loc 1 1520 24 view .LVU569
 1742 00a8 5461     		str	r4, [r2, #20]
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get the data */
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1743              		.loc 1 1523 5 is_stmt 1 view .LVU570
 1744              		.loc 1 1523 49 is_stmt 0 view .LVU571
 1745 00aa 0268     		ldr	r2, [r0]
 1746              	.LVL128:
 1747              		.loc 1 1523 81 view .LVU572
 1748 00ac 02EB0112 		add	r2, r2, r1, lsl #4
 1749 00b0 D2F8B821 		ldr	r2, [r2, #440]
 1750              		.loc 1 1523 14 view .LVU573
 1751 00b4 1A70     		strb	r2, [r3]
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1752              		.loc 1 1524 5 is_stmt 1 view .LVU574
 1753              		.loc 1 1524 49 is_stmt 0 view .LVU575
 1754 00b6 0268     		ldr	r2, [r0]
 1755              		.loc 1 1524 81 view .LVU576
 1756 00b8 02EB0112 		add	r2, r2, r1, lsl #4
 1757 00bc D2F8B821 		ldr	r2, [r2, #440]
 1758              		.loc 1 1524 16 view .LVU577
 1759 00c0 C2F30722 		ubfx	r2, r2, #8, #8
 1760              		.loc 1 1524 14 view .LVU578
 1761 00c4 5A70     		strb	r2, [r3, #1]
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1762              		.loc 1 1525 5 is_stmt 1 view .LVU579
 1763              		.loc 1 1525 49 is_stmt 0 view .LVU580
 1764 00c6 0268     		ldr	r2, [r0]
 1765              		.loc 1 1525 81 view .LVU581
 1766 00c8 02EB0112 		add	r2, r2, r1, lsl #4
 1767 00cc D2F8B821 		ldr	r2, [r2, #440]
 1768              		.loc 1 1525 16 view .LVU582
 1769 00d0 C2F30742 		ubfx	r2, r2, #16, #8
 1770              		.loc 1 1525 14 view .LVU583
 1771 00d4 9A70     		strb	r2, [r3, #2]
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
ARM GAS  /tmp/ccqrYTdR.s 			page 81


 1772              		.loc 1 1526 5 is_stmt 1 view .LVU584
 1773              		.loc 1 1526 49 is_stmt 0 view .LVU585
 1774 00d6 0268     		ldr	r2, [r0]
 1775              		.loc 1 1526 81 view .LVU586
 1776 00d8 02EB0112 		add	r2, r2, r1, lsl #4
 1777 00dc D2F8B821 		ldr	r2, [r2, #440]
 1778              		.loc 1 1526 16 view .LVU587
 1779 00e0 120E     		lsrs	r2, r2, #24
 1780              		.loc 1 1526 14 view .LVU588
 1781 00e2 DA70     		strb	r2, [r3, #3]
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1782              		.loc 1 1527 5 is_stmt 1 view .LVU589
 1783              		.loc 1 1527 49 is_stmt 0 view .LVU590
 1784 00e4 0268     		ldr	r2, [r0]
 1785              		.loc 1 1527 81 view .LVU591
 1786 00e6 02EB0112 		add	r2, r2, r1, lsl #4
 1787 00ea D2F8BC21 		ldr	r2, [r2, #444]
 1788              		.loc 1 1527 14 view .LVU592
 1789 00ee 1A71     		strb	r2, [r3, #4]
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1790              		.loc 1 1528 5 is_stmt 1 view .LVU593
 1791              		.loc 1 1528 49 is_stmt 0 view .LVU594
 1792 00f0 0268     		ldr	r2, [r0]
 1793              		.loc 1 1528 81 view .LVU595
 1794 00f2 02EB0112 		add	r2, r2, r1, lsl #4
 1795 00f6 D2F8BC21 		ldr	r2, [r2, #444]
 1796              		.loc 1 1528 16 view .LVU596
 1797 00fa C2F30722 		ubfx	r2, r2, #8, #8
 1798              		.loc 1 1528 14 view .LVU597
 1799 00fe 5A71     		strb	r2, [r3, #5]
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1800              		.loc 1 1529 5 is_stmt 1 view .LVU598
 1801              		.loc 1 1529 49 is_stmt 0 view .LVU599
 1802 0100 0268     		ldr	r2, [r0]
 1803              		.loc 1 1529 81 view .LVU600
 1804 0102 02EB0112 		add	r2, r2, r1, lsl #4
 1805 0106 D2F8BC21 		ldr	r2, [r2, #444]
 1806              		.loc 1 1529 16 view .LVU601
 1807 010a C2F30742 		ubfx	r2, r2, #16, #8
 1808              		.loc 1 1529 14 view .LVU602
 1809 010e 9A71     		strb	r2, [r3, #6]
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1810              		.loc 1 1530 5 is_stmt 1 view .LVU603
 1811              		.loc 1 1530 49 is_stmt 0 view .LVU604
 1812 0110 0268     		ldr	r2, [r0]
 1813              		.loc 1 1530 81 view .LVU605
 1814 0112 02EB0112 		add	r2, r2, r1, lsl #4
 1815 0116 D2F8BC21 		ldr	r2, [r2, #444]
 1816              		.loc 1 1530 16 view .LVU606
 1817 011a 120E     		lsrs	r2, r2, #24
 1818              		.loc 1 1530 14 view .LVU607
 1819 011c DA71     		strb	r2, [r3, #7]
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Release the FIFO */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1820              		.loc 1 1533 5 is_stmt 1 view .LVU608
 1821              		.loc 1 1533 8 is_stmt 0 view .LVU609
ARM GAS  /tmp/ccqrYTdR.s 			page 82


 1822 011e C1B9     		cbnz	r1, .L136
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Release RX FIFO 0 */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 1823              		.loc 1 1536 7 is_stmt 1 view .LVU610
 1824 0120 0268     		ldr	r2, [r0]
 1825 0122 D368     		ldr	r3, [r2, #12]
 1826              	.LVL129:
 1827              		.loc 1 1536 7 is_stmt 0 view .LVU611
 1828 0124 43F02003 		orr	r3, r3, #32
 1829 0128 D360     		str	r3, [r2, #12]
 1830              	.L137:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Release RX FIFO 1 */
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 1831              		.loc 1 1545 5 is_stmt 1 view .LVU612
 1832              		.loc 1 1545 12 is_stmt 0 view .LVU613
 1833 012a 0020     		movs	r0, #0
 1834              	.LVL130:
 1835              	.L131:
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1836              		.loc 1 1554 1 view .LVU614
 1837 012c 30BC     		pop	{r4, r5}
 1838              	.LCFI13:
 1839              		.cfi_remember_state
 1840              		.cfi_restore 5
 1841              		.cfi_restore 4
 1842              		.cfi_def_cfa_offset 0
 1843 012e 7047     		bx	lr
 1844              	.LVL131:
 1845              	.L132:
 1846              	.LCFI14:
 1847              		.cfi_restore_state
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1848              		.loc 1 1506 7 is_stmt 1 view .LVU615
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1849              		.loc 1 1507 29 is_stmt 0 view .LVU616
 1850 0130 0568     		ldr	r5, [r0]
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1851              		.loc 1 1507 61 view .LVU617
 1852 0132 01F11B04 		add	r4, r1, #27
 1853 0136 2401     		lsls	r4, r4, #4
 1854 0138 2C59     		ldr	r4, [r5, r4]
ARM GAS  /tmp/ccqrYTdR.s 			page 83


1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1855              		.loc 1 1507 67 view .LVU618
 1856 013a E408     		lsrs	r4, r4, #3
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1857              		.loc 1 1506 22 view .LVU619
 1858 013c 5460     		str	r4, [r2, #4]
 1859 013e 92E7     		b	.L133
 1860              	.L134:
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1861              		.loc 1 1517 7 is_stmt 1 view .LVU620
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1862              		.loc 1 1517 75 is_stmt 0 view .LVU621
 1863 0140 01F11B05 		add	r5, r1, #27
 1864 0144 04EB0514 		add	r4, r4, r5, lsl #4
 1865 0148 6468     		ldr	r4, [r4, #4]
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1866              		.loc 1 1517 82 view .LVU622
 1867 014a 04F00F04 		and	r4, r4, #15
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1868              		.loc 1 1517 20 view .LVU623
 1869 014e 1461     		str	r4, [r2, #16]
 1870 0150 9CE7     		b	.L135
 1871              	.LVL132:
 1872              	.L136:
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1873              		.loc 1 1541 7 is_stmt 1 view .LVU624
 1874 0152 0268     		ldr	r2, [r0]
 1875 0154 1369     		ldr	r3, [r2, #16]
 1876              	.LVL133:
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1877              		.loc 1 1541 7 is_stmt 0 view .LVU625
 1878 0156 43F02003 		orr	r3, r3, #32
 1879 015a 1361     		str	r3, [r2, #16]
 1880 015c E5E7     		b	.L137
 1881              	.LVL134:
 1882              	.L128:
 1883              	.LCFI15:
 1884              		.cfi_def_cfa_offset 0
 1885              		.cfi_restore 4
 1886              		.cfi_restore 5
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1887              		.loc 1 1550 5 is_stmt 1 view .LVU626
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1888              		.loc 1 1550 21 is_stmt 0 view .LVU627
 1889 015e 436A     		ldr	r3, [r0, #36]
 1890              	.LVL135:
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1891              		.loc 1 1550 21 view .LVU628
 1892 0160 43F48023 		orr	r3, r3, #262144
 1893 0164 4362     		str	r3, [r0, #36]
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1894              		.loc 1 1552 5 is_stmt 1 view .LVU629
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1895              		.loc 1 1552 12 is_stmt 0 view .LVU630
 1896 0166 0120     		movs	r0, #1
 1897              	.LVL136:
 1898              		.loc 1 1554 1 view .LVU631
ARM GAS  /tmp/ccqrYTdR.s 			page 84


 1899 0168 7047     		bx	lr
 1900              		.cfi_endproc
 1901              	.LFE138:
 1903              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1904              		.align	1
 1905              		.global	HAL_CAN_GetRxFifoFillLevel
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1909              		.fpu fpv4-sp-d16
 1911              	HAL_CAN_GetRxFifoFillLevel:
 1912              	.LVL137:
 1913              	.LFB139:
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1914              		.loc 1 1565 1 is_stmt 1 view -0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918              		@ link register save eliminated.
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filllevel = 0U;
 1919              		.loc 1 1566 3 view .LVU633
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1920              		.loc 1 1567 3 view .LVU634
 1921              		.loc 1 1567 24 is_stmt 0 view .LVU635
 1922 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1923              	.LVL138:
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1924              		.loc 1 1570 3 is_stmt 1 view .LVU636
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1925              		.loc 1 1572 3 view .LVU637
 1926              		.loc 1 1572 38 is_stmt 0 view .LVU638
 1927 0004 013B     		subs	r3, r3, #1
 1928              	.LVL139:
 1929              		.loc 1 1572 38 view .LVU639
 1930 0006 DBB2     		uxtb	r3, r3
 1931              		.loc 1 1572 6 view .LVU640
 1932 0008 012B     		cmp	r3, #1
 1933 000a 01D9     		bls	.L146
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1934              		.loc 1 1566 12 view .LVU641
 1935 000c 0020     		movs	r0, #0
 1936              	.LVL140:
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
ARM GAS  /tmp/ccqrYTdR.s 			page 85


1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return Rx FIFO fill level */
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return filllevel;
 1937              		.loc 1 1586 3 is_stmt 1 view .LVU642
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1938              		.loc 1 1587 1 is_stmt 0 view .LVU643
 1939 000e 7047     		bx	lr
 1940              	.LVL141:
 1941              	.L146:
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1942              		.loc 1 1575 5 is_stmt 1 view .LVU644
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 1943              		.loc 1 1575 8 is_stmt 0 view .LVU645
 1944 0010 21B9     		cbnz	r1, .L144
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1945              		.loc 1 1577 7 is_stmt 1 view .LVU646
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1946              		.loc 1 1577 23 is_stmt 0 view .LVU647
 1947 0012 0368     		ldr	r3, [r0]
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1948              		.loc 1 1577 33 view .LVU648
 1949 0014 D868     		ldr	r0, [r3, #12]
 1950              	.LVL142:
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1951              		.loc 1 1577 17 view .LVU649
 1952 0016 00F00300 		and	r0, r0, #3
 1953              	.LVL143:
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1954              		.loc 1 1577 17 view .LVU650
 1955 001a 7047     		bx	lr
 1956              	.LVL144:
 1957              	.L144:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1958              		.loc 1 1581 7 is_stmt 1 view .LVU651
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1959              		.loc 1 1581 23 is_stmt 0 view .LVU652
 1960 001c 0368     		ldr	r3, [r0]
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1961              		.loc 1 1581 33 view .LVU653
 1962 001e 1869     		ldr	r0, [r3, #16]
 1963              	.LVL145:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1964              		.loc 1 1581 17 view .LVU654
 1965 0020 00F00300 		and	r0, r0, #3
 1966              	.LVL146:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 1967              		.loc 1 1581 17 view .LVU655
 1968 0024 7047     		bx	lr
ARM GAS  /tmp/ccqrYTdR.s 			page 86


 1969              		.cfi_endproc
 1970              	.LFE139:
 1972              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 1973              		.align	1
 1974              		.global	HAL_CAN_ActivateNotification
 1975              		.syntax unified
 1976              		.thumb
 1977              		.thumb_func
 1978              		.fpu fpv4-sp-d16
 1980              	HAL_CAN_ActivateNotification:
 1981              	.LVL147:
 1982              	.LFB140:
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief    Interrupts management
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                        ##### Interrupts management #####
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Enable interrupts.
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1983              		.loc 1 1618 1 is_stmt 1 view -0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 0
 1986              		@ frame_needed = 0, uses_anonymous_args = 0
 1987              		@ link register save eliminated.
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1988              		.loc 1 1619 3 view .LVU657
 1989              		.loc 1 1619 24 is_stmt 0 view .LVU658
 1990 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1991              	.LVL148:
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 1992              		.loc 1 1622 3 is_stmt 1 view .LVU659
ARM GAS  /tmp/ccqrYTdR.s 			page 87


1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1993              		.loc 1 1624 3 view .LVU660
 1994              		.loc 1 1624 38 is_stmt 0 view .LVU661
 1995 0004 013B     		subs	r3, r3, #1
 1996              	.LVL149:
 1997              		.loc 1 1624 38 view .LVU662
 1998 0006 DBB2     		uxtb	r3, r3
 1999              		.loc 1 1624 6 view .LVU663
 2000 0008 012B     		cmp	r3, #1
 2001 000a 05D9     		bls	.L150
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Enable the selected interrupts */
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2002              		.loc 1 1636 5 is_stmt 1 view .LVU664
 2003              		.loc 1 1636 21 is_stmt 0 view .LVU665
 2004 000c 436A     		ldr	r3, [r0, #36]
 2005 000e 43F48023 		orr	r3, r3, #262144
 2006 0012 4362     		str	r3, [r0, #36]
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 2007              		.loc 1 1638 5 is_stmt 1 view .LVU666
 2008              		.loc 1 1638 12 is_stmt 0 view .LVU667
 2009 0014 0120     		movs	r0, #1
 2010              	.LVL150:
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2011              		.loc 1 1640 1 view .LVU668
 2012 0016 7047     		bx	lr
 2013              	.LVL151:
 2014              	.L150:
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2015              		.loc 1 1628 5 is_stmt 1 view .LVU669
 2016 0018 0268     		ldr	r2, [r0]
 2017 001a 5369     		ldr	r3, [r2, #20]
 2018 001c 1943     		orrs	r1, r1, r3
 2019              	.LVL152:
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2020              		.loc 1 1628 5 is_stmt 0 view .LVU670
 2021 001e 5161     		str	r1, [r2, #20]
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2022              		.loc 1 1631 5 is_stmt 1 view .LVU671
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2023              		.loc 1 1631 12 is_stmt 0 view .LVU672
 2024 0020 0020     		movs	r0, #0
 2025              	.LVL153:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2026              		.loc 1 1631 12 view .LVU673
ARM GAS  /tmp/ccqrYTdR.s 			page 88


 2027 0022 7047     		bx	lr
 2028              		.cfi_endproc
 2029              	.LFE140:
 2031              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2032              		.align	1
 2033              		.global	HAL_CAN_DeactivateNotification
 2034              		.syntax unified
 2035              		.thumb
 2036              		.thumb_func
 2037              		.fpu fpv4-sp-d16
 2039              	HAL_CAN_DeactivateNotification:
 2040              	.LVL154:
 2041              	.LFB141:
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Disable interrupts.
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2042              		.loc 1 1651 1 is_stmt 1 view -0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2047              		.loc 1 1652 3 view .LVU675
 2048              		.loc 1 1652 24 is_stmt 0 view .LVU676
 2049 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2050              	.LVL155:
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check function parameters */
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2051              		.loc 1 1655 3 is_stmt 1 view .LVU677
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2052              		.loc 1 1657 3 view .LVU678
 2053              		.loc 1 1657 38 is_stmt 0 view .LVU679
 2054 0004 013B     		subs	r3, r3, #1
 2055              	.LVL156:
 2056              		.loc 1 1657 38 view .LVU680
 2057 0006 DBB2     		uxtb	r3, r3
 2058              		.loc 1 1657 6 view .LVU681
 2059 0008 012B     		cmp	r3, #1
 2060 000a 05D9     		bls	.L154
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Disable the selected interrupts */
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
ARM GAS  /tmp/ccqrYTdR.s 			page 89


1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2061              		.loc 1 1669 5 is_stmt 1 view .LVU682
 2062              		.loc 1 1669 21 is_stmt 0 view .LVU683
 2063 000c 436A     		ldr	r3, [r0, #36]
 2064 000e 43F48023 		orr	r3, r3, #262144
 2065 0012 4362     		str	r3, [r0, #36]
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 2066              		.loc 1 1671 5 is_stmt 1 view .LVU684
 2067              		.loc 1 1671 12 is_stmt 0 view .LVU685
 2068 0014 0120     		movs	r0, #1
 2069              	.LVL157:
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2070              		.loc 1 1673 1 view .LVU686
 2071 0016 7047     		bx	lr
 2072              	.LVL158:
 2073              	.L154:
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2074              		.loc 1 1661 5 is_stmt 1 view .LVU687
 2075 0018 0268     		ldr	r2, [r0]
 2076 001a 5369     		ldr	r3, [r2, #20]
 2077 001c 23EA0101 		bic	r1, r3, r1
 2078              	.LVL159:
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2079              		.loc 1 1661 5 is_stmt 0 view .LVU688
 2080 0020 5161     		str	r1, [r2, #20]
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2081              		.loc 1 1664 5 is_stmt 1 view .LVU689
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2082              		.loc 1 1664 12 is_stmt 0 view .LVU690
 2083 0022 0020     		movs	r0, #0
 2084              	.LVL160:
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2085              		.loc 1 1664 12 view .LVU691
 2086 0024 7047     		bx	lr
 2087              		.cfi_endproc
 2088              	.LFE141:
 2090              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2091              		.align	1
 2092              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2093              		.syntax unified
 2094              		.thumb
 2095              		.thumb_func
 2096              		.fpu fpv4-sp-d16
 2098              	HAL_CAN_TxMailbox0CompleteCallback:
 2099              	.LVL161:
 2100              	.LFB143:
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
ARM GAS  /tmp/ccqrYTdR.s 			page 90


1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call registered callback*/
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call weak (surcharged) callback */
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call registered callback*/
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call weak (surcharged) callback */
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 91


1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call registered callback*/
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call weak (surcharged) callback */
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call registered callback*/
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call weak (surcharged) callback */
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call registered callback*/
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call weak (surcharged) callback */
ARM GAS  /tmp/ccqrYTdR.s 			page 92


1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Update error code */
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         else
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call registered callback*/
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Call weak (surcharged) callback */
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call registered callback*/
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
ARM GAS  /tmp/ccqrYTdR.s 			page 93


1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check if message is still pending */
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call registered callback*/
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call registered callback*/
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
ARM GAS  /tmp/ccqrYTdR.s 			page 94


1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check if message is still pending */
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call registered callback*/
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Sleep Callback */
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call registered callback*/
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->SleepCallback(hcan);
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear WakeUp Flag */
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* WakeUp Callback */
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call registered callback*/
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Call weak (surcharged) callback */
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Error interrupts management *********************************************/
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
ARM GAS  /tmp/ccqrYTdR.s 			page 95


1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Error Warning Flag */
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Set CAN error code to Error Warning */
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Error Passive Flag */
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Set CAN error code to Error Passive */
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Bus-off Flag */
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Last Error Code Flag */
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Form error */
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
ARM GAS  /tmp/ccqrYTdR.s 			page 96


2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             /* Set CAN error code to CRC error */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           default:
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Clear Last error code Flag */
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Clear ERRI Flag */
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code in handle */
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call Error callback function */
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call registered callback*/
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #else
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call weak (surcharged) callback */
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief   CAN Callback functions
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                           ##### Callback functions #####
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     This subsection provides the following callback functions:
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
ARM GAS  /tmp/ccqrYTdR.s 			page 97


2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2101              		.loc 1 2093 1 is_stmt 1 view -0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105              		@ link register save eliminated.
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2106              		.loc 1 2095 3 view .LVU693
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2107              		.loc 1 2101 1 is_stmt 0 view .LVU694
 2108 0000 7047     		bx	lr
 2109              		.cfi_endproc
 2110              	.LFE143:
 2112              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2113              		.align	1
 2114              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2115              		.syntax unified
 2116              		.thumb
 2117              		.thumb_func
 2118              		.fpu fpv4-sp-d16
 2120              	HAL_CAN_TxMailbox1CompleteCallback:
 2121              	.LVL162:
 2122              	.LFB144:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2123              		.loc 1 2110 1 is_stmt 1 view -0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
 2127              		@ link register save eliminated.
ARM GAS  /tmp/ccqrYTdR.s 			page 98


2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2128              		.loc 1 2112 3 view .LVU696
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2129              		.loc 1 2118 1 is_stmt 0 view .LVU697
 2130 0000 7047     		bx	lr
 2131              		.cfi_endproc
 2132              	.LFE144:
 2134              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 2135              		.align	1
 2136              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 2137              		.syntax unified
 2138              		.thumb
 2139              		.thumb_func
 2140              		.fpu fpv4-sp-d16
 2142              	HAL_CAN_TxMailbox2CompleteCallback:
 2143              	.LVL163:
 2144              	.LFB145:
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2145              		.loc 1 2127 1 is_stmt 1 view -0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 0
 2148              		@ frame_needed = 0, uses_anonymous_args = 0
 2149              		@ link register save eliminated.
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2150              		.loc 1 2129 3 view .LVU699
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2151              		.loc 1 2135 1 is_stmt 0 view .LVU700
 2152 0000 7047     		bx	lr
 2153              		.cfi_endproc
 2154              	.LFE145:
 2156              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2157              		.align	1
 2158              		.weak	HAL_CAN_TxMailbox0AbortCallback
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2162              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccqrYTdR.s 			page 99


 2164              	HAL_CAN_TxMailbox0AbortCallback:
 2165              	.LVL164:
 2166              	.LFB146:
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2167              		.loc 1 2144 1 is_stmt 1 view -0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
 2171              		@ link register save eliminated.
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2172              		.loc 1 2146 3 view .LVU702
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2173              		.loc 1 2152 1 is_stmt 0 view .LVU703
 2174 0000 7047     		bx	lr
 2175              		.cfi_endproc
 2176              	.LFE146:
 2178              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 2179              		.align	1
 2180              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2181              		.syntax unified
 2182              		.thumb
 2183              		.thumb_func
 2184              		.fpu fpv4-sp-d16
 2186              	HAL_CAN_TxMailbox1AbortCallback:
 2187              	.LVL165:
 2188              	.LFB147:
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2189              		.loc 1 2161 1 is_stmt 1 view -0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
 2193              		@ link register save eliminated.
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2194              		.loc 1 2163 3 view .LVU705
ARM GAS  /tmp/ccqrYTdR.s 			page 100


2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2195              		.loc 1 2169 1 is_stmt 0 view .LVU706
 2196 0000 7047     		bx	lr
 2197              		.cfi_endproc
 2198              	.LFE147:
 2200              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2201              		.align	1
 2202              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2203              		.syntax unified
 2204              		.thumb
 2205              		.thumb_func
 2206              		.fpu fpv4-sp-d16
 2208              	HAL_CAN_TxMailbox2AbortCallback:
 2209              	.LVL166:
 2210              	.LFB148:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2211              		.loc 1 2178 1 is_stmt 1 view -0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215              		@ link register save eliminated.
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2216              		.loc 1 2180 3 view .LVU708
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2217              		.loc 1 2186 1 is_stmt 0 view .LVU709
 2218 0000 7047     		bx	lr
 2219              		.cfi_endproc
 2220              	.LFE148:
 2222              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2223              		.align	1
 2224              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2225              		.syntax unified
 2226              		.thumb
 2227              		.thumb_func
 2228              		.fpu fpv4-sp-d16
 2230              	HAL_CAN_RxFifo0MsgPendingCallback:
 2231              	.LVL167:
 2232              	.LFB149:
ARM GAS  /tmp/ccqrYTdR.s 			page 101


2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2233              		.loc 1 2195 1 is_stmt 1 view -0
 2234              		.cfi_startproc
 2235              		@ args = 0, pretend = 0, frame = 0
 2236              		@ frame_needed = 0, uses_anonymous_args = 0
 2237              		@ link register save eliminated.
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2238              		.loc 1 2197 3 view .LVU711
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2239              		.loc 1 2203 1 is_stmt 0 view .LVU712
 2240 0000 7047     		bx	lr
 2241              		.cfi_endproc
 2242              	.LFE149:
 2244              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2245              		.align	1
 2246              		.weak	HAL_CAN_RxFifo0FullCallback
 2247              		.syntax unified
 2248              		.thumb
 2249              		.thumb_func
 2250              		.fpu fpv4-sp-d16
 2252              	HAL_CAN_RxFifo0FullCallback:
 2253              	.LVL168:
 2254              	.LFB150:
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2255              		.loc 1 2212 1 is_stmt 1 view -0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 0
 2258              		@ frame_needed = 0, uses_anonymous_args = 0
 2259              		@ link register save eliminated.
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2260              		.loc 1 2214 3 view .LVU714
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
ARM GAS  /tmp/ccqrYTdR.s 			page 102


2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             file
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2261              		.loc 1 2220 1 is_stmt 0 view .LVU715
 2262 0000 7047     		bx	lr
 2263              		.cfi_endproc
 2264              	.LFE150:
 2266              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2267              		.align	1
 2268              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2269              		.syntax unified
 2270              		.thumb
 2271              		.thumb_func
 2272              		.fpu fpv4-sp-d16
 2274              	HAL_CAN_RxFifo1MsgPendingCallback:
 2275              	.LVL169:
 2276              	.LFB151:
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2277              		.loc 1 2229 1 is_stmt 1 view -0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 0
 2280              		@ frame_needed = 0, uses_anonymous_args = 0
 2281              		@ link register save eliminated.
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2282              		.loc 1 2231 3 view .LVU717
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2283              		.loc 1 2237 1 is_stmt 0 view .LVU718
 2284 0000 7047     		bx	lr
 2285              		.cfi_endproc
 2286              	.LFE151:
 2288              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2289              		.align	1
 2290              		.weak	HAL_CAN_RxFifo1FullCallback
 2291              		.syntax unified
 2292              		.thumb
 2293              		.thumb_func
 2294              		.fpu fpv4-sp-d16
 2296              	HAL_CAN_RxFifo1FullCallback:
 2297              	.LVL170:
 2298              	.LFB152:
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
ARM GAS  /tmp/ccqrYTdR.s 			page 103


2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2299              		.loc 1 2246 1 is_stmt 1 view -0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 0, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2304              		.loc 1 2248 3 view .LVU720
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             file
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2305              		.loc 1 2254 1 is_stmt 0 view .LVU721
 2306 0000 7047     		bx	lr
 2307              		.cfi_endproc
 2308              	.LFE152:
 2310              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2311              		.align	1
 2312              		.weak	HAL_CAN_SleepCallback
 2313              		.syntax unified
 2314              		.thumb
 2315              		.thumb_func
 2316              		.fpu fpv4-sp-d16
 2318              	HAL_CAN_SleepCallback:
 2319              	.LVL171:
 2320              	.LFB153:
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Sleep callback.
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2321              		.loc 1 2263 1 is_stmt 1 view -0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325              		@ link register save eliminated.
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2326              		.loc 1 2265 3 view .LVU723
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2327              		.loc 1 2270 1 is_stmt 0 view .LVU724
ARM GAS  /tmp/ccqrYTdR.s 			page 104


 2328 0000 7047     		bx	lr
 2329              		.cfi_endproc
 2330              	.LFE153:
 2332              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 2333              		.align	1
 2334              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2335              		.syntax unified
 2336              		.thumb
 2337              		.thumb_func
 2338              		.fpu fpv4-sp-d16
 2340              	HAL_CAN_WakeUpFromRxMsgCallback:
 2341              	.LVL172:
 2342              	.LFB154:
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2343              		.loc 1 2279 1 is_stmt 1 view -0
 2344              		.cfi_startproc
 2345              		@ args = 0, pretend = 0, frame = 0
 2346              		@ frame_needed = 0, uses_anonymous_args = 0
 2347              		@ link register save eliminated.
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2348              		.loc 1 2281 3 view .LVU726
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             user file
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2349              		.loc 1 2287 1 is_stmt 0 view .LVU727
 2350 0000 7047     		bx	lr
 2351              		.cfi_endproc
 2352              	.LFE154:
 2354              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2355              		.align	1
 2356              		.weak	HAL_CAN_ErrorCallback
 2357              		.syntax unified
 2358              		.thumb
 2359              		.thumb_func
 2360              		.fpu fpv4-sp-d16
 2362              	HAL_CAN_ErrorCallback:
 2363              	.LVL173:
 2364              	.LFB155:
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Error CAN callback.
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
ARM GAS  /tmp/ccqrYTdR.s 			page 105


2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2365              		.loc 1 2296 1 is_stmt 1 view -0
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 0
 2368              		@ frame_needed = 0, uses_anonymous_args = 0
 2369              		@ link register save eliminated.
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 2370              		.loc 1 2298 3 view .LVU729
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2371              		.loc 1 2303 1 is_stmt 0 view .LVU730
 2372 0000 7047     		bx	lr
 2373              		.cfi_endproc
 2374              	.LFE155:
 2376              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2377              		.align	1
 2378              		.global	HAL_CAN_IRQHandler
 2379              		.syntax unified
 2380              		.thumb
 2381              		.thumb_func
 2382              		.fpu fpv4-sp-d16
 2384              	HAL_CAN_IRQHandler:
 2385              	.LVL174:
 2386              	.LFB142:
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2387              		.loc 1 1682 1 is_stmt 1 view -0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2391              		.loc 1 1682 1 is_stmt 0 view .LVU732
 2392 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2393              	.LCFI16:
 2394              		.cfi_def_cfa_offset 40
 2395              		.cfi_offset 3, -40
 2396              		.cfi_offset 4, -36
 2397              		.cfi_offset 5, -32
 2398              		.cfi_offset 6, -28
 2399              		.cfi_offset 7, -24
 2400              		.cfi_offset 8, -20
 2401              		.cfi_offset 9, -16
 2402              		.cfi_offset 10, -12
 2403              		.cfi_offset 11, -8
 2404              		.cfi_offset 14, -4
 2405 0004 0546     		mov	r5, r0
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2406              		.loc 1 1683 3 is_stmt 1 view .LVU733
 2407              	.LVL175:
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2408              		.loc 1 1684 3 view .LVU734
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2409              		.loc 1 1684 25 is_stmt 0 view .LVU735
ARM GAS  /tmp/ccqrYTdR.s 			page 106


 2410 0006 0368     		ldr	r3, [r0]
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2411              		.loc 1 1684 12 view .LVU736
 2412 0008 5C69     		ldr	r4, [r3, #20]
 2413              	.LVL176:
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2414              		.loc 1 1685 3 is_stmt 1 view .LVU737
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2415              		.loc 1 1685 12 is_stmt 0 view .LVU738
 2416 000a D3F80480 		ldr	r8, [r3, #4]
 2417              	.LVL177:
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2418              		.loc 1 1686 3 is_stmt 1 view .LVU739
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2419              		.loc 1 1686 12 is_stmt 0 view .LVU740
 2420 000e 9F68     		ldr	r7, [r3, #8]
 2421              	.LVL178:
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2422              		.loc 1 1687 3 is_stmt 1 view .LVU741
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2423              		.loc 1 1687 12 is_stmt 0 view .LVU742
 2424 0010 D3F80CB0 		ldr	fp, [r3, #12]
 2425              	.LVL179:
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2426              		.loc 1 1688 3 is_stmt 1 view .LVU743
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2427              		.loc 1 1688 12 is_stmt 0 view .LVU744
 2428 0014 D3F810A0 		ldr	r10, [r3, #16]
 2429              	.LVL180:
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2430              		.loc 1 1689 3 is_stmt 1 view .LVU745
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2431              		.loc 1 1689 12 is_stmt 0 view .LVU746
 2432 0018 D3F81890 		ldr	r9, [r3, #24]
 2433              	.LVL181:
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2434              		.loc 1 1692 3 is_stmt 1 view .LVU747
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2435              		.loc 1 1692 6 is_stmt 0 view .LVU748
 2436 001c 14F00106 		ands	r6, r4, #1
 2437 0020 3BD0     		beq	.L169
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2438              		.loc 1 1695 5 is_stmt 1 view .LVU749
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2439              		.loc 1 1695 8 is_stmt 0 view .LVU750
 2440 0022 17F00106 		ands	r6, r7, #1
 2441 0026 16D0     		beq	.L170
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2442              		.loc 1 1698 7 is_stmt 1 view .LVU751
 2443 0028 0122     		movs	r2, #1
 2444 002a 9A60     		str	r2, [r3, #8]
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2445              		.loc 1 1700 7 view .LVU752
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2446              		.loc 1 1700 10 is_stmt 0 view .LVU753
 2447 002c 17F0020F 		tst	r7, #2
 2448 0030 08D1     		bne	.L204
ARM GAS  /tmp/ccqrYTdR.s 			page 107


1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2449              		.loc 1 1713 9 is_stmt 1 view .LVU754
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2450              		.loc 1 1713 12 is_stmt 0 view .LVU755
 2451 0032 17F0040F 		tst	r7, #4
 2452 0036 0CD1     		bne	.L201
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2453              		.loc 1 1718 14 is_stmt 1 view .LVU756
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2454              		.loc 1 1718 17 is_stmt 0 view .LVU757
 2455 0038 17F00806 		ands	r6, r7, #8
 2456 003c 06D0     		beq	.L205
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2457              		.loc 1 1721 21 view .LVU758
 2458 003e 4FF48056 		mov	r6, #4096
 2459 0042 08E0     		b	.L170
 2460              	.L204:
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2461              		.loc 1 1708 9 is_stmt 1 view .LVU759
 2462 0044 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2463              	.LVL182:
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2464              		.loc 1 1683 12 is_stmt 0 view .LVU760
 2465 0048 0026     		movs	r6, #0
 2466 004a 04E0     		b	.L170
 2467              	.LVL183:
 2468              	.L205:
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2469              		.loc 1 1731 11 is_stmt 1 view .LVU761
 2470 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2471              	.LVL184:
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2472              		.loc 1 1731 11 is_stmt 0 view .LVU762
 2473 0050 01E0     		b	.L170
 2474              	.LVL185:
 2475              	.L201:
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2476              		.loc 1 1716 21 view .LVU763
 2477 0052 4FF40066 		mov	r6, #2048
 2478              	.LVL186:
 2479              	.L170:
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2480              		.loc 1 1738 5 is_stmt 1 view .LVU764
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2481              		.loc 1 1738 8 is_stmt 0 view .LVU765
 2482 0056 17F4807F 		tst	r7, #256
 2483 005a 0DD0     		beq	.L172
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2484              		.loc 1 1741 7 is_stmt 1 view .LVU766
 2485 005c 2B68     		ldr	r3, [r5]
 2486 005e 4FF48072 		mov	r2, #256
 2487 0062 9A60     		str	r2, [r3, #8]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2488              		.loc 1 1743 7 view .LVU767
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2489              		.loc 1 1743 10 is_stmt 0 view .LVU768
 2490 0064 17F4007F 		tst	r7, #512
ARM GAS  /tmp/ccqrYTdR.s 			page 108


 2491 0068 40F08680 		bne	.L206
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2492              		.loc 1 1756 9 is_stmt 1 view .LVU769
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2493              		.loc 1 1756 12 is_stmt 0 view .LVU770
 2494 006c 17F4806F 		tst	r7, #1024
 2495 0070 00F08680 		beq	.L174
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2496              		.loc 1 1759 11 is_stmt 1 view .LVU771
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2497              		.loc 1 1759 21 is_stmt 0 view .LVU772
 2498 0074 46F40056 		orr	r6, r6, #8192
 2499              	.LVL187:
 2500              	.L172:
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2501              		.loc 1 1781 5 is_stmt 1 view .LVU773
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2502              		.loc 1 1781 8 is_stmt 0 view .LVU774
 2503 0078 17F4803F 		tst	r7, #65536
 2504 007c 0DD0     		beq	.L169
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2505              		.loc 1 1784 7 is_stmt 1 view .LVU775
 2506 007e 2B68     		ldr	r3, [r5]
 2507 0080 4FF48032 		mov	r2, #65536
 2508 0084 9A60     		str	r2, [r3, #8]
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2509              		.loc 1 1786 7 view .LVU776
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2510              		.loc 1 1786 10 is_stmt 0 view .LVU777
 2511 0086 17F4003F 		tst	r7, #131072
 2512 008a 40F08380 		bne	.L207
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2513              		.loc 1 1799 9 is_stmt 1 view .LVU778
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2514              		.loc 1 1799 12 is_stmt 0 view .LVU779
 2515 008e 17F4802F 		tst	r7, #262144
 2516 0092 00F08380 		beq	.L177
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2517              		.loc 1 1802 11 is_stmt 1 view .LVU780
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2518              		.loc 1 1802 21 is_stmt 0 view .LVU781
 2519 0096 46F40046 		orr	r6, r6, #32768
 2520              	.LVL188:
 2521              	.L169:
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2522              		.loc 1 1825 3 is_stmt 1 view .LVU782
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2523              		.loc 1 1825 6 is_stmt 0 view .LVU783
 2524 009a 14F0080F 		tst	r4, #8
 2525 009e 07D0     		beq	.L179
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2526              		.loc 1 1827 5 is_stmt 1 view .LVU784
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2527              		.loc 1 1827 8 is_stmt 0 view .LVU785
 2528 00a0 1BF0100F 		tst	fp, #16
 2529 00a4 04D0     		beq	.L179
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 109


 2530              		.loc 1 1830 7 is_stmt 1 view .LVU786
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2531              		.loc 1 1830 17 is_stmt 0 view .LVU787
 2532 00a6 46F40076 		orr	r6, r6, #512
 2533              	.LVL189:
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2534              		.loc 1 1833 7 is_stmt 1 view .LVU788
 2535 00aa 2B68     		ldr	r3, [r5]
 2536 00ac 1022     		movs	r2, #16
 2537 00ae DA60     		str	r2, [r3, #12]
 2538              	.L179:
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2539              		.loc 1 1838 3 view .LVU789
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2540              		.loc 1 1838 6 is_stmt 0 view .LVU790
 2541 00b0 14F0040F 		tst	r4, #4
 2542 00b4 02D0     		beq	.L180
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2543              		.loc 1 1840 5 is_stmt 1 view .LVU791
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2544              		.loc 1 1840 8 is_stmt 0 view .LVU792
 2545 00b6 1BF0080F 		tst	fp, #8
 2546 00ba 79D1     		bne	.L208
 2547              	.L180:
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2548              		.loc 1 1857 3 is_stmt 1 view .LVU793
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2549              		.loc 1 1857 6 is_stmt 0 view .LVU794
 2550 00bc 14F0020F 		tst	r4, #2
 2551 00c0 04D0     		beq	.L181
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2552              		.loc 1 1860 5 is_stmt 1 view .LVU795
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2553              		.loc 1 1860 14 is_stmt 0 view .LVU796
 2554 00c2 2B68     		ldr	r3, [r5]
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2555              		.loc 1 1860 24 view .LVU797
 2556 00c4 DB68     		ldr	r3, [r3, #12]
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2557              		.loc 1 1860 8 view .LVU798
 2558 00c6 13F0030F 		tst	r3, #3
 2559 00ca 78D1     		bne	.L209
 2560              	.L181:
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2561              		.loc 1 1874 3 is_stmt 1 view .LVU799
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2562              		.loc 1 1874 6 is_stmt 0 view .LVU800
 2563 00cc 14F0400F 		tst	r4, #64
 2564 00d0 07D0     		beq	.L182
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2565              		.loc 1 1876 5 is_stmt 1 view .LVU801
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2566              		.loc 1 1876 8 is_stmt 0 view .LVU802
 2567 00d2 1AF0100F 		tst	r10, #16
 2568 00d6 04D0     		beq	.L182
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2569              		.loc 1 1879 7 is_stmt 1 view .LVU803
ARM GAS  /tmp/ccqrYTdR.s 			page 110


1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2570              		.loc 1 1879 17 is_stmt 0 view .LVU804
 2571 00d8 46F48066 		orr	r6, r6, #1024
 2572              	.LVL190:
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2573              		.loc 1 1882 7 is_stmt 1 view .LVU805
 2574 00dc 2B68     		ldr	r3, [r5]
 2575 00de 1022     		movs	r2, #16
 2576 00e0 1A61     		str	r2, [r3, #16]
 2577              	.L182:
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2578              		.loc 1 1887 3 view .LVU806
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2579              		.loc 1 1887 6 is_stmt 0 view .LVU807
 2580 00e2 14F0200F 		tst	r4, #32
 2581 00e6 02D0     		beq	.L183
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2582              		.loc 1 1889 5 is_stmt 1 view .LVU808
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2583              		.loc 1 1889 8 is_stmt 0 view .LVU809
 2584 00e8 1AF0080F 		tst	r10, #8
 2585 00ec 6BD1     		bne	.L210
 2586              	.L183:
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2587              		.loc 1 1906 3 is_stmt 1 view .LVU810
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2588              		.loc 1 1906 6 is_stmt 0 view .LVU811
 2589 00ee 14F0100F 		tst	r4, #16
 2590 00f2 04D0     		beq	.L184
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2591              		.loc 1 1909 5 is_stmt 1 view .LVU812
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2592              		.loc 1 1909 14 is_stmt 0 view .LVU813
 2593 00f4 2B68     		ldr	r3, [r5]
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2594              		.loc 1 1909 24 view .LVU814
 2595 00f6 1B69     		ldr	r3, [r3, #16]
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2596              		.loc 1 1909 8 view .LVU815
 2597 00f8 13F0030F 		tst	r3, #3
 2598 00fc 6AD1     		bne	.L211
 2599              	.L184:
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2600              		.loc 1 1923 3 is_stmt 1 view .LVU816
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2601              		.loc 1 1923 6 is_stmt 0 view .LVU817
 2602 00fe 14F4003F 		tst	r4, #131072
 2603 0102 02D0     		beq	.L185
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2604              		.loc 1 1925 5 is_stmt 1 view .LVU818
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2605              		.loc 1 1925 8 is_stmt 0 view .LVU819
 2606 0104 18F0100F 		tst	r8, #16
 2607 0108 68D1     		bne	.L212
 2608              	.L185:
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2609              		.loc 1 1942 3 is_stmt 1 view .LVU820
ARM GAS  /tmp/ccqrYTdR.s 			page 111


1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2610              		.loc 1 1942 6 is_stmt 0 view .LVU821
 2611 010a 14F4803F 		tst	r4, #65536
 2612 010e 02D0     		beq	.L186
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2613              		.loc 1 1944 5 is_stmt 1 view .LVU822
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2614              		.loc 1 1944 8 is_stmt 0 view .LVU823
 2615 0110 18F0080F 		tst	r8, #8
 2616 0114 69D1     		bne	.L213
 2617              	.L186:
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2618              		.loc 1 1961 3 is_stmt 1 view .LVU824
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2619              		.loc 1 1961 6 is_stmt 0 view .LVU825
 2620 0116 14F4004F 		tst	r4, #32768
 2621 011a 7AD0     		beq	.L187
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2622              		.loc 1 1963 5 is_stmt 1 view .LVU826
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2623              		.loc 1 1963 8 is_stmt 0 view .LVU827
 2624 011c 18F0040F 		tst	r8, #4
 2625 0120 74D0     		beq	.L188
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2626              		.loc 1 1966 7 is_stmt 1 view .LVU828
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2627              		.loc 1 1966 10 is_stmt 0 view .LVU829
 2628 0122 14F4807F 		tst	r4, #256
 2629 0126 04D0     		beq	.L189
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2630              		.loc 1 1966 55 discriminator 1 view .LVU830
 2631 0128 19F0010F 		tst	r9, #1
 2632 012c 01D0     		beq	.L189
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2633              		.loc 1 1970 9 is_stmt 1 view .LVU831
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2634              		.loc 1 1970 19 is_stmt 0 view .LVU832
 2635 012e 46F00106 		orr	r6, r6, #1
 2636              	.LVL191:
 2637              	.L189:
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2638              		.loc 1 1976 7 is_stmt 1 view .LVU833
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2639              		.loc 1 1976 10 is_stmt 0 view .LVU834
 2640 0132 14F4007F 		tst	r4, #512
 2641 0136 04D0     		beq	.L190
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2642              		.loc 1 1976 55 discriminator 1 view .LVU835
 2643 0138 19F0020F 		tst	r9, #2
 2644 013c 01D0     		beq	.L190
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2645              		.loc 1 1980 9 is_stmt 1 view .LVU836
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2646              		.loc 1 1980 19 is_stmt 0 view .LVU837
 2647 013e 46F00206 		orr	r6, r6, #2
 2648              	.LVL192:
 2649              	.L190:
ARM GAS  /tmp/ccqrYTdR.s 			page 112


1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2650              		.loc 1 1986 7 is_stmt 1 view .LVU838
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2651              		.loc 1 1986 10 is_stmt 0 view .LVU839
 2652 0142 14F4806F 		tst	r4, #1024
 2653 0146 04D0     		beq	.L191
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2654              		.loc 1 1986 48 discriminator 1 view .LVU840
 2655 0148 19F0040F 		tst	r9, #4
 2656 014c 01D0     		beq	.L191
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2657              		.loc 1 1990 9 is_stmt 1 view .LVU841
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2658              		.loc 1 1990 19 is_stmt 0 view .LVU842
 2659 014e 46F00406 		orr	r6, r6, #4
 2660              	.LVL193:
 2661              	.L191:
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2662              		.loc 1 1996 7 is_stmt 1 view .LVU843
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2663              		.loc 1 1996 10 is_stmt 0 view .LVU844
 2664 0152 14F4006F 		tst	r4, #2048
 2665 0156 59D0     		beq	.L188
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2666              		.loc 1 1996 57 discriminator 1 view .LVU845
 2667 0158 19F07009 		ands	r9, r9, #112
 2668              	.LVL194:
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2669              		.loc 1 1996 57 discriminator 1 view .LVU846
 2670 015c 56D0     		beq	.L188
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2671              		.loc 1 1999 9 is_stmt 1 view .LVU847
 2672 015e B9F1400F 		cmp	r9, #64
 2673 0162 65D0     		beq	.L192
 2674 0164 58D8     		bhi	.L193
 2675 0166 B9F1200F 		cmp	r9, #32
 2676 016a 5ED0     		beq	.L194
 2677 016c B9F1300F 		cmp	r9, #48
 2678 0170 42D1     		bne	.L214
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2679              		.loc 1 2011 13 view .LVU848
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2680              		.loc 1 2011 23 is_stmt 0 view .LVU849
 2681 0172 46F02006 		orr	r6, r6, #32
 2682              	.LVL195:
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2683              		.loc 1 2012 13 is_stmt 1 view .LVU850
 2684 0176 44E0     		b	.L197
 2685              	.LVL196:
 2686              	.L206:
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2687              		.loc 1 1751 9 view .LVU851
 2688 0178 2846     		mov	r0, r5
 2689 017a FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2690              	.LVL197:
 2691 017e 7BE7     		b	.L172
 2692              	.L174:
ARM GAS  /tmp/ccqrYTdR.s 			page 113


1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2693              		.loc 1 1761 14 view .LVU852
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2694              		.loc 1 1761 17 is_stmt 0 view .LVU853
 2695 0180 17F4006F 		tst	r7, #2048
 2696 0184 02D0     		beq	.L175
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2697              		.loc 1 1764 11 is_stmt 1 view .LVU854
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2698              		.loc 1 1764 21 is_stmt 0 view .LVU855
 2699 0186 46F48046 		orr	r6, r6, #16384
 2700              	.LVL198:
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2701              		.loc 1 1764 21 view .LVU856
 2702 018a 75E7     		b	.L172
 2703              	.L175:
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2704              		.loc 1 1774 11 is_stmt 1 view .LVU857
 2705 018c 2846     		mov	r0, r5
 2706 018e FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2707              	.LVL199:
 2708 0192 71E7     		b	.L172
 2709              	.L207:
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2710              		.loc 1 1794 9 view .LVU858
 2711 0194 2846     		mov	r0, r5
 2712 0196 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2713              	.LVL200:
 2714 019a 7EE7     		b	.L169
 2715              	.L177:
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2716              		.loc 1 1804 14 view .LVU859
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2717              		.loc 1 1804 17 is_stmt 0 view .LVU860
 2718 019c 17F4002F 		tst	r7, #524288
 2719 01a0 02D0     		beq	.L178
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2720              		.loc 1 1807 11 is_stmt 1 view .LVU861
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2721              		.loc 1 1807 21 is_stmt 0 view .LVU862
 2722 01a2 46F48036 		orr	r6, r6, #65536
 2723              	.LVL201:
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 2724              		.loc 1 1807 21 view .LVU863
 2725 01a6 78E7     		b	.L169
 2726              	.L178:
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2727              		.loc 1 1817 11 is_stmt 1 view .LVU864
 2728 01a8 2846     		mov	r0, r5
 2729 01aa FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2730              	.LVL202:
 2731 01ae 74E7     		b	.L169
 2732              	.L208:
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2733              		.loc 1 1843 7 view .LVU865
 2734 01b0 2B68     		ldr	r3, [r5]
 2735 01b2 0822     		movs	r2, #8
ARM GAS  /tmp/ccqrYTdR.s 			page 114


 2736 01b4 DA60     		str	r2, [r3, #12]
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2737              		.loc 1 1851 7 view .LVU866
 2738 01b6 2846     		mov	r0, r5
 2739 01b8 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2740              	.LVL203:
 2741 01bc 7EE7     		b	.L180
 2742              	.L209:
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2743              		.loc 1 1868 7 view .LVU867
 2744 01be 2846     		mov	r0, r5
 2745 01c0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2746              	.LVL204:
 2747 01c4 82E7     		b	.L181
 2748              	.L210:
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2749              		.loc 1 1892 7 view .LVU868
 2750 01c6 2B68     		ldr	r3, [r5]
 2751 01c8 0822     		movs	r2, #8
 2752 01ca 1A61     		str	r2, [r3, #16]
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2753              		.loc 1 1900 7 view .LVU869
 2754 01cc 2846     		mov	r0, r5
 2755 01ce FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2756              	.LVL205:
 2757 01d2 8CE7     		b	.L183
 2758              	.L211:
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2759              		.loc 1 1917 7 view .LVU870
 2760 01d4 2846     		mov	r0, r5
 2761 01d6 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2762              	.LVL206:
 2763 01da 90E7     		b	.L184
 2764              	.L212:
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2765              		.loc 1 1928 7 view .LVU871
 2766 01dc 2B68     		ldr	r3, [r5]
 2767 01de 1022     		movs	r2, #16
 2768 01e0 5A60     		str	r2, [r3, #4]
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2769              		.loc 1 1936 7 view .LVU872
 2770 01e2 2846     		mov	r0, r5
 2771 01e4 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2772              	.LVL207:
 2773 01e8 8FE7     		b	.L185
 2774              	.L213:
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2775              		.loc 1 1947 7 view .LVU873
 2776 01ea 2B68     		ldr	r3, [r5]
 2777 01ec 0822     		movs	r2, #8
 2778 01ee 5A60     		str	r2, [r3, #4]
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2779              		.loc 1 1955 7 view .LVU874
 2780 01f0 2846     		mov	r0, r5
 2781 01f2 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2782              	.LVL208:
 2783 01f6 8EE7     		b	.L186
ARM GAS  /tmp/ccqrYTdR.s 			page 115


 2784              	.LVL209:
 2785              	.L214:
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2786              		.loc 1 1999 9 is_stmt 0 view .LVU875
 2787 01f8 B9F1100F 		cmp	r9, #16
 2788 01fc 01D1     		bne	.L197
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2789              		.loc 1 2003 13 is_stmt 1 view .LVU876
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2790              		.loc 1 2003 23 is_stmt 0 view .LVU877
 2791 01fe 46F00806 		orr	r6, r6, #8
 2792              	.LVL210:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 2793              		.loc 1 2004 13 is_stmt 1 view .LVU878
 2794              	.L197:
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 2795              		.loc 1 2030 9 view .LVU879
 2796 0202 2A68     		ldr	r2, [r5]
 2797 0204 9369     		ldr	r3, [r2, #24]
 2798 0206 23F07003 		bic	r3, r3, #112
 2799 020a 9361     		str	r3, [r2, #24]
 2800              	.L188:
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2801              		.loc 1 2035 5 view .LVU880
 2802 020c 2B68     		ldr	r3, [r5]
 2803 020e 0422     		movs	r2, #4
 2804 0210 5A60     		str	r2, [r3, #4]
 2805              	.L187:
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2806              		.loc 1 2039 3 view .LVU881
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2807              		.loc 1 2039 6 is_stmt 0 view .LVU882
 2808 0212 9EB9     		cbnz	r6, .L215
 2809              	.LVL211:
 2810              	.L168:
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2811              		.loc 1 2053 1 view .LVU883
 2812 0214 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2813              	.LVL212:
 2814              	.L193:
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 2815              		.loc 1 1999 9 view .LVU884
 2816 0218 B9F1500F 		cmp	r9, #80
 2817 021c 0BD0     		beq	.L198
 2818 021e B9F1600F 		cmp	r9, #96
 2819 0222 EED1     		bne	.L197
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2820              		.loc 1 2023 13 is_stmt 1 view .LVU885
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2821              		.loc 1 2023 23 is_stmt 0 view .LVU886
 2822 0224 46F48076 		orr	r6, r6, #256
 2823              	.LVL213:
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           default:
 2824              		.loc 1 2024 13 is_stmt 1 view .LVU887
 2825 0228 EBE7     		b	.L197
 2826              	.L194:
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
ARM GAS  /tmp/ccqrYTdR.s 			page 116


 2827              		.loc 1 2007 13 view .LVU888
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2828              		.loc 1 2007 23 is_stmt 0 view .LVU889
 2829 022a 46F01006 		orr	r6, r6, #16
 2830              	.LVL214:
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2831              		.loc 1 2008 13 is_stmt 1 view .LVU890
 2832 022e E8E7     		b	.L197
 2833              	.L192:
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2834              		.loc 1 2015 13 view .LVU891
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2835              		.loc 1 2015 23 is_stmt 0 view .LVU892
 2836 0230 46F04006 		orr	r6, r6, #64
 2837              	.LVL215:
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2838              		.loc 1 2016 13 is_stmt 1 view .LVU893
 2839 0234 E5E7     		b	.L197
 2840              	.L198:
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2841              		.loc 1 2019 13 view .LVU894
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             break;
 2842              		.loc 1 2019 23 is_stmt 0 view .LVU895
 2843 0236 46F08006 		orr	r6, r6, #128
 2844              	.LVL216:
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2845              		.loc 1 2020 13 is_stmt 1 view .LVU896
 2846 023a E2E7     		b	.L197
 2847              	.L215:
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2848              		.loc 1 2042 5 view .LVU897
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2849              		.loc 1 2042 21 is_stmt 0 view .LVU898
 2850 023c 6B6A     		ldr	r3, [r5, #36]
 2851 023e 1E43     		orrs	r6, r6, r3
 2852              	.LVL217:
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2853              		.loc 1 2042 21 view .LVU899
 2854 0240 6E62     		str	r6, [r5, #36]
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2855              		.loc 1 2050 5 is_stmt 1 view .LVU900
 2856 0242 2846     		mov	r0, r5
 2857 0244 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2858              	.LVL218:
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2859              		.loc 1 2053 1 is_stmt 0 view .LVU901
 2860 0248 E4E7     		b	.L168
 2861              		.cfi_endproc
 2862              	.LFE142:
 2864              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2865              		.align	1
 2866              		.global	HAL_CAN_GetState
 2867              		.syntax unified
 2868              		.thumb
 2869              		.thumb_func
 2870              		.fpu fpv4-sp-d16
 2872              	HAL_CAN_GetState:
ARM GAS  /tmp/ccqrYTdR.s 			page 117


 2873              	.LVL219:
 2874              	.LFB156:
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief   CAN Peripheral State functions
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     This subsection provides functions allowing to :
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return the CAN state.
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL state
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2875              		.loc 1 2333 1 is_stmt 1 view -0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 0
 2878              		@ frame_needed = 0, uses_anonymous_args = 0
 2879              		@ link register save eliminated.
 2880              		.loc 1 2333 1 is_stmt 0 view .LVU903
 2881 0000 0246     		mov	r2, r0
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2882              		.loc 1 2334 3 is_stmt 1 view .LVU904
 2883              		.loc 1 2334 24 is_stmt 0 view .LVU905
 2884 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2885 0006 D8B2     		uxtb	r0, r3
 2886              	.LVL220:
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2887              		.loc 1 2336 3 is_stmt 1 view .LVU906
 2888              		.loc 1 2336 38 is_stmt 0 view .LVU907
 2889 0008 013B     		subs	r3, r3, #1
 2890 000a DBB2     		uxtb	r3, r3
 2891              		.loc 1 2336 6 view .LVU908
 2892 000c 012B     		cmp	r3, #1
 2893 000e 00D9     		bls	.L220
 2894              	.LVL221:
 2895              	.L217:
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
ARM GAS  /tmp/ccqrYTdR.s 			page 118


2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Sleep mode is active */
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check sleep mode request flag */
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Sleep mode request is pending */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2896              		.loc 1 2354 5 is_stmt 1 view .LVU909
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return CAN state */
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return state;
 2897              		.loc 1 2358 3 view .LVU910
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2898              		.loc 1 2359 1 is_stmt 0 view .LVU911
 2899 0010 7047     		bx	lr
 2900              	.LVL222:
 2901              	.L220:
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2902              		.loc 1 2340 5 is_stmt 1 view .LVU912
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2903              		.loc 1 2340 14 is_stmt 0 view .LVU913
 2904 0012 1368     		ldr	r3, [r2]
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2905              		.loc 1 2340 24 view .LVU914
 2906 0014 5A68     		ldr	r2, [r3, #4]
 2907              	.LVL223:
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2908              		.loc 1 2340 8 view .LVU915
 2909 0016 12F0020F 		tst	r2, #2
 2910 001a 05D1     		bne	.L218
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2911              		.loc 1 2346 10 is_stmt 1 view .LVU916
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2912              		.loc 1 2346 29 is_stmt 0 view .LVU917
 2913 001c 1B68     		ldr	r3, [r3]
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2914              		.loc 1 2346 13 view .LVU918
 2915 001e 13F0020F 		tst	r3, #2
 2916 0022 F5D0     		beq	.L217
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2917              		.loc 1 2349 13 view .LVU919
 2918 0024 0320     		movs	r0, #3
 2919              	.LVL224:
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2920              		.loc 1 2349 13 view .LVU920
 2921 0026 F3E7     		b	.L217
ARM GAS  /tmp/ccqrYTdR.s 			page 119


 2922              	.LVL225:
 2923              	.L218:
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2924              		.loc 1 2343 13 view .LVU921
 2925 0028 0420     		movs	r0, #4
 2926              	.LVL226:
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 2927              		.loc 1 2343 13 view .LVU922
 2928 002a 7047     		bx	lr
 2929              		.cfi_endproc
 2930              	.LFE156:
 2932              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2933              		.align	1
 2934              		.global	HAL_CAN_GetError
 2935              		.syntax unified
 2936              		.thumb
 2937              		.thumb_func
 2938              		.fpu fpv4-sp-d16
 2940              	HAL_CAN_GetError:
 2941              	.LVL227:
 2942              	.LFB157:
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return the CAN error code.
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval CAN Error Code
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2943              		.loc 1 2368 1 is_stmt 1 view -0
 2944              		.cfi_startproc
 2945              		@ args = 0, pretend = 0, frame = 0
 2946              		@ frame_needed = 0, uses_anonymous_args = 0
 2947              		@ link register save eliminated.
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return CAN error code */
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return hcan->ErrorCode;
 2948              		.loc 1 2370 3 view .LVU924
 2949              		.loc 1 2370 14 is_stmt 0 view .LVU925
 2950 0000 406A     		ldr	r0, [r0, #36]
 2951              	.LVL228:
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2952              		.loc 1 2371 1 view .LVU926
 2953 0002 7047     		bx	lr
 2954              		.cfi_endproc
 2955              	.LFE157:
 2957              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 2958              		.align	1
 2959              		.global	HAL_CAN_ResetError
 2960              		.syntax unified
 2961              		.thumb
 2962              		.thumb_func
 2963              		.fpu fpv4-sp-d16
 2965              	HAL_CAN_ResetError:
 2966              	.LVL229:
 2967              	.LFB158:
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccqrYTdR.s 			page 120


2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Reset the CAN error code.
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2968              		.loc 1 2380 1 is_stmt 1 view -0
 2969              		.cfi_startproc
 2970              		@ args = 0, pretend = 0, frame = 0
 2971              		@ frame_needed = 0, uses_anonymous_args = 0
 2972              		@ link register save eliminated.
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 2973              		.loc 1 2381 3 view .LVU928
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2974              		.loc 1 2382 3 view .LVU929
 2975              		.loc 1 2382 24 is_stmt 0 view .LVU930
 2976 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2977              	.LVL230:
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2978              		.loc 1 2384 3 is_stmt 1 view .LVU931
 2979              		.loc 1 2384 38 is_stmt 0 view .LVU932
 2980 0004 013B     		subs	r3, r3, #1
 2981              	.LVL231:
 2982              		.loc 1 2384 38 view .LVU933
 2983 0006 DBB2     		uxtb	r3, r3
 2984              		.loc 1 2384 6 view .LVU934
 2985 0008 012B     		cmp	r3, #1
 2986 000a 05D9     		bls	.L225
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Reset CAN error code */
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode = 0U;
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Update error code */
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2987              		.loc 1 2393 5 is_stmt 1 view .LVU935
 2988              		.loc 1 2393 21 is_stmt 0 view .LVU936
 2989 000c 436A     		ldr	r3, [r0, #36]
 2990 000e 43F48023 		orr	r3, r3, #262144
 2991 0012 4362     		str	r3, [r0, #36]
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     status = HAL_ERROR;
 2992              		.loc 1 2395 5 is_stmt 1 view .LVU937
 2993              	.LVL232:
 2994              		.loc 1 2395 12 is_stmt 0 view .LVU938
 2995 0014 0120     		movs	r0, #1
 2996              	.LVL233:
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return the status */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return status;
 2997              		.loc 1 2399 3 is_stmt 1 view .LVU939
ARM GAS  /tmp/ccqrYTdR.s 			page 121


2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2998              		.loc 1 2400 1 is_stmt 0 view .LVU940
 2999 0016 7047     		bx	lr
 3000              	.LVL234:
 3001              	.L225:
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 3002              		.loc 1 2388 5 is_stmt 1 view .LVU941
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 3003              		.loc 1 2388 21 is_stmt 0 view .LVU942
 3004 0018 0023     		movs	r3, #0
 3005 001a 4362     		str	r3, [r0, #36]
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3006              		.loc 1 2381 21 view .LVU943
 3007 001c 1846     		mov	r0, r3
 3008              	.LVL235:
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3009              		.loc 1 2381 21 view .LVU944
 3010 001e 7047     		bx	lr
 3011              		.cfi_endproc
 3012              	.LFE158:
 3014              		.text
 3015              	.Letext0:
 3016              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 3017              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 3018              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 3019              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 3020              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 3021              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccqrYTdR.s 			page 122


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_can.c
     /tmp/ccqrYTdR.s:18     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccqrYTdR.s:26     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccqrYTdR.s:42     .text.HAL_CAN_Init:0000000000000000 $t
     /tmp/ccqrYTdR.s:49     .text.HAL_CAN_Init:0000000000000000 HAL_CAN_Init
     /tmp/ccqrYTdR.s:339    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccqrYTdR.s:346    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccqrYTdR.s:361    .text.HAL_CAN_ConfigFilter:0000000000000000 $t
     /tmp/ccqrYTdR.s:368    .text.HAL_CAN_ConfigFilter:0000000000000000 HAL_CAN_ConfigFilter
     /tmp/ccqrYTdR.s:583    .text.HAL_CAN_Start:0000000000000000 $t
     /tmp/ccqrYTdR.s:590    .text.HAL_CAN_Start:0000000000000000 HAL_CAN_Start
     /tmp/ccqrYTdR.s:688    .text.HAL_CAN_Stop:0000000000000000 $t
     /tmp/ccqrYTdR.s:695    .text.HAL_CAN_Stop:0000000000000000 HAL_CAN_Stop
     /tmp/ccqrYTdR.s:794    .text.HAL_CAN_DeInit:0000000000000000 $t
     /tmp/ccqrYTdR.s:801    .text.HAL_CAN_DeInit:0000000000000000 HAL_CAN_DeInit
     /tmp/ccqrYTdR.s:857    .text.HAL_CAN_RequestSleep:0000000000000000 $t
     /tmp/ccqrYTdR.s:864    .text.HAL_CAN_RequestSleep:0000000000000000 HAL_CAN_RequestSleep
     /tmp/ccqrYTdR.s:913    .text.HAL_CAN_WakeUp:0000000000000000 $t
     /tmp/ccqrYTdR.s:920    .text.HAL_CAN_WakeUp:0000000000000000 HAL_CAN_WakeUp
     /tmp/ccqrYTdR.s:1015   .text.HAL_CAN_WakeUp:0000000000000054 $d
     /tmp/ccqrYTdR.s:1020   .text.HAL_CAN_IsSleepActive:0000000000000000 $t
     /tmp/ccqrYTdR.s:1027   .text.HAL_CAN_IsSleepActive:0000000000000000 HAL_CAN_IsSleepActive
     /tmp/ccqrYTdR.s:1077   .text.HAL_CAN_AddTxMessage:0000000000000000 $t
     /tmp/ccqrYTdR.s:1084   .text.HAL_CAN_AddTxMessage:0000000000000000 HAL_CAN_AddTxMessage
     /tmp/ccqrYTdR.s:1280   .text.HAL_CAN_AbortTxRequest:0000000000000000 $t
     /tmp/ccqrYTdR.s:1287   .text.HAL_CAN_AbortTxRequest:0000000000000000 HAL_CAN_AbortTxRequest
     /tmp/ccqrYTdR.s:1362   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 $t
     /tmp/ccqrYTdR.s:1369   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 HAL_CAN_GetTxMailboxesFreeLevel
     /tmp/ccqrYTdR.s:1440   .text.HAL_CAN_IsTxMessagePending:0000000000000000 $t
     /tmp/ccqrYTdR.s:1447   .text.HAL_CAN_IsTxMessagePending:0000000000000000 HAL_CAN_IsTxMessagePending
     /tmp/ccqrYTdR.s:1504   .text.HAL_CAN_GetTxTimestamp:0000000000000000 $t
     /tmp/ccqrYTdR.s:1511   .text.HAL_CAN_GetTxTimestamp:0000000000000000 HAL_CAN_GetTxTimestamp
     /tmp/ccqrYTdR.s:1586   .text.HAL_CAN_GetRxMessage:0000000000000000 $t
     /tmp/ccqrYTdR.s:1593   .text.HAL_CAN_GetRxMessage:0000000000000000 HAL_CAN_GetRxMessage
     /tmp/ccqrYTdR.s:1904   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 $t
     /tmp/ccqrYTdR.s:1911   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 HAL_CAN_GetRxFifoFillLevel
     /tmp/ccqrYTdR.s:1973   .text.HAL_CAN_ActivateNotification:0000000000000000 $t
     /tmp/ccqrYTdR.s:1980   .text.HAL_CAN_ActivateNotification:0000000000000000 HAL_CAN_ActivateNotification
     /tmp/ccqrYTdR.s:2032   .text.HAL_CAN_DeactivateNotification:0000000000000000 $t
     /tmp/ccqrYTdR.s:2039   .text.HAL_CAN_DeactivateNotification:0000000000000000 HAL_CAN_DeactivateNotification
     /tmp/ccqrYTdR.s:2091   .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2098   .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/ccqrYTdR.s:2113   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2120   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/ccqrYTdR.s:2135   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2142   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/ccqrYTdR.s:2157   .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2164   .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 HAL_CAN_TxMailbox0AbortCallback
     /tmp/ccqrYTdR.s:2179   .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2186   .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 HAL_CAN_TxMailbox1AbortCallback
     /tmp/ccqrYTdR.s:2201   .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2208   .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 HAL_CAN_TxMailbox2AbortCallback
     /tmp/ccqrYTdR.s:2223   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2230   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccqrYTdR.s:2245   .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2252   .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
ARM GAS  /tmp/ccqrYTdR.s 			page 123


     /tmp/ccqrYTdR.s:2267   .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2274   .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccqrYTdR.s:2289   .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2296   .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/ccqrYTdR.s:2311   .text.HAL_CAN_SleepCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2318   .text.HAL_CAN_SleepCallback:0000000000000000 HAL_CAN_SleepCallback
     /tmp/ccqrYTdR.s:2333   .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2340   .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 HAL_CAN_WakeUpFromRxMsgCallback
     /tmp/ccqrYTdR.s:2355   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccqrYTdR.s:2362   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccqrYTdR.s:2377   .text.HAL_CAN_IRQHandler:0000000000000000 $t
     /tmp/ccqrYTdR.s:2384   .text.HAL_CAN_IRQHandler:0000000000000000 HAL_CAN_IRQHandler
     /tmp/ccqrYTdR.s:2865   .text.HAL_CAN_GetState:0000000000000000 $t
     /tmp/ccqrYTdR.s:2872   .text.HAL_CAN_GetState:0000000000000000 HAL_CAN_GetState
     /tmp/ccqrYTdR.s:2933   .text.HAL_CAN_GetError:0000000000000000 $t
     /tmp/ccqrYTdR.s:2940   .text.HAL_CAN_GetError:0000000000000000 HAL_CAN_GetError
     /tmp/ccqrYTdR.s:2958   .text.HAL_CAN_ResetError:0000000000000000 $t
     /tmp/ccqrYTdR.s:2965   .text.HAL_CAN_ResetError:0000000000000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
